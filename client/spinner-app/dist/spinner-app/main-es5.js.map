{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/admin/admin.component.ts","webpack:///src/app/admin/admin.component.html","webpack:///src/app/animations/app.animations.ts","webpack:///src/app/app-routing/app-routing.module.ts","webpack:///src/app/app-routing/routes.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/backend-control/backend-control.component.ts","webpack:///src/app/backend-control/backend-control.component.html","webpack:///src/app/custom-script/custom-script.component.ts","webpack:///src/app/custom-script/custom-script.component.html","webpack:///src/app/customize-spinner/customize-spinner.component.ts","webpack:///src/app/customize-spinner/customize-spinner.component.html","webpack:///src/app/email-list/email-list.component.ts","webpack:///src/app/email-list/email-list.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/password-change/password-change.component.ts","webpack:///src/app/password-change/password-change.component.html","webpack:///src/app/services/center-image.service.ts","webpack:///src/app/services/change-password.service.ts","webpack:///src/app/services/csvconverter.service.ts","webpack:///src/app/services/custom-script.service.ts","webpack:///src/app/services/emails.service.ts","webpack:///src/app/services/guards/login.guard.ts","webpack:///src/app/services/header-footer.service.ts","webpack:///src/app/services/image.service.ts","webpack:///src/app/services/login.service.ts","webpack:///src/app/services/process-httpmsg.service.ts","webpack:///src/app/services/spinner-customizer-controller.service.ts","webpack:///src/app/services/spinner.service.ts","webpack:///src/app/shared/ImageSnippet.ts","webpack:///src/app/shared/baseHref.ts","webpack:///src/app/shared/form-spinner-controller.ts","webpack:///src/app/spinner/spinner.component.ts","webpack:///src/app/spinner/spinner.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AdminComponent","selector","templateUrl","styleUrls","visibility","transform","opacity","expand","AppRoutingModule","forRoot","declarations","imports","routes","path","component","children","canActivate","redirectTo","pathMatch","AppComponent","headerFooterService","metaService","Pagetitle","API_IMAGE_URL","favIcon","document","querySelector","baseHref","title","getHeaderFooter","subscribe","headerFooter","HeaderFooter","href","favicon","slice","setTitle","pageTitle","addTag","name","content","pageDescription","AppModule","provide","useValue","providers","bootstrap","BackendControlComponent","isMenuCollapsed","CustomScriptComponent","customScriptService","imageService","fb","formErrors","validationMessages","FormSuccessfullySend","createForm","HeaderFooterForm","group","header","required","footer","valueChanges","data","onValueChanged","form","field","hasOwnProperty","control","get","dirty","valid","messages","key","errors","StringOfImageUpload","SuccessfullyUpload","UnsuccessfullyUpload","image","files","srcElement","file","reader","FileReader","addEventListener","event","selectedFile","target","result","uploadImage","res","onSuccess","err","onError","readAsDataURL","deleteHeaderFooter","formCopy","value","replace","sendHeaderFooter","HFform","setTimeout","reset","onSubmit","processFile","animations","CustomizeSpinnerComponent","formBuilder","spinnerService","centerImageService","modalService","items","submitPressed","itIsImageFile","itIsTextField","itIsTextPopUp","itIsEmailPopUp","totalPercentage","isPercentageLessThanZero","isPercentageMoreThanHundred","SumOfPercentageEqualHundred","SumOfPercentageMoreThanHundred","percentageValues","sucessFormSubmition","sucessCenterImageSubmition","unsuccessSendingForm","closeResult","SpinnerformErrors","DidModalOpen","spinnerForm","spinnerArray","array","createFormFieldForCenterSpinnerImage","i","addControl","length","definingPercentage","SpinnerForm","isItImage","textFieldOne","percentage","pattern","min","max","isItEmail","textPopUp","emails","color","CenterImageForm","centerImage","keyPressEvent$","toArray","nativeElement","keyDownEvent$","keyupEvent$","inputEvent$","changeEvent$","focusEvent$","focusoutEvent$","allEvents$","pipe","Number","checkfullpercentage","percentageSum","reduce","a","b","open","modal","index","push","UploadFile","StringOfSpinnerCenter","SuccessSpinnerCenter","UnsuccessSpinnerCenter","selectedCenterFile","onSuccessCenter","onErrorCenter","pop","deleteSpinnerField","toString","fg","createSpFormGroup","idx","removeAt","deleteImageCenter","option","spinner","status","counter","forEach","element","email","deleteSpinner","sendSpinner","centerCopy","sendImageCenter","centerform","ariaLabelledBy","reason","getDismissReason","ESC","BACKDROP_CLICK","onChange","onSubmitCenterImage","ProcessCenterImage","deleteImage","fil","EmailListComponent","emailService","csvService","router","getEmails","EMAIL","EmailResult","emailAddress","firstName","lastName","updatedAt","createdAt","downloadFile","deleteEmails","navigate","exportCSV","DateSpin","DateCreate","EmailAddress","FirstName","LastName","DateCreation","Result","LoginComponent","loginservice","LoginError","LoginForm","username","password","user","controls","Login","resp","success","localStorage","setItem","token","NavbarComponent","clear","logout","PasswordChangeComponent","changePasswordservice","PasswordChangeError","PasswordChangeForm","oldpassword","newpassword","ChangePassword","CenterImageService","http","processHTTPMsgService","TOKEN","getItem","httpOptions","headers","URL_API","handleError","Form","post","providedIn","ChangePasswordService","passwordChange","oldPass","newPass","CSVconverterService","filename","csvData","ConvertToCSV","blob","Blob","type","dwldLink","createElement","url","URL","createObjectURL","isSafariBrowser","navigator","userAgent","indexOf","setAttribute","style","body","appendChild","click","removeChild","objArray","headerList","JSON","parse","str","row","line","head","CustomScriptService","EmailsService","LoginGuard","HeaderFooterService","URL_API_HEADER","ImageService","imageF","FormData","append","LoginService","userLogin","pass","ProcessHTTPMsgService","error","errMsg","ErrorEvent","message","statusText","SpinnerCustomizerControllerService","SpinnerService","URL_API_SPINNER","hex","r","parseInt","g","padZero","len","zeros","Array","join","ImageSnippet","src","pending","formSpinnerControl","isImage","textOne","isEmail","bgColor","SpinnerComponent","emailSevice","bgColorStyle","fontColor","fieldStyleNth","holder","imageOrientation","textOrientation","state","clicks","totalDegree","initialDegreesStart","initialDegreesEnd","degreesRotated","resultingField","validForm","getSpinner","getImageCenter","spinnerFields","SpinnerFields","angle","invertColor","degreeSpinn","newDegree","CalculateDegreesRotated","extraDegree","spining","ExposingResult","spiningRotate","ResultEmail","ResultText","sendEmailForm","FinalResult","sendEmails","emailForm","dismissAll","DegreesArray","sum","random","Math","random2","floor","environment","production","bootstrapModule","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.sass']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","import { trigger, state, style, animate, transition } from '@angular/animations';\r\n\r\nexport function visibility() {\r\n    return trigger('visibility', [\r\n        state('shown', style({\r\n          transform: 'scale(1.0)',\r\n          opacity: 1\r\n        })),\r\n        state('hidden', style({\r\n          transform: 'scale(0.5)',\r\n          opacity: 0\r\n        })),\r\n        transition('* => *', animate('0.5s ease-in-out'))\r\n      ])\r\n}\r\n\r\nexport function expand() {\r\n    return trigger('expand', [\r\n        state('*', style({ opacity: 1, transform: 'translateX(0)' })),\r\n        transition(':enter', [\r\n            style({ transform: 'translateY(-50%)', opacity:0 }),\r\n            animate('200ms ease-in', style({ opacity: 1, transform: 'translateX(0)' }))\r\n        ])\r\n    ]);\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { routes } from './routes';\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { LoginComponent } from '../login/login.component';\r\nimport { CustomizeSpinnerComponent } from '../customize-spinner/customize-spinner.component';\r\nimport { EmailListComponent } from '../email-list/email-list.component';\r\nimport { CustomScriptComponent } from '../custom-script/custom-script.component';\r\nimport { SpinnerComponent } from '../spinner/spinner.component';\r\nimport { BackendControlComponent } from '../backend-control/backend-control.component';\r\nimport { PasswordChangeComponent } from '../password-change/password-change.component';\r\nimport { AdminComponent } from '../admin/admin.component';\r\nimport { LoginGuard } from '../services/guards/login.guard';\r\n\r\nexport const routes: Routes = [\r\n    { path: 'spinner', component: SpinnerComponent },\r\n    { path: 'admin', component: AdminComponent,\r\n        children: [\r\n            { path: '', component: LoginComponent },\r\n            { path: 'bc', component: BackendControlComponent, canActivate: [LoginGuard],\r\n            children: [\r\n                { path: 'password-change', component: PasswordChangeComponent, canActivate: [LoginGuard] },\r\n                { path: 'customize-spinner', component: CustomizeSpinnerComponent, canActivate: [LoginGuard] },\r\n                { path: 'email-list', component: EmailListComponent, canActivate: [LoginGuard] },\r\n                { path: 'custom-script', component: CustomScriptComponent, canActivate: [LoginGuard]},\r\n            ] },\r\n        ] },\r\n    { path: '', redirectTo: '/spinner', pathMatch: 'full' },\r\n    { path: '**', redirectTo: '/spinner', pathMatch:'full' },\r\n    { path: 'admin', redirectTo: 'admin/login', pathMatch:'full' }\r\n];","import { Component, OnInit } from '@angular/core';\r\nimport { Meta, Title } from '@angular/platform-browser';\r\n\r\nimport { HeaderFooterService } from './services/header-footer.service';\r\nimport { baseHref } from './shared/baseHref';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit{\r\n\r\n  API_IMAGE_URL = `${baseHref}api/v1/imageUpload/`;\r\n  favIcon: HTMLLinkElement = document.querySelector('#favIcon');\r\n  baseHref: HTMLLinkElement = document.querySelector('#baseHref');\r\n  HeaderFooter: any;\r\n\r\n  title = 'spinner-app';\r\n  // code for testing backend, remove \"implements oninit\", constructor and ngOnInit later\r\n  testBackend:string;\r\n  constructor(    \r\n    private headerFooterService: HeaderFooterService,\r\n    private metaService: Meta,\r\n    private Pagetitle: Title) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getHeaderFooter();\r\n  }\r\n\r\n  getHeaderFooter() {\r\n    this.headerFooterService.getHeaderFooter()\r\n      .subscribe( headerFooter => {\r\n        this.HeaderFooter = headerFooter[0];\r\n        this.baseHref.href = baseHref;\r\n        this.favIcon.href = this.API_IMAGE_URL + this.HeaderFooter.favicon.slice(14);\r\n        this.Pagetitle.setTitle( this.HeaderFooter.pageTitle );\r\n        this.metaService.addTag({ name: 'description', content: this.HeaderFooter.pageDescription }); //Description\r\n      });\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>","import { BrowserModule, Meta, Title } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule, NoopAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { bootstrap } from 'bootstrap'\r\n\r\nimport { AppRoutingModule } from './app-routing/app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { CustomizeSpinnerComponent } from './customize-spinner/customize-spinner.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { EmailListComponent } from './email-list/email-list.component';\r\nimport { CustomScriptComponent } from './custom-script/custom-script.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { SpinnerComponent } from './spinner/spinner.component';\r\nimport { PasswordChangeComponent } from './password-change/password-change.component';\r\nimport { BackendControlComponent } from './backend-control/backend-control.component';\r\nimport { baseHref } from './shared/baseHref';\nimport { AdminComponent } from './admin/admin.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    CustomizeSpinnerComponent,\r\n    EmailListComponent,\r\n    CustomScriptComponent,\r\n    NavbarComponent,\r\n    SpinnerComponent,\r\n    PasswordChangeComponent,\r\n    BackendControlComponent,\r\n    AdminComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    NoopAnimationsModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule\r\n  ],\r\n  providers: [\r\n    Meta, \r\n    Title,\r\n    {provide: 'baseHref', useValue: baseHref}],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-backend-control',\r\n  templateUrl: './backend-control.component.html',\r\n  styleUrls: ['./backend-control.component.scss']\r\n})\r\nexport class BackendControlComponent implements OnInit {\r\n\r\n  public isMenuCollapsed = true;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12 col-lg-2 menuBar navbar navbar-expand-lg p-0\">\r\n        <div class=\"ButtonToggler\">\r\n            <button class=\"navbar-toggler pl-4\" type=\"button\" (click)=\"isMenuCollapsed = !isMenuCollapsed\">\r\n                <span class=\"btn btn-secondary\">&#9776;</span> \r\n            </button>\r\n        </div>\r\n\r\n        <div class=\"appNavbar d-flex justify-content-center align-items-start\">\r\n            <app-navbar\r\n            class=\"collapse navbar-collapse\" \r\n            id=\"navbarSupportedContent\" \r\n            [ngbCollapse]=\"isMenuCollapsed\">\r\n            </app-navbar>\r\n        </div>\r\n\r\n\r\n    </div>\r\n    <div class=\"col-12 col-lg-10 routerOutletContent\">\r\n        <router-outlet class=\"routerOutlet\"></router-outlet>\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n<!--\r\n<div class=\"col-12 col-lg-2 navbar navbar-expand-lg p-0 bg-dark\">\r\n    <button class=\"navbar-toggler pl-4\" type=\"button\" (click)=\"isMenuCollapsed = !isMenuCollapsed\">\r\n        <span class=\"btn btn-secondary\">&#9776;</span> \r\n    </button>\r\n    <app-navbar class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" [ngbCollapse]=\"isMenuCollapsed\"></app-navbar>\r\n</div>\r\n-->","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { CustomScriptService } from '../services/custom-script.service';\r\nimport { ImageService } from '../services/image.service';\r\nimport { ImageSnippet } from '../shared/ImageSnippet';\r\nimport { expand } from '../animations/app.animations';\r\n\r\n@Component({\r\n  selector: 'app-custom-script',\r\n  templateUrl: './custom-script.component.html',\r\n  styleUrls: ['./custom-script.component.scss'],\r\n  animations: [\r\n    expand()\r\n  ]\r\n})\r\nexport class CustomScriptComponent implements OnInit {\r\n\r\n\r\n  HeaderFooterForm: FormGroup;\r\n  form: any;\r\n  formCopy: any;\r\n  errMess: string;\r\n\r\n  selectedFile: ImageSnippet;\r\n  StringOfImageUpload: string;\r\n  SuccessfullyUpload: boolean;\r\n  UnsuccessfullyUpload: boolean;\r\n\r\n  formErrors = {\r\n    'header': '',\r\n    'footer': '',\r\n    'pageTitle': '',\r\n    'pageDescription': ''\r\n  };\r\n\r\n  validationMessages = {\r\n    'header': {\r\n      'required': 'Header is required.'\r\n    },\r\n    'footer': {\r\n      'required': 'Footer is required.'\r\n    },\r\n    'pageTitle': {\r\n      'required': 'Title is required.',\r\n    },\r\n    'pageDescription': {\r\n      'required': 'Description is required'\r\n    }\r\n  };\r\n\r\n\r\n  //Submition\r\n\r\n  FormSuccessfullySend: boolean = false;\r\n\r\n\r\n  constructor( \r\n    private customScriptService: CustomScriptService,\r\n    private imageService: ImageService,\r\n    private fb: FormBuilder) {\r\n      this.createForm();\r\n     }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  createForm() {\r\n    this.HeaderFooterForm = this.fb.group({\r\n      header: ['', [Validators.required]],\r\n      footer: ['', [Validators.required]],\r\n      pageTitle: ['', [Validators.required]],\r\n      pageDescription: ['', [Validators.required]],\r\n      favicon: ['']\r\n    });\r\n    this.HeaderFooterForm.valueChanges\r\n    .subscribe(data => this.onValueChanged(data));\r\n\r\n    this.onValueChanged(); // (re)set validation messages now\r\n  }\r\n\r\n  onValueChanged(data?: any) {\r\n    if (!this.HeaderFooterForm) { return; }\r\n    const form = this.HeaderFooterForm;\r\n    for (const field in this.formErrors) {\r\n      if (this.formErrors.hasOwnProperty(field)) {\r\n        // clear previous error message (if any)\r\n        this.formErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && control.dirty && !control.valid) {\r\n          const messages = this.validationMessages[field];\r\n          for ( const key in control.errors) {\r\n            if (control.errors.hasOwnProperty(key)) {\r\n              this.formErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  private onSuccess(path) {\r\n    this.StringOfImageUpload = path;\r\n    this.SuccessfullyUpload = true;\r\n    this.UnsuccessfullyUpload = false; \r\n  }\r\n\r\n  private onError() {\r\n    this.UnsuccessfullyUpload = true; \r\n    this.SuccessfullyUpload = false;\r\n  }\r\n\r\n\r\n  processFile(image: any) {\r\n    let files = image.srcElement.files;\r\n    let file: File = files[0];\r\n    let reader = new FileReader();\r\n    reader.addEventListener('load', (event: any) => {\r\n      this.selectedFile = new ImageSnippet(event.target.result, file);\r\n      this.imageService.uploadImage(this.selectedFile.file)\r\n        .subscribe((res) => {\r\n          this.onSuccess(res.path);\r\n        },\r\n        (err) => {\r\n          this.onError()\r\n          throw new Error(err);\r\n        });\r\n    });\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.FormSuccessfullySend = true;\r\n    this.customScriptService.deleteHeaderFooter().subscribe(()=> {\r\n      this.formCopy = this.HeaderFooterForm.value;\r\n      this.formCopy.favicon = this.StringOfImageUpload.replace(/\\\\/g, \"/\");\r\n      this.customScriptService.sendHeaderFooter(this.formCopy)\r\n        .subscribe(HFform => {\r\n          this.form = HFform;\r\n          setTimeout( () => {\r\n          this.FormSuccessfullySend = false\r\n          },2000);\r\n        }, err =>{\r\n          throw new Error('Error Sending the information about the spinner');\r\n        });\r\n      this.HeaderFooterForm.reset();\r\n    }, err => {\r\n      throw new Error('Error deleting the information of the previous spineer');\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"bgColor\">\r\n\r\n    <div class=\"container\">\r\n        <div class=\"title\">\r\n            <h2>Insert Custom Script</h2>\r\n        </div>\r\n    \r\n        <div class=\"row\">\r\n            <div class=\"col-10 mr-auto\" [hidden]=\"FormSuccessfullySend\" [@expand]>\r\n                <form [formGroup]=\"HeaderFooterForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <div class=\"mb-3\">\r\n                        <label for=\"header\">HEADER:</label>\r\n                        <textarea required formControlName=\"header\" class=\"form-control\" id=\"header\" name=\"header\" rows=\"3\"></textarea>\r\n                        \r\n                        <div class=\"ErrorMessage\" *ngIf=\"!formErrors.header\"></div>\r\n                        <div class=\"ErrorMessage\" *ngIf=\"formErrors.header\"><p style=\"color: red;\">{{ formErrors.header }}</p></div>\r\n \r\n                    </div>\r\n    \r\n                    <div class=\"mb-3\">\r\n                        <label for=\"footer\">Footer:</label>\r\n                        <textarea required formControlName=\"footer\" class=\"form-control\" id=\"footer\" name=\"footer\" rows=\"3\"></textarea>    \r\n                        <div class=\"ErrorMessage\" *ngIf=\"!formErrors.footer\"></div>\r\n                        <div class=\"ErrorMessage\" *ngIf=\"formErrors.footer\"><p style=\"color: red;\">{{ formErrors.footer }}</p></div>\r\n                    </div>\r\n    \r\n                    <div class=\"mb-3\">\r\n                        <label for=\"title\">Page title:</label>\r\n                        <input required formControlName=\"pageTitle\" type=\"text\" class=\"form-control\" id=\"title\" name=\"title\">  \r\n                        <div class=\"ErrorMessage\" *ngIf=\"!formErrors.pageTitle\"></div>\r\n                        <div class=\"ErrorMessage\" *ngIf=\"formErrors.pageTitle\"><p style=\"color: red;\">{{ formErrors.pageTitle }}</p></div>\r\n                    </div>\r\n    \r\n                    <div class=\"mb-3\">\r\n                        <label for=\"description\">Page description:</label>\r\n                        <textarea required formControlName=\"pageDescription\" class=\"form-control\" id=\"description\" name=\"description\" rows=\"3\"></textarea>    \r\n                        <div class=\"ErrorMessage\" *ngIf=\"!formErrors.pageDescription\"></div>\r\n                        <div class=\"ErrorMessage\" *ngIf=\"formErrors.pageDescription\"><p style=\"color: red;\">{{ formErrors.pageDescription }}</p></div>\r\n                    </div>\r\n    \r\n                    <div class=\"mb-3\">\r\n                        <label for=\"favicon\">Favicon:</label>\r\n\r\n                        <div class=\"ImageUploadAndMessage d-flex\" id=\"ImageUploadBox\">\r\n                            <div id=\"FileUploadBox\">\r\n                                <button type=\"button\" class=\"btn btn-sm btn-success\" (click)=\"favicon.click()\">\r\n                                    <span>File Upload</span>\r\n                                    <input \r\n                                    style=\"display:none;\"\r\n                                    #favicon\r\n                                    formControlName=\"favicon\" \r\n                                    type=\"file\" \r\n                                    (change)=\"processFile($event)\"> \r\n                                </button>\r\n                            </div>\r\n\r\n                            <div id=\"FileUploadMessageBox\" *ngIf=\"selectedFile\" class=\"ml-1\">\r\n                                <div *ngIf=\"SuccessfullyUpload\" class=\"alert alert-success d-flex justify-content-center\"> <span>&#10004;</span></div>\r\n                                <div *ngIf=\"UnsuccessfullyUpload\" class=\"alert alert-danger d-flex justify-content-center\"> <span>&#x2716;</span></div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n\r\n    \r\n                    <div class=\"d-flex justify-content-end\">\r\n                        <button class=\"btn btn-success\" [disabled]=\"HeaderFooterForm.invalid\">Save</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n            <div class=\"customScriptSuccessfullySend\" [hidden]=\"!FormSuccessfullySend\" [@expand]>\r\n                <h2>The custom script has been successfully saved</h2>\r\n            </div>\r\n        </div>\r\n    \r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit, QueryList, ViewChildren, ViewChild, ElementRef, OnChanges } from '@angular/core';\r\nimport { FormBuilder,FormArray, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { Observable, fromEvent, merge} from 'rxjs';\r\nimport { map, debounceTime, distinctUntilChanged, filter } from 'rxjs/operators';\r\nimport { SpinnerCustomizerControllerService } from '../services/spinner-customizer-controller.service';\r\nimport { ImageService } from '../services/image.service';\r\nimport { CenterImageService } from '../services/center-image.service';\r\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\r\nimport { formSpinnerControl } from '../shared/form-spinner-controller';\r\nimport { ImageSnippet } from '../shared/ImageSnippet';\r\nimport { visibility, expand } from '../animations/app.animations'\r\n\r\n@Component({\r\n  selector: 'app-customize-spinner',\r\n  templateUrl: './customize-spinner.component.html',\r\n  styleUrls: ['./customize-spinner.component.scss'],\r\n  animations: [\r\n    visibility(),\r\n    expand()\r\n  ]\r\n})\r\nexport class CustomizeSpinnerComponent implements OnInit {\r\n\r\n  //Collapse menu\r\n  public isMenuCollapsed = true;\r\n\r\n  // For number of field dropdown\r\n  items: any[] = [];\r\n\r\n  spinnerForm: FormGroup;\r\n  submitPressed = false;\r\n\r\n  // For imageUpload / Text Field\r\n  itIsImageFile: boolean[] = [false];\r\n  itIsTextField: boolean[] = [false];\r\n  // For imageUpload / Text Field\r\n\r\n  // For results dropdown\r\n  itIsTextPopUp: boolean[] = [false];\r\n  itIsEmailPopUp: boolean[] = [false];\r\n  // For results dropdown\r\n\r\n  // Form validations:\r\n  //controllerForm: FormGroup;\r\n  errMess: string;\r\n\r\n  // For image Upload\r\n  selectedFile: ImageSnippet;\r\n  StringOfImageUpload: UploadFile[] = [];\r\n  SuccessfullyUpload: boolean[] = [];\r\n  UnsuccessfullyUpload: boolean[] = [];\r\n\r\n  //For percentage 100%\r\n  totalPercentage: any[] = [];\r\n  percentageSum: number;\r\n  isPercentageLessThanZero: boolean[] =[ false];\r\n  isPercentageMoreThanHundred: boolean[] = [false];\r\n  SumOfPercentageEqualHundred: boolean = false;\r\n  SumOfPercentageMoreThanHundred: boolean=false;\r\n  percentageValues: number[] = [];\r\n  @ViewChildren('percentage') percentage: QueryList<any>;\r\n\r\n\r\n  //CENTER IMAGE\r\n  StringOfSpinnerCenter: String;\r\n  SuccessSpinnerCenter: boolean;\r\n  UnsuccessSpinnerCenter: boolean;\r\n  CenterImageForm: FormGroup;\r\n  selectedCenterFile: ImageSnippet;\r\n  centerCopy: any;\r\n  centerform: any;\r\n\r\n  //Submiting\r\n\r\n  sucessFormSubmition: boolean = false;\r\n  sucessCenterImageSubmition: boolean = false;\r\n  unsuccessSendingForm: boolean = false;\r\n  \r\n  closeResult = '';\r\n  @ViewChild('modal') modal;\r\n\r\n  constructor(\r\n    public formBuilder:FormBuilder,// For number of field dropdown\r\n    private spinnerService: SpinnerCustomizerControllerService,// Form validations\r\n    private imageService: ImageService,\r\n    private centerImageService: CenterImageService,\r\n    private modalService: NgbModal\r\n     ) {       \r\n    // Setting Form Array\r\n    this.spinnerForm = this.formBuilder.group({\r\n\t\t\tspinnerArray: this.formBuilder.array(\r\n\t\t\t\t[],\r\n\t\t\t\t[Validators.required])\r\n    });\r\n    \r\n    this.createFormFieldForCenterSpinnerImage();\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    // Sets default 6 boxes\r\n    for (let i = 0; i < 6; i++) {\r\n      this.addControl(i);\r\n    }\r\n    // For imageUpload / Text Field\r\n    let i = 0;\r\n    for (i=0; i<=this.items.length; i++) {\r\n      this.itIsImageFile[i] = true;\r\n    }\r\n    // For imageUpload / Text Field\r\n\r\n    // For number of field dropdown\r\n    for (i=0; i<=this.items.length; i++) {\r\n      this.itIsTextPopUp[i] = true;\r\n    }\r\n    // For number of field dropdown\r\n    this.definingPercentage();\r\n  }\r\n\r\n\tcreateSpFormGroup() {\r\n    let SpinnerForm = this.formBuilder.group({\r\n      isItImage: [true, [Validators.required]],\r\n      file: [''],\r\n      textFieldOne:[''],\r\n      percentage: ['', [Validators.required, Validators.pattern(/^[0-9]\\d*$/), Validators.min(0), Validators.max(100)]],\r\n      isItEmail: [true, [Validators.required]],\r\n      textPopUp: [''],\r\n      emails: [''],\r\n      color: ['', [Validators.required]],\r\n    });\r\n\r\n    SpinnerForm.valueChanges.subscribe( data => {\r\n      this.onValueChanged(SpinnerForm, data);\r\n    });\r\n    this.onValueChanged(SpinnerForm);\r\n\r\n    return SpinnerForm\r\n    \r\n  }\r\n  SpinnerformErrors = {\r\n    'isItImage': '',\r\n    'percentage': '',\r\n    'isItEmail': '',\r\n    'color': '',\r\n  };\r\n  validationMessages = {\r\n    'isItImage': {\r\n      'required': 'image or text is required.'\r\n    },\r\n    'percentage': {\r\n      'required': 'Percentage is required.',\r\n      'pattern': 'Value must be a number',\r\n      'min': 'Minumun possible value is 0%',\r\n      'max': 'Maximum possible value is 100%'\r\n    },\r\n    'isItEmail': {\r\n      'required': 'is it email? is required.'\r\n    },\r\n    'color': {\r\n      'required': 'color is required.'\r\n    }\r\n  }\r\n\r\n  createFormFieldForCenterSpinnerImage() {\r\n    this.CenterImageForm = this.formBuilder.group({\r\n      centerImage: ['']\r\n    });\r\n  }\r\n\r\n  \r\n  DidModalOpen:boolean = false;\r\n\r\n\r\n  MessageErrorChange(i) {\r\n\r\n    const keyPressEvent$  = fromEvent(this.percentage.toArray()[i].nativeElement, 'keypress');\r\n    const keyDownEvent$  = fromEvent(this.percentage.toArray()[i].nativeElement, 'keydown');\r\n    const keyupEvent$  = fromEvent(this.percentage.toArray()[i].nativeElement, 'keyup');\r\n    const inputEvent$  = fromEvent(this.percentage.toArray()[i].nativeElement, 'input');\r\n    const changeEvent$  = fromEvent(this.percentage.toArray()[i].nativeElement, 'change');\r\n    const focusEvent$  = fromEvent(this.percentage.toArray()[i].nativeElement, 'focus');\r\n    const focusoutEvent$  = fromEvent(this.percentage.toArray()[i].nativeElement, 'blur');\r\n    \r\n    const allEvents$ = merge(   \r\n      changeEvent$,\r\n      inputEvent$,\r\n      keyDownEvent$,\r\n      keyPressEvent$,   \r\n      keyupEvent$,\r\n      focusEvent$,\r\n      focusoutEvent$\r\n    );\r\n    \r\n    allEvents$\r\n      .pipe(\r\n        map((event: any) => {\r\n\r\n        let value = Number(event.target.value);\r\n        if (value > 100) {\r\n          event.target.value = 100;\r\n          this.isPercentageMoreThanHundred[i] = true;\r\n          this.percentageValues[i] = value;\r\n        } else if (value < 0) {\r\n          event.target.value = 0;\r\n          this.isPercentageLessThanZero[i] = true;\r\n        } else if (value >= 0 && value <= 100) {\r\n          this.isPercentageMoreThanHundred[i] = false;\r\n          this.isPercentageLessThanZero[i] = false;\r\n          this.percentageValues[i] = value;\r\n        }\r\n\r\n        this.checkfullpercentage()\r\n      }),\r\n      debounceTime(1)).subscribe();\r\n      \r\n      this.DidModalOpen = false;\r\n  }\r\n\r\n  checkfullpercentage(){\r\n    this.percentageSum = this.percentageValues.reduce(function(a, b){\r\n      return a + b;\r\n    }, 0);\r\n    if(this.percentageSum === 100) {\r\n      this.SumOfPercentageEqualHundred = true;\r\n      this.SumOfPercentageMoreThanHundred = false;\r\n    } else if(this.percentageSum <= 100 ) {\r\n      this.SumOfPercentageEqualHundred = false;\r\n      this.SumOfPercentageMoreThanHundred = true\r\n    } else if(this.percentageSum > 100) {\r\n      this.SumOfPercentageMoreThanHundred = true\r\n      this.SumOfPercentageEqualHundred = false;\r\n      if(this.DidModalOpen === false) {\r\n        this.open(this.modal);\r\n        this.DidModalOpen = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  definingPercentage() {\r\n    for (let i=0; i<this.items.length; i++) {\r\n      this.isPercentageMoreThanHundred.length = i\r\n      this.percentageValues.length = i\r\n      this.isPercentageLessThanZero.length = i;\r\n      this.isPercentageMoreThanHundred[i] = false;\r\n      this.isPercentageLessThanZero[i]=false\r\n      this.percentageValues[i] = 0;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  onValueChanged(SpinnerForm ,data?: any) {\r\n    if (!SpinnerForm) {return;}\r\n    const form = SpinnerForm;\r\n    for (const field in this.SpinnerformErrors) {\r\n      if (this.SpinnerformErrors.hasOwnProperty(field)) {\r\n        // clear previous error message (if any)\r\n        this.SpinnerformErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && control.dirty && !control.valid) {\r\n          const messages = this.validationMessages[field];\r\n          for (const key in control.errors) {\r\n            if (control.errors.hasOwnProperty(key)) {\r\n              this.SpinnerformErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n   //Image Upload\r\n  private onSuccess(index, path) {\r\n    this.StringOfImageUpload.push(new UploadFile(index, path));\r\n    this.SuccessfullyUpload[index] = true;\r\n    this.UnsuccessfullyUpload[index] = false; \r\n  }\r\n\r\n  private onError(index) {\r\n    this.UnsuccessfullyUpload[index] = true; \r\n    this.SuccessfullyUpload[index] = false;\r\n  }\r\n\r\n  processFile(image: any, index) {\r\n      let files = image.srcElement.files;\r\n      let file: File = files[0];\r\n      let reader = new FileReader();\r\n      reader.addEventListener('load', (event: any) => {\r\n        this.selectedFile = new ImageSnippet(event.target.result, file);\r\n        this.imageService.uploadImage(this.selectedFile.file)\r\n          .subscribe((res) => {\r\n            this.onSuccess(index, res.path);\r\n          },\r\n          (err) => {\r\n            this.onError(index)\r\n            throw new Error(err);\r\n          });\r\n      });\r\n      reader.readAsDataURL(file);\r\n  }\r\n\r\n\r\n  //Center spinner image\r\n\r\n  private onSuccessCenter(path) {\r\n    this.StringOfSpinnerCenter = path;\r\n    this.SuccessSpinnerCenter = true;\r\n    this.UnsuccessSpinnerCenter = false; \r\n  }\r\n\r\n  private onErrorCenter() {\r\n    this.UnsuccessSpinnerCenter = true; \r\n    this.SuccessSpinnerCenter = false;\r\n  }\r\n\r\n  ProcessCenterImage(image: any) {\r\n    let files = image.srcElement.files;\r\n    let file: File = files[0];\r\n    let reader = new FileReader();\r\n    reader.addEventListener('load', (event: any) => {\r\n      this.selectedCenterFile = new ImageSnippet(event.target.result, file);\r\n      this.imageService.uploadImage(this.selectedCenterFile.file)\r\n        .subscribe((res) => {\r\n          this.onSuccessCenter(res.path);\r\n        },\r\n        (err) => {\r\n          this.onErrorCenter()\r\n          throw new Error(err);\r\n        });\r\n    });\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  /////\r\n  \r\n  get spinnerArray(): FormArray {\r\n\t\tif ( this.spinnerForm) {\r\n      return this.spinnerForm.get('spinnerArray') as FormArray;\r\n    }\r\n\t}\r\n  // For number of field dropdown\r\n  onChange(i) {\r\n    this.items.length = 0;   // eliminates defalut setting before adding other\r\n    this.spinnerForm.reset();\r\n    while(this.spinnerArray.length > 0) {\r\n      this.items.pop();\r\n      this.deleteSpinnerField(0);\r\n    }\r\n    while(i > 0) {\r\n      this.addControl(i);\r\n      i--;\r\n    }\r\n    for (i=0; i<=this.items.length; i++) {\r\n      this.itIsImageFile[i] = true;\r\n    }\r\n    for (i=0; i<=this.items.length; i++) {\r\n      this.itIsTextPopUp[i] = true;\r\n    }\r\n    this.definingPercentage();\r\n  }\r\n  addControl(i) {\r\n    this.items.push({id: i.toString()})\r\n\t\tlet fg = this.createSpFormGroup();\r\n\t\tif(this.spinnerArray) {\r\n      this.spinnerArray.push(fg);\r\n    }\r\n\r\n  }\r\n\r\n  deleteSpinnerField(idx: number) {\r\n\t\tthis.spinnerArray.removeAt(idx);\r\n  }\r\n\r\n  deleteImage() {\r\n    this.centerImageService.deleteImageCenter()\r\n      .subscribe(() => {\r\n        \r\n      }, err => {\r\n        throw new Error('Error deleting the information of the previous spineer');\r\n      });\r\n  }\r\n  \r\n  // For number of field dropdown\r\n\r\n  //For image text selection\r\n  onChangeImage(option, i) {\r\n      if ( option === \"0: true\" ) {\r\n        this.itIsImageFile[i] = true;\r\n        this.itIsTextField[i] = false;\r\n        \r\n      }\r\n      else if( option === \"1: false\") {\r\n        this.itIsImageFile[i] = false;\r\n        this.itIsTextField[i] = true;\r\n      }\r\n  }\r\n  //For image text selection\r\n\r\n  // For number of field dropdown\r\n  onChangeResult(option, i) {\r\n    if ( option === 'text' ) {\r\n      this.itIsTextPopUp[i] = true;\r\n      this.itIsEmailPopUp[i] = false;\r\n    }\r\n    else if( option === 'email' ) {\r\n      this.itIsTextPopUp[i] = false;\r\n      this.itIsEmailPopUp[i] = true;\r\n    }\r\n}\r\n  // For number of field dropdown\r\n\r\n  onSubmit() {\r\n    let spinner: Array<formSpinnerControl> = [];\r\n    this.submitPressed = true;\r\n    \r\n    // if a field outside the array is added, change this to this.spinnerForm.value\r\n    if (this.spinnerForm.status === \"VALID\") {\r\n\r\n      if (this.percentageSum === 100) {\r\n        \r\n      let counter = 0;\r\n  \r\n      this.spinnerArray.value.forEach(element => {\r\n\r\n        if( element.color === '') {\r\n          element.color = '#000000';\r\n        }\r\n\r\n        let field = new formSpinnerControl(\r\n          element.isItImage,\r\n          element.image,\r\n          element.textFieldOne,\r\n          element.percentage,\r\n          element.isItEmail,\r\n          element.textPopUp,\r\n          element.email,\r\n          element.color\r\n        )\r\n\r\n        this.totalPercentage[counter] = element.percentage;\r\n\r\n        this.StringOfImageUpload.forEach((file)=>{\r\n          if(file.index == counter){\r\n            field.image = file.image;\r\n          } \r\n        })\r\n        spinner.push(field);\r\n        counter++;\r\n      });\r\n\r\n      this.percentageSum = this.totalPercentage.reduce(function(a, b){\r\n        return a + b;\r\n      }, 0);\r\n\r\n      this.sucessFormSubmition = true;\r\n\r\n      this.spinnerService.deleteSpinner().subscribe(() => {\r\n          this.spinnerService.sendSpinner(spinner).subscribe((res) => {\r\n            setTimeout( () => {\r\n              this.sucessFormSubmition = false;\r\n            }, 2000);\r\n            this.spinnerForm.reset();\r\n            this.StringOfImageUpload = []; // Resets the StringOfImageUpload array\r\n          }, err =>{\r\n            throw new Error('Error Sending the information about the spinner');\r\n          });\r\n        }, err => {\r\n          throw new Error('Error deleting the information of the previous spineer');\r\n        });\r\n      } else {\r\n        throw new Error('Error Percentage must add up 100%');\r\n      }\r\n    } else if (this.spinnerForm.status === \"INVALID\") {\r\n\r\n      this.unsuccessSendingForm = true;\r\n      setTimeout( () => {\r\n        this.unsuccessSendingForm = false;\r\n      }, 2000);\r\n    };\r\n  }\r\n\r\n  //sucessCenterImageSubmition\r\n\r\n  onSubmitCenterImage() {\r\n    this.sucessCenterImageSubmition = true;\r\n    this.centerImageService.deleteImageCenter()\r\n      .subscribe(() => {\r\n        this.centerCopy = this.CenterImageForm.value;\r\n        this.centerCopy.centerImage = this.StringOfSpinnerCenter.replace(/\\\\/g, \"/\");\r\n        this.centerImageService.sendImageCenter(this.centerCopy)\r\n        .subscribe(HFform => {\r\n          setTimeout( () => {\r\n            this.sucessCenterImageSubmition = false;\r\n          }, 2000);\r\n          this.centerform = HFform;\r\n        }, err =>{\r\n          throw new Error('Error Sending the information about the spinner');\r\n        });\r\n      this.CenterImageForm.reset();\r\n      }, err => {\r\n        throw new Error('Error deleting the information of the previous spineer');\r\n      });\r\n  }\r\n\r\n  open(content) {\r\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport class UploadFile {\r\n  index: number;\r\n  image: any;\r\n\r\n  constructor(idx, fil){\r\n    this.index = idx;\r\n    this.image = fil;\r\n  }\r\n}\r\n","<div class=\"bgColor\">\r\n\r\n    <div class=\"container menu1\">\r\n    \r\n        <h2>Customize the spinner</h2>\r\n    \r\n        <div class=\"row my-5\">\r\n            <div class=\"col-12\">\r\n      \r\n                <div id=\"settingNumber\">\r\n                    <div>\r\n                        <label class=\"mr-3\" for=\"numberOptions\">Number of fields on the spinner </label>\r\n                        <select matNativeControl name=\"numberOptions\" required (change)=\"onChange($event.target.value)\">\r\n                            <option value=\"2\">2</option>\r\n                            <option value=\"3\">3</option>\r\n                            <option value=\"4\">4</option>\r\n                            <option value=\"5\">5</option>\r\n                            <option value=\"6\" selected>6</option>\r\n                            <option value=\"7\">7</option>\r\n                            <option value=\"8\">8</option>\r\n                            <option value=\"9\">9</option>\r\n                            <option value=\"10\">10</option>\r\n                            <option value=\"11\">11</option>\r\n                            <option value=\"12\">12</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"col-12\">\r\n            <form [formGroup]=\"spinnerForm\" (ngSubmit)=\"onSubmit()\" [hidden]=\"sucessFormSubmition\" [@expand]>\r\n                <div>\r\n\r\n                    <div>\r\n                        <table class=\"table table-responsive-lg table-borderless\">\r\n                            <div formArrayName=\"spinnerArray\">\r\n\r\n\r\n                                <tr>\r\n                                    <th><label for=\"ImageOption\">Input type</label></th>\r\n                                    <th><label for=\"\">File / Text</label></th>\r\n                                    <th><label for=\"\">Percentage</label></th>\r\n                                    <th><label for=\"\">Result</label></th>\r\n                                    <th><label for=\"\">Text</label></th>\r\n                                    <th><label for=\"\">bg Color</label></th>\r\n                                </tr>\r\n                                <tr *ngFor=\"let spinnerfield of spinnerArray.controls; let i = index\" [formGroupName]=\"i\">\r\n\r\n                                    <td>\r\n                                        <select class=\"inputType\" formControlName=\"isItImage\" required (change)=\"onChangeImage($event.target.value, i)\">\r\n                                            <option [ngValue]=\"true\" selected>Image</option>\r\n                                            <option [ngValue]=\"false\">Text</option>\r\n                                        </select>\r\n                                    </td>\r\n\r\n                                    <td *ngIf=\"itIsImageFile[i]\">\r\n                                        <div class=\"ImageUploadAndMessage d-flex\" id=\"ImageUploadBox\">\r\n\r\n                                            <div id=\"FileUploadBox\">\r\n                                                <button type=\"button\" class=\"btn btn-sm btn-success btnInput\" (click)=\"imageInput.click()\">\r\n                                                    <span>File Upload</span>\r\n                                                    <input #imageInput style=\"display:none;\"\r\n                                                    formControlName=\"file\"\r\n                                                    type=\"file\" \r\n                                                    accept=\"image/*\"\r\n                                                    name=\"imageFile\"\r\n                                                    (change)=\"processFile($event, i)\">\r\n                                                </button>\r\n                                            </div>\r\n    \r\n                                            <div id=\"FileUploadMessageBox\" class=\"ml-1\">\r\n                                                <div *ngIf=\"SuccessfullyUpload[i]\" class=\"alert alert-success d-flex justify-content-center\"> <span>&#10004;</span></div>\r\n                                                <div *ngIf=\"UnsuccessfullyUpload[i]\" class=\"alert alert-danger d-flex justify-content-center\"> <span>&#x2716;</span></div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </td>\r\n\r\n                                    <td *ngIf=\"itIsTextField[i]\">\r\n                                        <div class=\"ImageUploadAndMessage d-flex\">\r\n                                            <input class=\"textFieldOne\" formControlName=\"textFieldOne\" type=\"text\" name=\"textField\">\r\n                                        </div>\r\n                                    </td>\r\n\r\n                                    <td>\r\n                                        <div class=\"percentageContainer d-flex\">\r\n\r\n                                            <input formControlName=\"percentage\" type=\"number\" name=\"textField\" \r\n                                            class=\"PercentageInput\"\r\n                                            min=\"0\" max=\"100\" \r\n                                            [class.invalid]=\"spinnerfield.controls.percentage.hasError('required')  && submitPressed\" \r\n                                            (keyup)=\"MessageErrorChange(i)\" (click)=\"MessageErrorChange(i)\"\r\n                                            #percentage>\r\n\r\n                                            <div class=\"errorPercentageMessages ml-1 d-flex justify-content-center\" \r\n                                            *ngIf=\"isPercentageLessThanZero[i]\">\r\n                                                <p> Min 0% </p>\r\n                                            </div>\r\n                                            <div class=\"errorPercentageMessages ml-1 d-flex justify-content-center\" \r\n                                            *ngIf=\"isPercentageMoreThanHundred[i]\">\r\n                                                <p> Max 100% </p>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </td>\r\n\r\n\r\n                                    <td>\r\n                                        <select formControlName=\"isItEmail\" name=\"resultOption\" required (change)=\"onChangeResult($event.target.value, i)\">\r\n                                            <option [ngValue]=\"false\" selected>Text Popup</option>\r\n                                            <option [ngValue]=\"true\">Email Popup</option>\r\n                                        </select>\r\n                                    </td>\r\n\r\n                                    <td>\r\n                                        <input class=\"textPopup\" formControlName=\"textPopUp\"  type=\"text\" name=\"imageFile\">\r\n                                    </td>\r\n            \r\n\r\n                                    <td>\r\n                                        <div class=\"colorInputContainer\">\r\n                                            <input class=\"colorInput\" formControlName=\"color\" type=\"color\" [class.invalid]=\"spinnerfield.controls.color.hasError('required')  && submitPressed\">\r\n                                        </div>\r\n                                    </td>\r\n\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                    <td  colspan=\"3\">\r\n                                        <div [hidden]=\"!unsuccessSendingForm\" [@expand]>\r\n                                            <h5 style=\"color: red; font-size: 25px;\">All percentages & colors are required</h5>\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n\r\n                                        <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"spinnerForm.invalid\">\r\n                                            Save\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n\r\n                            </div>\r\n\r\n                        </table>\r\n\r\n                    </div>\r\n\r\n                    \r\n                    <div class=\"d-flex justify-content-end mt-2\">\r\n\r\n\r\n\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n            </form>\r\n\r\n            <div class=\"successFormSend\" [hidden]=\"!sucessFormSubmition\" [@expand]>\r\n                <h2>The spinner fields data has been successfully saved</h2>\r\n            </div>\r\n\r\n            <h3 class=\"mt-3\">Image for middle of spinner</h3>\r\n\r\n            <form [formGroup]=\"CenterImageForm\" (ngSubmit)=\"onSubmitCenterImage()\" [hidden]=\"sucessCenterImageSubmition\" [@expand]>\r\n\r\n                <div class=\"d-flex\">\r\n                    <div class=\"ImageUploadAndMessage d-flex mr-3\" id=\"ImageUploadBox\" >\r\n                        <div id=\"FileUploadBox\">\r\n                            <button type=\"button\" class=\"btn btn-sm btn-success\" (click)=\"centerimageInput.click()\">\r\n                                <span>File Upload</span>\r\n            \r\n                                <input #centerimageInput\r\n                                style=\"display:none;\"\r\n                                formControlName=\"centerImage\" \r\n                                type=\"file\" \r\n                                (change)=\"ProcessCenterImage($event)\">\r\n            \r\n                            </button>\r\n                        </div>\r\n    \r\n                        <div id=\"FileUploadMessageBox\" class=\"ml-1\">\r\n                            <div *ngIf=\"SuccessSpinnerCenter\" class=\"alert alert-success d-flex justify-content-center\"> <span>&#10004;</span></div>\r\n                            <div *ngIf=\"UnsuccessSpinnerCenter\" class=\"alert alert-danger d-flex justify-content-center\"> <span>&#x2716;</span></div>\r\n                        </div>\r\n                    </div>\r\n\r\n        \r\n    \r\n                    <div class=\"ml-3\">\r\n                        <button \r\n                        type=\"submit\" \r\n                        class=\"btn btn-success btn-sm ml-auto ml-2\">\r\n                            Save\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div class=\"ml-3\">\r\n                        <button class=\"btn btn-danger btn-sm\" (click)=\"deleteImage()\" \r\n                        >Delete image</button>\r\n                    </div>\r\n\r\n                </div>\r\n                \r\n            </form>\r\n            <div class=\"successImageSend\" [hidden]=\"!sucessCenterImageSubmition\" [@expand]>\r\n                <h4>The spinner center image has been successfully saved</h4>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    \r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n<ng-template #modal let-modal>\r\n    <div class=\"modal-header\">\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <p>You have exceed the maximum value, Total percentage must be equal to 100%</p>   \r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-success\" (click)=\"modal.close('Save click')\">Ok</button>\r\n      </div>\r\n  </ng-template>","import { Component, OnInit } from '@angular/core';\r\nimport { CSVconverterService } from '../services/csvconverter.service';\r\nimport { Router } from '@angular/router';\r\nimport { EmailsService } from '../services/emails.service';\r\n\r\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-email-list',\r\n  templateUrl: './email-list.component.html',\r\n  styleUrls: ['./email-list.component.scss']\r\n})\r\nexport class EmailListComponent implements OnInit {\r\n\r\n  closeResult = '';\r\n\r\n  emails: EmailResult [] = [];\r\n\r\n  constructor( private emailService: EmailsService,\r\n               private csvService: CSVconverterService,\r\n               private modalService: NgbModal,\r\n               private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getEmails();\r\n  }\r\n\r\n  getEmails(): void {\r\n    this.emailService.getEmails()\r\n      .subscribe( emails => {\r\n        emails.forEach(email => {\r\n          const EMAIL = new EmailResult(email.emailAddress,\r\n                                        email.firstName,\r\n                                        email.lastName,\r\n                                        email.updatedAt,\r\n                                        email.createdAt,\r\n                                        email.result);\r\n          this.emails.push(EMAIL)\r\n        });\r\n      })\r\n  }\r\n\r\n  exportCSV(){\r\n    this.csvService.downloadFile(this.emails);\r\n  }\r\n\r\n  deleteResults() {\r\n    this.emailService.deleteEmails()\r\n      .subscribe(() => {}, err => {\r\n        throw new Error('Error deleting the information');\r\n      });\r\n    this.router.navigate(['backend-control/email-list']);\r\n  }\r\n\r\n  //modal\r\n  open(content) {\r\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nclass EmailResult { \r\n\r\n  EmailAddress: string;\r\n  FirstName: string;\r\n  LastName: string;\r\n  DateSpin: string;\r\n  DateCreation: string;\r\n  Result: string;\r\n\r\n  constructor(email, firstName, lastName, DateSpin, DateCreate, result) {\r\n    this.EmailAddress = email;\r\n    this.FirstName = firstName;\r\n    this.LastName = lastName;\r\n    this.DateSpin = DateSpin;\r\n    this.DateCreation = DateCreate;\r\n    this.Result = result;\r\n  }\r\n}\r\n","<div class=\"bgColor\">\r\n\r\n    <div class=\"container col-12 col-lg-10\">\r\n        <div id=\"title\">\r\n            <h2>List of collected Emails</h2>\r\n        </div>\r\n    \r\n        <div class=\"row\">\r\n            <div class=\"col-12 d-flex justify-content-end mb-5\">\r\n                <button class=\"btn btn-info\" (click)=\"exportCSV()\">Export results csv/excel</button>\r\n            </div>\r\n            <div class=\"col-12\" *ngIf=\"emails\">\r\n                <table class=\"table table-sm table-responsive-lg table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Email Address</th>\r\n                            <th>First Name</th>\r\n                            <th>Last Name</th>\r\n                            <th>Date Spin</th>\r\n                            <th>Result</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let email of emails\">\r\n                            <td>{{email.EmailAddress}}</td>\r\n                            <td>{{email.FirstName}}</td>\r\n                            <td>{{email.LastName}}</td>\r\n                            <td>{{email.DateSpin | date}}</td>\r\n                            <td>{{email.Result}}</td>\r\n                        </tr>\r\n                    </tbody>\r\n    \r\n    \r\n                </table>\r\n            </div>\r\n\r\n            <div class=\"col-12 d-flex justify-content-end mt-5\">\r\n                <button class=\"btn btn-danger\" (click)=\"open(content)\">Delete Collected Data</button>\r\n            </div>\r\n            \r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<ng-template #content let-modal>\r\n    <div class=\"modal-header\">\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n\r\n        <h2>Are you sure you want to delete the collected data?</h2>\r\n\r\n        <div class=\"mb-4\">\r\n            <button type=\"button\" class=\"btn btn-danger mr-5\" (click)=\"deleteResults()\">Yes</button>\r\n            \r\n            <button type=\"button\" class=\"btn btn-info\" (click)=\"modal.close('Save click')\">No</button>\r\n        </div>\r\n\r\n        <button class=\"btn btn-secondary\"(click)=\"modal.close('Save click')\">Close</button>\r\n    </div>\r\n  </ng-template>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { LoginService, userLogin } from '../services/login.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  LoginForm: FormGroup;\r\n  LoginError: boolean;\r\n\r\n  constructor( \r\n    private fb: FormBuilder,\r\n    private loginservice: LoginService,\r\n    private router: Router) {\r\n      this.createForm();\r\n     }\r\n\r\n  ngOnInit(): void {\r\n    this.LoginError = false;\r\n  }\r\n\r\n  createForm() {\r\n    this.LoginForm = this.fb.group({\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  onSubmit(){\r\n    if(this.LoginForm.status === \"VALID\"){\r\n      const user = new userLogin(this.LoginForm.controls.username.value, \r\n                                this.LoginForm.controls.password.value)\r\n      \r\n      this.loginservice.Login(user).subscribe((resp: any) => {\r\n         if(resp.success === true) {\r\n           this.LoginError = false;\r\n           localStorage.setItem(\"userToken\", resp.token);\r\n           this.router.navigate(['admin/bc/customize-spinner']);\r\n         }\r\n      }, err => {\r\n        this.LoginError = true;\r\n        \r\n      })\r\n    }\r\n  }\r\n}\r\n","<div class=\"container\">\r\n\r\n\r\n    <div class=\"align-middle\">\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <div class=\"title d-flex justify-content-center\">\r\n                    <h1>LOGIN</h1>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    \r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <div class=\"formContent\">\r\n                    <form [formGroup]=\"LoginForm\" (ngSubmit)=\"onSubmit()\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12 d-flex justify-content-center mb-2\">\r\n                                <div class=\"field\">\r\n                                    <input formControlName=\"username\" type=\"text\" placeholder=\"Username\" required>\r\n                                </div>\r\n                            </div>\r\n    \r\n                            <div class=\"col-12 d-flex justify-content-center mb-2\">\r\n                                <div class=\"field\">\r\n                                    <input formControlName=\"password\" type=\"password\" placeholder=\"Enter your password\" required>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-12 d-flex justify-content-center\">\r\n                                <div class=\"field d-flex justify-content-end\">\r\n                                    <button class=\"btn btn-sm btn-danger\">Login</button>\r\n                                </div>\r\n                            </div>\r\n    \r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div class=\"errorMessage\" *ngIf=\"LoginError\">\r\n                    <p>Wrong Username or Password</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n    \r\n\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.scss']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor(\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  logout(){\r\n    localStorage.clear();\r\n    this.router.navigate(['/admin']);\r\n  }\r\n}\r\n","<div class=\"container d-flex justify-content-lg-center\">\r\n\r\n  <div>\r\n    <div class=\"image img-fluid d-none d-lg-block\">\r\n      <img src=\"https://dam.ngenespanol.com/wp-content/uploads/2019/06/arbol-mas-alto-del-mundo-770x395.png\" alt=\"Fixed Photo\">\r\n    </div>\r\n    <div class=\"mt-3\">\r\n      <ul class=\"nav flex-column\">\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/spinner\">SPINNER</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/admin/bc/customize-spinner\">CUSTOMIZE SPINNER</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/admin/bc/email-list\">EMAIL LIST</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/admin/bc/custom-script\">CUSTOM SCRIPIT</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/admin/bc/password-change\">CHANGE PASSWORD</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n              <a class=\"nav-link\" href=\"#\">SUPPORT</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n              <a class=\"nav-link\" href=\"#\">REQUEST FEATURE</a>\r\n          </li>\r\n            \r\n        </ul>\r\n    </div>\r\n\r\n    <button class=\"btn btn-danger mt-4 ml-auto\" (click)=\"logout()\">Logout</button>\r\n  </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\r\nimport { ChangePasswordService, passwordChange } from '../services/change-password.service';\r\n\r\n@Component({\r\n  selector: 'app-password-change',\r\n  templateUrl: './password-change.component.html',\r\n  styleUrls: ['./password-change.component.scss']\r\n})\r\nexport class PasswordChangeComponent implements OnInit {\r\n\r\n  PasswordChangeForm: FormGroup;\r\n  PasswordChangeError: boolean;\r\n  closeResult = '';\r\n  @ViewChild('modal') modal;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private changePasswordservice: ChangePasswordService,\r\n    private router: Router,\r\n    private modalService: NgbModal\r\n  ) {\r\n    this.createForm();\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.PasswordChangeError = false;\r\n  }\r\n\r\n  createForm() {\r\n    this.PasswordChangeForm = this.fb.group({\r\n      username: ['', Validators.required],\r\n      oldpassword: ['', Validators.required],\r\n      newpassword: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  open(content) {\r\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n\r\n  onSubmit(){\r\n    if(this.PasswordChangeForm.status === \"VALID\"){\r\n      const user = new passwordChange(\r\n        this.PasswordChangeForm.controls.username.value, \r\n        this.PasswordChangeForm.controls.oldpassword.value,\r\n        this.PasswordChangeForm.controls.newpassword.value);\r\n      \r\n      this.changePasswordservice.ChangePassword(user).subscribe((resp: any) => {\r\n         if(resp.success === true) {\r\n           this.PasswordChangeError = false;\r\n           this.open(this.modal)\r\n         }\r\n      }, err => {\r\n        this.PasswordChangeError = true;\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n\r\n    <div class=\"align-middle\">\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <div class=\"title d-flex justify-content-center\">\r\n                    <h1>LOGIN</h1>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    \r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <div class=\"formContent\">\r\n                    <form [formGroup]=\"PasswordChangeForm\" (ngSubmit)=\"onSubmit()\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12 d-flex justify-content-center mb-2\">\r\n                                <div class=\"field\">\r\n                                    <input formControlName=\"username\" type=\"text\" placeholder=\"Username\" required>\r\n                                </div>\r\n                            </div>\r\n    \r\n                            <div class=\"col-12 d-flex justify-content-center mb-2\">\r\n                                <div class=\"field\">\r\n                                    <input formControlName=\"oldpassword\" type=\"password\" placeholder=\"Enter your OLD password\" required>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-12 d-flex justify-content-center mb-2\">\r\n                                <div class=\"field\">\r\n                                    <input formControlName=\"newpassword\" type=\"password\" placeholder=\"Enter your NEW password\" required>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-12 d-flex justify-content-center\">\r\n                                <div class=\"field d-flex justify-content-end\">\r\n                                    <button class=\"btn btn-sm btn-danger\">Change Password</button>\r\n                                </div>\r\n                            </div>\r\n    \r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div class=\"errorMessage\" *ngIf=\"PasswordChangeError\">\r\n                    <p>Wrong Username or Password</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n    \r\n\r\n\r\n</div>\r\n\r\n\r\n<ng-template #modal let-modal>\r\n    <div class=\"modal-header\">\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <h2>Password Changed Successfully</h2>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-success\" (click)=\"modal.close('Save click')\" routerLink=\"/bc/customize-spinner\">Get back</button>\r\n    </div>\r\n</ng-template>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\r\nimport { baseHref } from '../shared/baseHref';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CenterImageService {\r\n\r\n    \r\n  TOKEN = localStorage.getItem('userToken');\r\n  \r\n  httpOptions = {\r\n    headers: new HttpHeaders(\r\n      { 'Authorization': `Bearer ${this.TOKEN}`})\r\n  };\r\n\r\n  URL_API = `${baseHref}api/v1/centerImage`;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private processHTTPMsgService: ProcessHTTPMsgService\r\n  ) { }\r\n\r\n  getImageCenter(): Observable<any> {\r\n    return this.http.get<any>(this.URL_API, this.httpOptions)\r\n      .pipe(map((data:any) => data),\r\n      catchError(this.processHTTPMsgService.handleError));\r\n  }\r\n\r\n  sendImageCenter(Form:any): Observable<any> {\r\n    return this.http.post<any>(this.URL_API, Form, this.httpOptions)\r\n      .pipe(catchError(this.processHTTPMsgService.handleError));\r\n  }; \r\n\r\n  deleteImageCenter() {\r\n    return this.http.delete(this.URL_API, this.httpOptions);\r\n  }\r\n\r\n}\r\n","import { HttpClient, HttpHeaders  } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\r\nimport { baseHref } from '../shared/baseHref';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ChangePasswordService {\r\n    \r\n  TOKEN = localStorage.getItem('userToken');\r\n  \r\n  httpOptions = {\r\n    headers: new HttpHeaders({ \r\n      'Authorization': `Bearer ${this.TOKEN}`, \r\n      'Content-Type': 'application/json'})\r\n  };\r\n\r\n  URL_API = `${baseHref}users/resetPassword`;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private processHTTPMsgService: ProcessHTTPMsgService\r\n  ) { }\r\n\r\n  ChangePassword(user: passwordChange){\r\n    return this.http.post(this.URL_API, user, this.httpOptions)\r\n    .pipe(catchError(this.processHTTPMsgService.handleError));\r\n  }\r\n\r\n}\r\n\r\nexport class passwordChange{\r\n\r\n  username: string;\r\n  oldpassword: string;\r\n  newpassword: string;\r\n\r\n  constructor(user, oldPass, newPass){\r\n    this.username = user;\r\n    this.oldpassword = oldPass;\r\n    this.newpassword = newPass;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CSVconverterService {\r\n\r\n  constructor() { }\r\n\r\n\r\n  downloadFile(data, filename='Collected_Emails') {\r\n    let csvData = this.ConvertToCSV(data, ['EmailAddress','FirstName', 'LastName', 'DateSpin', 'DateCreation', 'Result']);\r\n    let blob = new Blob(['\\ufeff' + csvData], { type: 'text/csv;charset=utf-8;' });\r\n    let dwldLink = document.createElement(\"a\");\r\n    let url = URL.createObjectURL(blob);\r\n    let isSafariBrowser = navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\r\n    if (isSafariBrowser) {  //if Safari open in new window to save file with random filename.\r\n        dwldLink.setAttribute(\"target\", \"_blank\");\r\n    }\r\n    dwldLink.setAttribute(\"href\", url);\r\n    dwldLink.setAttribute(\"download\", filename + \".csv\");\r\n    dwldLink.style.visibility = \"hidden\";\r\n    document.body.appendChild(dwldLink);\r\n    dwldLink.click();\r\n    document.body.removeChild(dwldLink);\r\n  }\r\n\r\n  ConvertToCSV(objArray, headerList) {\r\n    let array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;\r\n    let str = '';\r\n    let row = 'Number,';\r\n    for (let index in headerList) {\r\n     row += headerList[index] + ',';\r\n    }\r\n    row = row.slice(0, -1);\r\n    str += row + '\\r\\n';\r\n    for (let i = 0; i < array.length; i++) {\r\n     let line = (i+1)+'';\r\n     for (let index in headerList) {\r\n      let head = headerList[index];\r\n      line += ',' + array[i][head];\r\n     }\r\n     str += line + '\\r\\n';\r\n    }\r\n    return str;\r\n   }\r\n\r\n   \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\r\nimport { baseHref } from '../shared/baseHref';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CustomScriptService {\r\n  \r\n  TOKEN = localStorage.getItem('userToken');\r\n  \r\n  httpOptions = {\r\n    headers: new HttpHeaders({ \r\n      'Authorization': `Bearer ${this.TOKEN}`, \r\n      'Content-Type': 'application/json'})\r\n  };\r\n\r\n  URL_API = `${baseHref}api/v1/headerFooter`;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private processHTTPMsgService: ProcessHTTPMsgService) { }\r\n\r\n  sendHeaderFooter(Form:any): Observable<any> {\r\n    return this.http.post<any>(this.URL_API, Form, this.httpOptions)\r\n      .pipe(catchError(this.processHTTPMsgService.handleError));\r\n  }; \r\n\r\n  deleteHeaderFooter() {\r\n    return this.http.delete(this.URL_API, this.httpOptions);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\r\nimport { baseHref } from '../shared/baseHref';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmailsService {\r\n\r\n  URL_API = `${baseHref}api/v1/results`;\r\n\r\n  TOKEN = localStorage.getItem('userToken');\r\n  \r\n  httpOptions = {\r\n    headers: new HttpHeaders({ 'Authorization': `Bearer ${this.TOKEN}` })\r\n  };\r\n\r\n  \r\n  constructor(\r\n    private http: HttpClient,\r\n    private processHTTPMsgService: ProcessHTTPMsgService) { }\r\n\r\n  getEmails(): Observable<any> {\r\n    return this.http.get<any>(this.URL_API, this.httpOptions) //Check and test later\r\n      .pipe(map((data:any) => data),\r\n      catchError(this.processHTTPMsgService.handleError));\r\n  }\r\n\r\n  sendEmails(Form:any): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n    };\r\n    return this.http.post<any>(this.URL_API, Form)\r\n      .pipe(catchError(this.processHTTPMsgService.handleError));\r\n  }\r\n\r\n  deleteEmails(){\r\n    return this.http.delete(this.URL_API, this.httpOptions);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private router: Router\r\n  ){}\r\n\r\n  canActivate(): boolean {\r\n    if( localStorage.getItem('userToken') ){\r\n      return true\r\n    } else {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\r\nimport { baseHref } from '../shared/baseHref';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HeaderFooterService {\r\n\r\n  URL_API_HEADER = `${baseHref}api/v1/headerFooter`;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private processHTTPMsgService: ProcessHTTPMsgService) { }\r\n\r\n    getHeaderFooter(): Observable<any> {\r\n      return this.http.get<any>(this.URL_API_HEADER)\r\n      .pipe(map((data:any) => data),\r\n      catchError(this.processHTTPMsgService.handleError));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { baseHref } from '../shared/baseHref';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ImageService {\r\n\r\n  URL_API = `${baseHref}api/v1/imageUpload`;\r\n\r\n  TOKEN = localStorage.getItem('userToken');\r\n  \r\n  httpOptions = {\r\n    headers: new HttpHeaders({ 'Authorization': `Bearer ${this.TOKEN}` })\r\n  };\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public uploadImage(image: File): Observable<any> {\r\n    const imageF = new FormData();\r\n\r\n    imageF.append('imageFile', image);\r\n\r\n    return this.http.post(this.URL_API, imageF, this.httpOptions);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { baseHref } from '../shared/baseHref';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n  URL_API = `${baseHref}users/login`;\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  Login(user: userLogin){\r\n    return this.http.post(this.URL_API, user);\r\n  }\r\n}\r\n\r\n\r\nexport class userLogin{\r\n\r\n  username: string;\r\n  password: string;\r\n\r\n  constructor(user, pass){\r\n    this.username = user;\r\n    this.password = pass;\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { throwError } from 'rxjs';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProcessHTTPMsgService {\r\n\r\n  constructor() { }\r\n\r\n  public handleError(error: HttpErrorResponse | any) {\r\n    let errMsg: string;\r\n\r\n    if (error.error instanceof ErrorEvent) {\r\n      errMsg = error.error.message;\r\n    } else {\r\n      errMsg = `${error.status} - ${error.statusText || ''} ${error.error}`;\r\n    }\r\n\r\n    return throwError(errMsg);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { formSpinnerControl } from '../shared/form-spinner-controller';\r\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\r\nimport { baseHref } from '../shared/baseHref';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SpinnerCustomizerControllerService {\r\n\r\n  TOKEN = localStorage.getItem('userToken');\r\n  \r\n  httpOptions = {\r\n    headers: new HttpHeaders({ 'Authorization': `Bearer ${this.TOKEN}` })\r\n  };\r\n\r\n  URL_API = `${baseHref}api/v1/spinner`;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private processHTTPMsgService: ProcessHTTPMsgService) { }\r\n\r\n  sendSpinner( spinnerArray: Array <formSpinnerControl>) {\r\n    return this.http.post(this.URL_API, spinnerArray, this.httpOptions);\r\n  }\r\n\r\n  deleteSpinner() {\r\n    return this.http.delete(this.URL_API, this.httpOptions);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\r\nimport { baseHref } from '../shared/baseHref';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SpinnerService {\r\n\r\n  URL_API_SPINNER = `${baseHref}api/v1/spinner`;\r\n  URL_API_HEADER = `${baseHref}api/v1/headerFooter`;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private processHTTPMsgService: ProcessHTTPMsgService\r\n  ) { }\r\n\r\n  getSpinner(): Observable<any> {\r\n    return this.http.get<any>(this.URL_API_SPINNER) //Check and test later\r\n      .pipe(map((data:any) => data),\r\n      catchError(this.processHTTPMsgService.handleError));\r\n  }\r\n\r\n  //Inverter color function\r\n  invertColor(hex): any {\r\n    if (hex.indexOf('#') === 0) {\r\n      hex = hex.slice(1);\r\n    }\r\n    // convert 3-digit hex to 6-digits.\r\n    if (hex.length === 3) {\r\n      hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\r\n    }\r\n    if (hex.length !== 6) {\r\n      throw new Error('Invalid HEX color.');\r\n    }\r\n    // invert color components\r\n    var r = (255 - parseInt(hex.slice(0, 2), 16)).toString(16),\r\n        g = (255 - parseInt(hex.slice(2, 4), 16)).toString(16),\r\n        b = (255 - parseInt(hex.slice(4, 6), 16)).toString(16);\r\n    // pad each with zeros and return\r\n    function padZero(str) {\r\n      let len = 2;\r\n      var zeros = new Array(len).join('0');\r\n      return (zeros + str).slice(-len);\r\n    }\r\n    return '#' + padZero(r) + padZero(g) + padZero(b);\r\n  }\r\n  ///////////////////////////\r\n\r\n}\r\n","export class ImageSnippet {\r\n    pending: boolean = false;\r\n    status: string = 'init';\r\n    constructor(public src: string, public file: File) {}\r\n}","export const baseHref = '/';   // /~devsite/","export class formSpinnerControl {\r\n    isItImage: boolean;\r\n    image: any;\r\n    textFieldOne: string;\r\n    percentage: number;\r\n    isItEmail: boolean;\r\n    textPopUp: string;\r\n    email: string;\r\n    bgColor: string;\r\n\r\n    constructor(isImage, image, textOne, percentage, isEmail, textPopUp, email, color){\r\n        this.isItImage = isImage;\r\n        this.image = image;\r\n        this.textFieldOne = textOne;\r\n        this.percentage = percentage;\r\n        this.isItEmail = isEmail;\r\n        this.textPopUp = textPopUp;\r\n        this.email = email;\r\n        this.bgColor = color;\r\n    }\r\n}\r\n","import { Component, OnInit, ViewChild, QueryList, ViewChildren, ElementRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { SpinnerService } from '../services/spinner.service';\r\nimport { HeaderFooterService } from '../services/header-footer.service';\r\nimport { EmailsService } from '../services/emails.service';\r\nimport { CenterImageService } from '../services/center-image.service';\r\nimport { baseHref } from '../shared/baseHref';\r\n\r\n@Component({\r\n  selector: 'app-spinner',\r\n  templateUrl: './spinner.component.html',\r\n  styleUrls: ['./spinner.component.scss']\r\n})\r\nexport class SpinnerComponent implements OnInit {\r\n\r\n\r\n  API_IMAGE_URL = `${baseHref}api/v1/imageUpload/`;\r\n  SpinnerFields: any;\r\n  HeaderFooter: any;\r\n  bgColorStyle: any[] = ['']; // Backgorund color\r\n  fontColor: any[] = ['']; // Font Color\r\n\r\n  fieldStyleNth: any[] = ['']; //Individual field style\r\n  holder: any[] = [''];\r\n  imageOrientation: any[] = [''];\r\n  textOrientation: any[] = [''];\r\n\r\n  state: string = 'default';\r\n\r\n  //Animations\r\n  clicks: number = 0;\r\n  newDegree: number;\r\n  extraDegree: number; \r\n  totalDegree: number = 0;\r\n  spiningRotate: any;\r\n\r\n  @ViewChildren('wheelSec') wheelSecs: QueryList<any>;\r\n  @ViewChild('txt') Text;\r\n  @ViewChild('spin') spin;\r\n\r\n  spinMovemente: any;\r\n\r\n  //Results\r\n  angle: number;\r\n  initialDegreesStart: any[] = [''];\r\n  initialDegreesEnd: any[] = [''];\r\n  degreesRotated: number = 0;\r\n  resultingField: number = 0;\r\n  FinalResult: any;\r\n\r\n  sendEmailForm: FormGroup;\r\n  form: any;\r\n  formCopy: any;\r\n  errMess: string;\r\n  ///\r\n\r\n  //Center image\r\n  centerImage: any;\r\n\r\n  /// Modal results\r\n  validForm = true;\r\n  closeResult = ''; \r\n  @ViewChild('ResultEmail') ResultEmail;\r\n  @ViewChild('ResultText') ResultText;\r\n\r\n  constructor( \r\n    private spinnerService: SpinnerService,\r\n    private headerFooterService: HeaderFooterService,\r\n    private emailSevice: EmailsService,\r\n    private modalService: NgbModal,\r\n    private centerImageService: CenterImageService,\r\n    private fb: FormBuilder ) { \r\n      this.createForm();\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    this.getHeaderFooter();\r\n    this.getSpinner();\r\n    this.getImageCenter();\r\n  }\r\n\r\n  getSpinner(): void {\r\n    this.spinnerService.getSpinner()\r\n      .subscribe( spinnerFields => {\r\n        this.SpinnerFields = spinnerFields;\r\n        this.angle = 360/this.SpinnerFields.length;\r\n        for(let i=0; i<this.SpinnerFields.length; i++) { //Substitute backslashes for slashes\r\n          this.SpinnerFields[i].image = this.SpinnerFields[i].image.replace(/\\\\/g, \"/\");\r\n          this.SpinnerFields[i].image = this.API_IMAGE_URL + this.SpinnerFields[i].image.slice(14);\r\n          this.bgColorStyle[i] = this.SpinnerFields[i].bgColor; // Backgorund color\r\n          this.fontColor[i] = this.spinnerService.invertColor(this.bgColorStyle[i]); //Font Color\r\n          this.holder[i] = {'transform': 'rotate(' + this.angle*(i) + 'deg)',\r\n                            '-webkit-transform': 'rotate(' + this.angle*(i) + 'deg)',\r\n                            '-moz-transform': 'rotate(' + this.angle*(i) + 'deg)',\r\n                            '-o-transform': 'rotate(' + this.angle*(i) + 'deg)',\r\n                            '-ms-transform': 'rotate(' + this.angle*(i) + 'deg)'};\r\n\r\n          this.fieldStyleNth[i] = {'transform': 'rotate(' + this.angle + 'deg)',\r\n                                  '-webkit-transform': 'rotate(' + this.angle + 'deg)',\r\n                                  '-moz-transform': 'rotate(' + this.angle + 'deg)',\r\n                                  '-o-transform': 'rotate(' + this.angle + 'deg)',\r\n                                  '-ms-transform': 'rotate(' + this.angle + 'deg)',\r\n                                  'background-color': this.bgColorStyle[i],\r\n                                  'color': this.fontColor[i]\t};\r\n          \r\n          this.imageOrientation[i] = { 'transform': 'rotate(' + (this.angle - this.angle*1.5 ) + 'deg)',\r\n                                       '-webkit-transform': 'rotate(' + (this.angle - this.angle*1.5) + 'deg)',\r\n                                       '-moz-transform': 'rotate(' + (this.angle - this.angle*1.5) + 'deg)',\r\n                                       '-o-transform': 'rotate(' + (this.angle - this.angle*1.5) + 'deg)',\r\n                                       '-ms-transform': 'rotate(' + (this.angle - this.angle*1.5) + 'deg)',\r\n                                       'transform-origin': 'bottom center'};\r\n\r\n          this.textOrientation[i] = { 'transform': 'rotate(' + (90 - this.angle/2) + 'deg)',\r\n                                      '-webkit-transform': 'rotate(' + (180 + this.angle/4) + 'deg)',\r\n                                      '-moz-transform': 'rotate(' + (180 + this.angle/4) + 'deg)',\r\n                                      '-o-transform': 'rotate(' + (180 + this.angle/4) + 'deg)',\r\n                                      '-ms-transform': 'rotate(' + (180 + this.angle/4) + 'deg)', \r\n                                      'transform-origin': 'center right'};\r\n\r\n          this.initialDegreesStart[i] = this.angle*i\r\n          this.initialDegreesEnd[i] = this.initialDegreesStart[i] + this.angle;\r\n        }\r\n      })\r\n  }\r\n\r\n  getHeaderFooter() {\r\n    this.headerFooterService.getHeaderFooter()\r\n      .subscribe( headerFooter => {\r\n        this.HeaderFooter = headerFooter[0];\r\n      });\r\n  }\r\n\r\n  getImageCenter() {\r\n    this.centerImageService.getImageCenter()\r\n      .subscribe(centerImage => {\r\n        this.centerImage = centerImage[0];\r\n        this.centerImage.centerImage = this.API_IMAGE_URL + this.centerImage.centerImage.slice(14);\r\n      });\r\n  }\r\n\r\n  rotate() {\r\n    this.getSpinner();\r\n    let degreeSpinn = 360*8;\r\n    this.clicks = ++this.clicks; ////\r\n    this.newDegree = degreeSpinn * this.clicks;  ////\r\n\r\n    this.CalculateDegreesRotated()\r\n\r\n    this.totalDegree = this.newDegree + this.extraDegree;\r\n    \r\n    this.spining();\r\n\r\n    this.ExposingResult()\r\n\r\n  }\r\n\r\n  spining() {\r\n    this.spiningRotate = { 'transform': 'rotate(-' + this.totalDegree + 'deg)'};\r\n  }\r\n\r\n\r\n  ExposingResult() {\r\n\r\n    //console.log(this.SpinnerFields)\r\n\r\n    if (this.SpinnerFields[this.resultingField].isItEmail === true) {\r\n      setTimeout( () => {\r\n        this.open(this.ResultEmail)\r\n      }, 6500);\r\n  \r\n    }\r\n    else if (this.SpinnerFields[this.resultingField].isItEmail === false) {\r\n      setTimeout( () => {\r\n        this.open(this.ResultText)\r\n      }, 6500);  \r\n    }\r\n  }\r\n\r\n  createForm() {\r\n    this.sendEmailForm = this.fb.group({\r\n      firstName: ['', [Validators.required]],\r\n      lastName: ['', [Validators.required]],\r\n      emailAddress: ['', [Validators.required, Validators.email]],\r\n      result: ['']\r\n    });\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    if(this.sendEmailForm.status === \"VALID\") {\r\n      this.formCopy = this.sendEmailForm.value;\r\n      this.formCopy.result = this.FinalResult.textPopUp;\r\n      \r\n      this.emailSevice.sendEmails(this.formCopy)\r\n        .subscribe(emailForm => {\r\n          this.form = emailForm;\r\n          this.modalService.dismissAll();\r\n          this.validForm = true;\r\n        }, err =>{\r\n          throw new Error('Error Sending the information about the spinner');\r\n        });\r\n      this.sendEmailForm.reset();\r\n    } else {\r\n      this.validForm = false;\r\n    }\r\n\r\n  }\r\n\r\n  CalculateDegreesRotated() {\r\n    let DegreesArray = [];\r\n    let index, sum = 0\r\n    let random = Math.random();\r\n    let random2 = Math.random();\r\n\r\n    for( index = 0; index < this.SpinnerFields.length; index++) {\r\n      sum += this.SpinnerFields[index].percentage/100;\r\n      DegreesArray[index] = sum;\r\n    }\r\n\r\n    for ( index = 0; random < DegreesArray.length && random >= DegreesArray[index]; index++);\r\n\r\n    this.extraDegree = (this.initialDegreesEnd[index] - this.angle)\r\n      + Math.floor(random2 * (this.initialDegreesEnd[index] - (this.initialDegreesEnd[index] - this.angle)-1));\r\n  \r\n      this.resultingField = index;\r\n\r\n      this.FinalResult = this.SpinnerFields[index]\r\n    }\r\n\r\n\r\n    // Modal results\r\n    open(content) {\r\n      this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n        this.closeResult = `Closed with: ${result}`;\r\n      }, (reason) => {\r\n        this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n      });\r\n    }\r\n\r\n    private getDismissReason(reason: any): string {\r\n      if (reason === ModalDismissReasons.ESC) {\r\n        return 'by pressing ESC';\r\n      } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n        return 'by clicking on a backdrop';\r\n      } else {\r\n        return `with: ${reason}`;\r\n      }\r\n    }\r\n    ///////\r\n\r\n  }","\r\n<header *ngIf=\"HeaderFooter\">\r\n    <div [innerHTML]=\"HeaderFooter.header\"></div>\r\n</header>\r\n\r\n\r\n<div class=\"sizingBox\">\r\n\r\n  \r\n<div class=\"my-5 row\" *ngIf=\"HeaderFooter\">\r\n  <div class=\"col-12 d-flex justify-content-center\" id=\"title\">\r\n      <h2>{{HeaderFooter.pageTitle}}</h2>\r\n  </div>\r\n\r\n  <div class=\"col-12 d-flex justify-content-center mt-3\" id=\"description\">\r\n      <p>{{HeaderFooter.pageDescription}}</p>\r\n  </div>\r\n\r\n</div>\r\n\r\n\r\n<div id=\"wrapper\">\r\n          \r\n  <div *ngIf=\"SpinnerFields\" id=\"wheel\">\r\n\r\n      <div id=\"inner-wheel\" [style]=\"spiningRotate\">\r\n          <div *ngFor=\"let field of SpinnerFields; let i = index\">\r\n              <div #wheelSec>\r\n                  <div [style]=\"holder[i]\" class=\"hold\" *ngIf=\"field.isItImage\">\r\n                      <div  class=\"sec\" id=\"wheelSec\" [style]=\"fieldStyleNth[i]\">\r\n                              <span class=\"imageSpan\" [style]=\"imageOrientation[i]\" > \r\n                                <div class=\"ImageContainer\">\r\n                                  <img class=\"image img-fluid\" [src]=\"field.image\">\r\n                                </div>\r\n                              </span>\r\n                      </div>\r\n                  </div>\r\n\r\n                  <div [style]=\"holder[i]\" class=\"hold\" *ngIf=\"!field.isItImage\">\r\n                      <div class=\"sec\" [style]=\"fieldStyleNth[i]\">\r\n                        <span [style]=\"textOrientation[i]\" class=\"TextSpan d-flex justify-content-center\">\r\n                          {{field.textFieldOne}}\r\n                        </span>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n  \r\n          </div>       \r\n         \r\n\r\n      </div>\r\n      <div id=\"spin\" (click)=\"rotate()\" #spin [style]=\"spinMovemente\">\r\n          <div id=\"inner-spin\">\r\n            <div *ngIf=\"centerImage\">\r\n              <img src=\"{{centerImage.centerImage}}\">\r\n            </div>\r\n          </div>\r\n      </div>\r\n      \r\n      <div id=\"shine\"></div>\r\n      \r\n  </div>\r\n  \r\n  <div id=\"txt\" #txt></div>\r\n</div>\r\n  \r\n</div>\r\n\r\n\r\n  \r\n\r\n<footer *ngIf=\"HeaderFooter\">\r\n    <div [innerHTML]=\"HeaderFooter.footer\"></div>\r\n</footer>\r\n\r\n<ng-template #ResultEmail let-modal>\r\n    <div class=\"modal-header\">\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n\r\n    <div *ngIf=\"FinalResult\" class=\"modal-body\">\r\n      <div class=\"d-flex justify-content-center\" *ngIf=\"FinalResult.isItImage\">\r\n        <img class=\"PopUpImage image img-fluid\" src=\"{{FinalResult.image}}\">\r\n      </div>\r\n\r\n        <h2>{{FinalResult.textPopUp}}</h2>\r\n        <form class=\"row\" [formGroup]=\"sendEmailForm\" (ngSubmit)=\"onSubmit()\">\r\n          <div class=\"errorMessage\" *ngIf=\"!validForm\">\r\n            <p>Please check information provided, all the fields are required and it must be a valid email address</p>\r\n          </div>\r\n          <div class=\"col-12 d-flex justify-content-center my-3\">\r\n            <input formControlName=\"firstName\" type=\"text\" placeholder=\"First Name\">\r\n          </div>\r\n\r\n          <div class=\"col-12 d-flex justify-content-center mb-3\">\r\n            <input formControlName=\"lastName\" type=\"text\" placeholder=\"Last Name\">\r\n          </div>\r\n\r\n          <div class=\"col-12 d-flex justify-content-center mb-3\">\r\n            <input formControlName=\"emailAddress\" type=\"email\"  placeholder=\"email\">\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button class=\"btn btn-success\">Send</button>\r\n            <button class=\"btn btn-danger\"(click)=\"modal.close('Save click')\">Close</button>\r\n          </div>\r\n      </form>\r\n    </div>\r\n\r\n\r\n  </ng-template>\r\n\r\n  <ng-template #ResultText let-modal>\r\n    <div class=\"modal-header\">\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n    <div *ngIf=\"FinalResult\" class=\"modal-body\">\r\n\r\n      <div class=\"d-flex justify-content-center\" *ngIf=\"FinalResult.isItImage\">\r\n        <img class=\"PopUpImage image img-fluid\" src=\"{{FinalResult.image}}\">\r\n      </div>\r\n\r\n      <h2>{{FinalResult.textPopUp}}</h2>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-success\" (click)=\"modal.close('Save click')\">Close</button>\r\n    </div>\r\n  </ng-template>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}