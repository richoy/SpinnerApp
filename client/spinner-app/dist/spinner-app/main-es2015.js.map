{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing/app-routing.module.ts","./src/app/app-routing/routes.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/custom-script/custom-script.component.ts","./src/app/custom-script/custom-script.component.html","./src/app/customize-spinner/customize-spinner.component.ts","./src/app/customize-spinner/customize-spinner.component.html","./src/app/email-list/email-list.component.ts","./src/app/email-list/email-list.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/services/center-image.service.ts","./src/app/services/custom-script.service.ts","./src/app/services/emails.service.ts","./src/app/services/guards/login.guard.ts","./src/app/services/header-footer.service.ts","./src/app/services/image.service.ts","./src/app/services/login.service.ts","./src/app/services/process-httpmsg.service.ts","./src/app/services/spinner-customizer-controller.service.ts","./src/app/services/spinner.service.ts","./src/app/shared/ImageSnippet.ts","./src/app/shared/form-spinner-controller.ts","./src/app/spinner/spinner.component.ts","./src/app/spinner/spinner.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { routes } from './routes';\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { LoginComponent } from '../login/login.component';\r\nimport { CustomizeSpinnerComponent } from '../customize-spinner/customize-spinner.component';\r\nimport { EmailListComponent } from '../email-list/email-list.component';\r\nimport { CustomScriptComponent } from '../custom-script/custom-script.component';\r\nimport { SpinnerComponent } from '../spinner/spinner.component'\r\nimport { LoginGuard } from '../services/guards/login.guard';\r\n\r\nexport const routes: Routes = [\r\n    { path: 'login', component: LoginComponent },\r\n    { path: 'spinner', component: SpinnerComponent },\r\n    { path: 'customize-spinner', component: CustomizeSpinnerComponent, canActivate: [LoginGuard] },\r\n    { path: 'email-list', component: EmailListComponent, canActivate: [LoginGuard] },\r\n    { path: 'custom-script', component: CustomScriptComponent, canActivate: [LoginGuard]},\r\n    { path: '', redirectTo: '/login', pathMatch: 'full' },\r\n    { path: '**', redirectTo: '/login', pathMatch:'full' }\r\n];","import { Component, OnInit } from '@angular/core';\r\nimport { Meta, Title } from '@angular/platform-browser';\r\n\r\nimport { HeaderFooterService } from './services/header-footer.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit{\r\n\r\n  API_IMAGE_URL = '/api/v1/imageUpload/';\r\n  favIcon: HTMLLinkElement = document.querySelector('#favIcon');\r\n  HeaderFooter: any;\r\n\r\n  title = 'spinner-app';\r\n  // code for testing backend, remove \"implements oninit\", constructor and ngOnInit later\r\n  testBackend:string;\r\n  constructor(    \r\n    private headerFooterService: HeaderFooterService,\r\n    private metaService: Meta,\r\n    private Pagetitle: Title) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getHeaderFooter();\r\n  }\r\n\r\n  getHeaderFooter() {\r\n    this.headerFooterService.getHeaderFooter()\r\n      .subscribe( headerFooter => {\r\n        this.HeaderFooter = headerFooter[0];\r\n        this.favIcon.href = this.API_IMAGE_URL + this.HeaderFooter.favicon.slice(14);\r\n        this.Pagetitle.setTitle( this.HeaderFooter.pageTitle );\r\n        this.metaService.addTag({ name: 'description', content: this.HeaderFooter.pageDescription }); //Description\r\n      });\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>","import { BrowserModule, Meta, Title } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule, NoopAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { bootstrap } from 'bootstrap'\r\n\r\nimport { AppRoutingModule } from './app-routing/app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { CustomizeSpinnerComponent } from './customize-spinner/customize-spinner.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { EmailListComponent } from './email-list/email-list.component';\r\nimport { CustomScriptComponent } from './custom-script/custom-script.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { SpinnerComponent } from './spinner/spinner.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    CustomizeSpinnerComponent,\r\n    EmailListComponent,\r\n    CustomScriptComponent,\r\n    NavbarComponent,\r\n    SpinnerComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    NoopAnimationsModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule\r\n  ],\r\n  providers: [Meta, Title],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { CustomScriptService } from '../services/custom-script.service';\r\nimport { ImageService } from '../services/image.service';\r\n\r\nimport { ImageSnippet } from '../shared/ImageSnippet';\r\n\r\n@Component({\r\n  selector: 'app-custom-script',\r\n  templateUrl: './custom-script.component.html',\r\n  styleUrls: ['./custom-script.component.scss']\r\n})\r\nexport class CustomScriptComponent implements OnInit {\r\n  \r\n  public isMenuCollapsed = true;\r\n\r\n  HeaderFooterForm: FormGroup;\r\n  form: any;\r\n  formCopy: any;\r\n  errMess: string;\r\n\r\n  selectedFile: ImageSnippet;\r\n  StringOfImageUpload: string;\r\n  SuccessfullyUpload: boolean;\r\n  UnsuccessfullyUpload: boolean;\r\n\r\n  formErrors = {\r\n    'Header': '',\r\n    'Footer': '',\r\n    'PageTitle': '',\r\n    'pageDescription': '',\r\n    'favicon': ''\r\n  };\r\n\r\n\r\n\r\n  constructor( \r\n    private customScriptService: CustomScriptService,\r\n    private imageService: ImageService,\r\n    private fb: FormBuilder) {\r\n      this.createForm();\r\n     }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  createForm() {\r\n    this.HeaderFooterForm = this.fb.group({\r\n      header: [''],\r\n      footer: [''],\r\n      pageTitle: [''],\r\n      pageDescription: [''],\r\n      favicon: ['']\r\n    });\r\n\r\n  }\r\n\r\n  private onSuccess(path) {\r\n    this.StringOfImageUpload = path;\r\n    this.SuccessfullyUpload = true;\r\n    this.UnsuccessfullyUpload = false; \r\n  }\r\n\r\n  private onError() {\r\n    this.UnsuccessfullyUpload = true; \r\n    this.SuccessfullyUpload = false;\r\n  }\r\n\r\n\r\n  processFile(image: any) {\r\n    let files = image.srcElement.files;\r\n    let file: File = files[0];\r\n    let reader = new FileReader();\r\n    reader.addEventListener('load', (event: any) => {\r\n      this.selectedFile = new ImageSnippet(event.target.result, file);\r\n      this.imageService.uploadImage(this.selectedFile.file)\r\n        .subscribe((res) => {\r\n          this.onSuccess(res.path);\r\n        },\r\n        (err) => {\r\n          this.onError()\r\n          throw new Error(err);\r\n        });\r\n    });\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.customScriptService.deleteHeaderFooter().subscribe(()=> {\r\n      this.formCopy = this.HeaderFooterForm.value;\r\n      this.formCopy.favicon = this.StringOfImageUpload.replace(/\\\\/g, \"/\");\r\n      console.log(this.formCopy);\r\n      this.customScriptService.sendHeaderFooter(this.formCopy)\r\n        .subscribe(HFform => {\r\n          this.form = HFform;\r\n          console.log(this.form);\r\n        }, err =>{\r\n          throw new Error('Error Sending the information about the spinner');\r\n        });\r\n      this.HeaderFooterForm.reset();\r\n    }, err => {\r\n      throw new Error('Error deleting the information of the previous spineer');\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"row bgColor\">\r\n    \r\n    <div class=\"col-12 col-lg-2 navbar navbar-expand-lg p-0 bg-dark\">\r\n        <button class=\"navbar-toggler pl-4\" type=\"button\" (click)=\"isMenuCollapsed = !isMenuCollapsed\">\r\n            <span class=\"btn btn-secondary\">&#9776;</span> \r\n        </button>\r\n        <app-navbar class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" [ngbCollapse]=\"isMenuCollapsed\"></app-navbar>\r\n    </div>\r\n\r\n    <div class=\"container col-12 col-lg-10\">\r\n        <div class=\"title\">\r\n            <h2>Insert Custom Script</h2>\r\n        </div>\r\n    \r\n        <div class=\"row\">\r\n            <div class=\"col-10 mr-auto\">\r\n                <form [formGroup]=\"HeaderFooterForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <div class=\"mb-3\">\r\n                        <label for=\"header\">HEADER:</label>\r\n                        <textarea formControlName=\"header\" class=\"form-control\" id=\"header\" name=\"header\" rows=\"3\"></textarea>    \r\n                    </div>\r\n    \r\n                    <div class=\"mb-3\">\r\n                        <label for=\"footer\">Footer:</label>\r\n                        <textarea formControlName=\"footer\" class=\"form-control\" id=\"footer\" name=\"footer\" rows=\"3\"></textarea>    \r\n                    </div>\r\n    \r\n                    <div class=\"mb-3\">\r\n                        <label for=\"title\">Page title:</label>\r\n                        <input formControlName=\"pageTitle\" type=\"text\" class=\"form-control\" id=\"title\" name=\"title\">  \r\n                    </div>\r\n    \r\n                    <div class=\"mb-3\">\r\n                        <label for=\"description\">Page description:</label>\r\n                        <textarea formControlName=\"pageDescription\" class=\"form-control\" id=\"description\" name=\"description\" rows=\"3\"></textarea>    \r\n                    </div>\r\n    \r\n                    <div class=\"mb-3\">\r\n                        <label for=\"favicon\">Favicon:</label>\r\n                        <input formControlName=\"favicon\" type=\"file\" (change)=\"processFile($event)\"> \r\n                        <div class=\"col-3\" id=\"FileUploadMessageBox\" *ngIf=\"selectedFile\">\r\n                            <div *ngIf=\"SuccessfullyUpload\" class=\"alert alert-success d-flex justify-content-center\"> <span>&#10004;</span></div>\r\n                            <div *ngIf=\"UnsuccessfullyUpload\" class=\"alert alert-danger d-flex justify-content-center\"> <span>&#x2716;</span></div>\r\n                        </div>   \r\n                    </div>\r\n    \r\n                    <div class=\"d-flex justify-content-end\">\r\n                        <button class=\"btn btn-info\">Submit</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    \r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder,FormArray, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { SpinnerCustomizerControllerService } from '../services/spinner-customizer-controller.service';\r\nimport { ImageService } from '../services/image.service';\r\nimport { CenterImageService } from '../services/center-image.service';\r\nimport { formSpinnerControl } from '../shared/form-spinner-controller';\r\nimport { ImageSnippet } from '../shared/ImageSnippet';\r\n\r\n@Component({\r\n  selector: 'app-customize-spinner',\r\n  templateUrl: './customize-spinner.component.html',\r\n  styleUrls: ['./customize-spinner.component.scss']\r\n})\r\nexport class CustomizeSpinnerComponent implements OnInit {\r\n\r\n  //Collapse menu\r\n  public isMenuCollapsed = true;\r\n\r\n  // For number of field dropdown\r\n  items: any[] = [];\r\n\r\n  spinnerForm: FormGroup;\r\n  submitPressed = false;\r\n\r\n  // For imageUpload / Text Field\r\n  itIsImageFile: boolean[] = [false];\r\n  itIsTextField: boolean[] = [false];\r\n  // For imageUpload / Text Field\r\n\r\n  // For results dropdown\r\n  itIsTextPopUp: boolean[] = [false];\r\n  itIsEmailPopUp: boolean[] = [false];\r\n  // For results dropdown\r\n\r\n  // Form validations:\r\n  //controllerForm: FormGroup;\r\n  errMess: string;\r\n\r\n  // For image Upload\r\n  selectedFile: ImageSnippet;\r\n  StringOfImageUpload: UploadFile[] = [];\r\n  SuccessfullyUpload: boolean[] = [];\r\n  UnsuccessfullyUpload: boolean[] = [];\r\n\r\n  //For percentage 100%\r\n  totalPercentage: any[] = [];\r\n  percentageSum: number;\r\n  StringOfSpinnerCenter: String;\r\n  SuccessSpinnerCenter: boolean;\r\n  UnsuccessSpinnerCenter: boolean;\r\n  CenterImageForm: FormGroup;\r\n  selectedCenterFile: ImageSnippet;\r\n  centerCopy: any;\r\n  centerform: any;\r\n\r\n  constructor(\r\n    public formBuilder:FormBuilder,// For number of field dropdown\r\n    private spinnerService: SpinnerCustomizerControllerService,// Form validations\r\n    private imageService: ImageService,\r\n    private centerImageService: CenterImageService\r\n     ) {       \r\n    // Setting Form Array\r\n    this.spinnerForm = this.formBuilder.group({\r\n\t\t\tspinnerArray: this.formBuilder.array(\r\n\t\t\t\t[],\r\n\t\t\t\t[Validators.required])\r\n    });\r\n    \r\n    this.createFormFieldForCenterSpinnerImage();\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    // Sets default 6 boxes\r\n    for (let i = 0; i < 6; i++) {\r\n      this.addControl(i);\r\n    }\r\n    // For imageUpload / Text Field\r\n    let i = 0;\r\n    for (i=0; i<=this.items.length; i++) {\r\n      this.itIsImageFile[i] = true;\r\n    }\r\n    // For imageUpload / Text Field\r\n\r\n    // For number of field dropdown\r\n    for (i=0; i<=this.items.length; i++) {\r\n      this.itIsTextPopUp[i] = true;\r\n    }\r\n    // For number of field dropdown\r\n\r\n  }\r\n\r\n \r\n\r\n\tcreateSpFormGroup() {\r\n\t\treturn this.formBuilder.group({\r\n      isItImage: [true, [Validators.required]],\r\n      file: [''],\r\n      textFieldOne:[''],\r\n      percentage: ['', [Validators.required, Validators.pattern(/^[1-9]\\d*$/)]],\r\n      isItEmail: [true, [Validators.required]],\r\n      textPopUp: [''],\r\n      emails: [''],\r\n      color: ['', [Validators.required]],\r\n\t\t})\r\n  }\r\n\r\n  createFormFieldForCenterSpinnerImage() {\r\n    this.CenterImageForm = this.formBuilder.group({\r\n      centerImage: ['']\r\n    });\r\n  }\r\n\r\n  submitCenterImage() {\r\n\r\n  }\r\n\r\n   //Image Upload\r\n  private onSuccess(index, path) {\r\n    this.StringOfImageUpload.push(new UploadFile(index, path));\r\n    this.SuccessfullyUpload[index] = true;\r\n    this.UnsuccessfullyUpload[index] = false; \r\n  }\r\n\r\n  private onError(index) {\r\n    this.UnsuccessfullyUpload[index] = true; \r\n    this.SuccessfullyUpload[index] = false;\r\n  }\r\n\r\n\r\n  processFile(image: any, index) {\r\n      let files = image.srcElement.files;\r\n      let file: File = files[0];\r\n      let reader = new FileReader();\r\n      reader.addEventListener('load', (event: any) => {\r\n        this.selectedFile = new ImageSnippet(event.target.result, file);\r\n        this.imageService.uploadImage(this.selectedFile.file)\r\n          .subscribe((res) => {\r\n            this.onSuccess(index, res.path);\r\n          },\r\n          (err) => {\r\n            this.onError(index)\r\n            throw new Error(err);\r\n          });\r\n      });\r\n      reader.readAsDataURL(file);\r\n  }\r\n\r\n\r\n  //Center spinner image\r\n\r\n  private onSuccessCenter(path) {\r\n    this.StringOfSpinnerCenter = path;\r\n    this.SuccessSpinnerCenter = true;\r\n    this.UnsuccessSpinnerCenter = false; \r\n  }\r\n\r\n  private onErrorCenter() {\r\n    this.UnsuccessSpinnerCenter = true; \r\n    this.SuccessSpinnerCenter = false;\r\n  }\r\n\r\n  ProcessCenterImage(image: any) {\r\n    let files = image.srcElement.files;\r\n    let file: File = files[0];\r\n    let reader = new FileReader();\r\n    reader.addEventListener('load', (event: any) => {\r\n      this.selectedCenterFile = new ImageSnippet(event.target.result, file);\r\n      this.imageService.uploadImage(this.selectedCenterFile.file)\r\n        .subscribe((res) => {\r\n          this.onSuccessCenter(res.path);\r\n        },\r\n        (err) => {\r\n          this.onErrorCenter()\r\n          throw new Error(err);\r\n        });\r\n    });\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  /////\r\n  \r\n  get spinnerArray(): FormArray {\r\n\t\tif ( this.spinnerForm) {\r\n      return this.spinnerForm.get('spinnerArray') as FormArray;\r\n    }\r\n\t}\r\n  // For number of field dropdown\r\n  onChange(i) {\r\n    this.items.length = 0;   // eliminates defalut setting before adding other\r\n    this.spinnerForm.reset();\r\n    while(this.spinnerArray.length > 0) {\r\n      this.items.pop();\r\n      this.deleteSpinnerField(0);\r\n    }\r\n    while(i > 0) {\r\n      this.addControl(i);\r\n      i--;\r\n    }\r\n    for (i=0; i<=this.items.length; i++) {\r\n      this.itIsImageFile[i] = true;\r\n    }\r\n    for (i=0; i<=this.items.length; i++) {\r\n      this.itIsTextPopUp[i] = true;\r\n    }\r\n  }\r\n  addControl(i) {\r\n    this.items.push({id: i.toString()})\r\n\t\tlet fg = this.createSpFormGroup();\r\n\t\tif(this.spinnerArray) {\r\n      this.spinnerArray.push(fg);\r\n    }\r\n  }\r\n\r\n  deleteSpinnerField(idx: number) {\r\n\t\tthis.spinnerArray.removeAt(idx);\r\n  }\r\n\r\n  deleteImage() {\r\n    this.centerImageService.deleteImageCenter()\r\n      .subscribe(() => {\r\n        \r\n      }, err => {\r\n        throw new Error('Error deleting the information of the previous spineer');\r\n      });\r\n  }\r\n  \r\n  // For number of field dropdown\r\n\r\n  //For image text selection\r\n  onChangeImage(option, i) {\r\n      if ( option === \"0: true\" ) {\r\n        this.itIsImageFile[i] = true;\r\n        this.itIsTextField[i] = false;\r\n        \r\n      }\r\n      else if( option === \"1: false\") {\r\n        this.itIsImageFile[i] = false;\r\n        this.itIsTextField[i] = true;\r\n      }\r\n  }\r\n  //For image text selection\r\n\r\n  // For number of field dropdown\r\n  onChangeResult(option, i) {\r\n    if ( option === 'text' ) {\r\n      this.itIsTextPopUp[i] = true;\r\n      this.itIsEmailPopUp[i] = false;\r\n    }\r\n    else if( option === 'email' ) {\r\n      this.itIsTextPopUp[i] = false;\r\n      this.itIsEmailPopUp[i] = true;\r\n    }\r\n}\r\n  // For number of field dropdown\r\n\r\n  onSubmit() {\r\n    let spinner: Array<formSpinnerControl> = [];\r\n    this.submitPressed = true;\r\n    \r\n    // if a field outside the array is added, change this to this.spinnerForm.value\r\n    if (this.spinnerForm.status === \"VALID\") {\r\n      let counter = 0;\r\n  \r\n      this.spinnerArray.value.forEach(element => {\r\n        let field = new formSpinnerControl(\r\n          element.isItImage,\r\n          element.image,\r\n          element.textFieldOne,\r\n          element.percentage,\r\n          element.isItEmail,\r\n          element.textPopUp,\r\n          element.email,\r\n          element.color\r\n        )\r\n\r\n        this.totalPercentage[counter] = element.percentage;\r\n\r\n        this.StringOfImageUpload.forEach((file)=>{\r\n          if(file.index == counter){\r\n            field.image = file.image;\r\n          } \r\n        })\r\n        spinner.push(field);\r\n\r\n        counter++;\r\n      });\r\n\r\n      this.percentageSum = this.totalPercentage.reduce(function(a, b){\r\n        return a + b;\r\n      }, 0);\r\n\r\n      console.log(this.percentageSum)\r\n    }\r\n\r\n    if (this.percentageSum === 100) {\r\n      this.spinnerService.deleteSpinner().subscribe(() => {\r\n        this.spinnerService.sendSpinner(spinner).subscribe((res) => {\r\n          this.spinnerForm.reset();\r\n          this.StringOfImageUpload = []; // Resets the StringOfImageUpload array\r\n        }, err =>{\r\n          throw new Error('Error Sending the information about the spinner');\r\n        });\r\n      }, err => {\r\n        throw new Error('Error deleting the information of the previous spineer');\r\n      });\r\n    } else {\r\n      throw new Error('Error Percentage must add up 100%');\r\n    }\r\n\r\n    \r\n  }\r\n\r\n  onSubmitCenterImage() {\r\n    this.centerImageService.deleteImageCenter()\r\n      .subscribe(() => {\r\n        this.centerCopy = this.CenterImageForm.value;\r\n        this.centerCopy.centerImage = this.StringOfSpinnerCenter.replace(/\\\\/g, \"/\");\r\n        console.log(this.centerCopy);\r\n        this.centerImageService.sendImageCenter(this.centerCopy)\r\n        .subscribe(HFform => {\r\n          this.centerform = HFform;\r\n          console.log(this.centerform);\r\n        }, err =>{\r\n          throw new Error('Error Sending the information about the spinner');\r\n        });\r\n      this.CenterImageForm.reset();\r\n      }, err => {\r\n        throw new Error('Error deleting the information of the previous spineer');\r\n      });\r\n  }\r\n\r\n}\r\n\r\nexport class UploadFile {\r\n  index: number;\r\n  image: any;\r\n\r\n  constructor(idx, fil){\r\n    this.index = idx;\r\n    this.image = fil;\r\n  }\r\n}\r\n","<div class=\"row bgColor\">\r\n\r\n    <div class=\"col-12 col-lg-2 navbar navbar-expand-lg p-0 bg-dark\">\r\n        <button class=\"navbar-toggler pl-4\" type=\"button\" (click)=\"isMenuCollapsed = !isMenuCollapsed\">\r\n            <span class=\"btn btn-secondary\">&#9776;</span> \r\n        </button>\r\n        <app-navbar class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" [ngbCollapse]=\"isMenuCollapsed\"></app-navbar>\r\n    </div>\r\n    \r\n    <div class=\"container menu1 col-12 col-lg-10\">\r\n    \r\n        <h2>Customize the spinner</h2>\r\n    \r\n        <div class=\"row my-5\">\r\n            <div class=\"col-12\">\r\n      \r\n                <div id=\"settingNumber\">\r\n                    <div>\r\n                        <label class=\"mr-3\" for=\"numberOptions\">Number of fields on the spinner </label>\r\n                        <select matNativeControl name=\"numberOptions\" required (change)=\"onChange($event.target.value)\">\r\n                            <option value=\"2\">2</option>\r\n                            <option value=\"3\">3</option>\r\n                            <option value=\"4\">4</option>\r\n                            <option value=\"5\">5</option>\r\n                            <option value=\"6\" selected>6</option>\r\n                            <option value=\"7\">7</option>\r\n                            <option value=\"8\">8</option>\r\n                            <option value=\"9\">9</option>\r\n                            <option value=\"10\">10</option>\r\n                            <option value=\"11\">11</option>\r\n                            <option value=\"12\">12</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"col-12\">\r\n            <form [formGroup]=\"spinnerForm\" (ngSubmit)=\"onSubmit()\">\r\n                <div>\r\n\r\n                    <div class=\"table-responsive\">\r\n                        <table class=\"table table-borderless\">\r\n                            <div formArrayName=\"spinnerArray\">\r\n                                <tr>\r\n                                    <th><label for=\"ImageOption\">Input type</label></th>\r\n                                    <th><label for=\"\">File / Text</label></th>\r\n                                    <th><label for=\"\">Percentage</label></th>\r\n                                    <th><label for=\"\">Result</label></th>\r\n                                    <th><label for=\"\">Text / Email</label></th>\r\n                                    <th><label for=\"\">bg Color</label></th>\r\n                                </tr>\r\n                                <tr *ngFor=\"let spinnerfield of spinnerArray.controls; let i = index\" [formGroupName]=\"i\">\r\n\r\n                                    <td>\r\n                                        <select formControlName=\"isItImage\" required (change)=\"onChangeImage($event.target.value, i)\">\r\n                                            <option [ngValue]=\"true\" selected>Image</option>\r\n                                            <option [ngValue]=\"false\">Text</option>\r\n                                        </select>\r\n                                    </td>\r\n\r\n                                    <td *ngIf=\"itIsImageFile[i]\">\r\n                                        <div id=\"ImageUploadBox\">\r\n                                            <div id=\"FileUploadBox\">\r\n                                                <input #imageInput\r\n                                                formControlName=\"file\"\r\n                                                type=\"file\" \r\n                                                accept=\"image/*\"\r\n                                                name=\"imageFile\"\r\n                                                (change)=\"processFile($event, i)\">\r\n        \r\n                                            </div>\r\n    \r\n                                            <div id=\"FileUploadMessageBox\" *ngIf=\"selectedFile\">\r\n                                                <div *ngIf=\"SuccessfullyUpload[i]\" class=\"alert alert-success d-flex justify-content-center\"> <span>&#10004;</span></div>\r\n                                                <div *ngIf=\"UnsuccessfullyUpload[i]\" class=\"alert alert-danger d-flex justify-content-center\"> <span>&#x2716;</span></div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </td>\r\n\r\n                                    <td *ngIf=\"itIsTextField[i]\">\r\n                                        <input formControlName=\"textFieldOne\" type=\"text\" name=\"textField\">\r\n                                    </td>\r\n\r\n                                    <td>\r\n                                        <input formControlName=\"percentage\" type=\"number\" name=\"textField\" [class.invalid]=\"spinnerfield.controls.percentage.hasError('required')  && submitPressed\">\r\n                                    </td>\r\n\r\n                                    <td>\r\n                                        <select formControlName=\"isItEmail\" name=\"resultOption\" required (change)=\"onChangeResult($event.target.value, i)\">\r\n                                            <option [ngValue]=\"false\" selected>Text Popup</option>\r\n                                            <option [ngValue]=\"true\">Email Popup</option>\r\n                                        </select>\r\n                                    </td>\r\n\r\n                                    <td *ngIf=\"itIsTextPopUp[i]\">\r\n                                        <input formControlName=\"textPopUp\"  type=\"text\" name=\"imageFile\">\r\n                                    </td>\r\n                \r\n                                    <td *ngIf=\"itIsEmailPopUp[i]\">\r\n                                        <input formControlName=\"emails\" type=\"email\" name=\"textField\">\r\n                                    </td>\r\n\r\n                                    <td class=\"col-2\">\r\n                                        <input formControlName=\"color\" type=\"color\" [class.invalid]=\"spinnerfield.controls.color.hasError('required')  && submitPressed\">\r\n                                    </td>\r\n\r\n                                </tr>\r\n\r\n                            </div>\r\n\r\n                        </table>\r\n                    </div>\r\n\r\n                    \r\n    \r\n                    <button type=\"submit\" class=\"btn btn-success ml-auto\" \r\n                    >Submit</button>\r\n                    \r\n                </div>\r\n            </form>\r\n\r\n            <h3 class=\"mt-3\">Image for middle of spinner</h3>\r\n\r\n            <form [formGroup]=\"CenterImageForm\" (ngSubmit)=\"onSubmitCenterImage()\">\r\n                <input class=\"mr-5\" formControlName=\"centerImage\" type=\"file\" (change)=\"ProcessCenterImage($event)\">\r\n                <button class=\"ml-5\" type=\"submit\" class=\"btn btn-success ml-auto\" \r\n                    >Submit</button>\r\n            </form>\r\n            <button class=\"ml-5\" class=\"btn btn-danger ml-auto\" (click)=\"deleteImage()\" \r\n            >Delete image</button>\r\n\r\n        </div>\r\n    \r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { EmailsService } from '../services/emails.service';\r\n\r\n@Component({\r\n  selector: 'app-email-list',\r\n  templateUrl: './email-list.component.html',\r\n  styleUrls: ['./email-list.component.scss']\r\n})\r\nexport class EmailListComponent implements OnInit {\r\n\r\n  public isMenuCollapsed = true;\r\n\r\n  emails: any;\r\n\r\n  constructor( private emailService: EmailsService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getEmails();\r\n  }\r\n\r\n  getEmails(): void {\r\n    this.emailService.getEmails()\r\n      .subscribe( emails => {\r\n        this.emails = emails;\r\n        console.log(this.emails);\r\n      })\r\n  }\r\n\r\n}\r\n","<div class=\"row bgColor\">\r\n\r\n    <div class=\"col-12 col-lg-2 navbar navbar-expand-lg p-0 bg-dark\">\r\n        <button class=\"navbar-toggler pl-4\" type=\"button\" (click)=\"isMenuCollapsed = !isMenuCollapsed\">\r\n            <span class=\"btn btn-secondary\">&#9776;</span> \r\n        </button>\r\n        <app-navbar class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" [ngbCollapse]=\"isMenuCollapsed\"></app-navbar>\r\n    </div>\r\n\r\n    <div class=\"container col-12 col-lg-10\">\r\n        <div id=\"title\">\r\n            <h2>List of collected Emails</h2>\r\n        </div>\r\n    \r\n        <div class=\"row\">\r\n            <div class=\"col-12 d-flex justify-content-end mb-5\">\r\n                <button class=\"btn btn-info\">Export results csv/excel</button>\r\n            </div>\r\n            <div class=\"table-responsive\" *ngIf=\"emails\">\r\n                <table class=\"table table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Email Address</th>\r\n                            <th>First Name</th>\r\n                            <th>Last Name</th>\r\n                            <th>Date Spin</th>\r\n                            <th>Result</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let email of emails\">\r\n                            <td>{{email.emailAddress}}</td>\r\n                            <td>{{email.firstName}}</td>\r\n                            <td>{{email.lastName}}</td>\r\n                            <td>{{email.updatedAt | date}}</td>\r\n                            <td>{{email.result}}</td>\r\n                        </tr>\r\n                    </tbody>\r\n    \r\n    \r\n                </table>\r\n            </div>\r\n            \r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { LoginService, userLogin } from '../services/login.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  LoginForm: FormGroup;\r\n  LoginError: boolean;\r\n\r\n  constructor( \r\n    private fb: FormBuilder,\r\n    private loginservice: LoginService,\r\n    private router: Router) {\r\n      this.createForm();\r\n     }\r\n\r\n  ngOnInit(): void {\r\n    this.LoginError = false;\r\n  }\r\n\r\n  createForm() {\r\n    this.LoginForm = this.fb.group({\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  onSubmit(){\r\n    if(this.LoginForm.status === \"VALID\"){\r\n      const user = new userLogin(this.LoginForm.controls.username.value, \r\n                                this.LoginForm.controls.password.value)\r\n      \r\n      this.loginservice.Login(user).subscribe((resp: any) => {\r\n         if(resp.success === true) {\r\n           this.LoginError = false;\r\n           localStorage.setItem(\"userToken\", resp.token);\r\n           this.router.navigate(['/customize-spinner']);\r\n         }\r\n      }, err => {\r\n        this.LoginError = true;\r\n        \r\n      })\r\n    }\r\n  }\r\n}\r\n","<div class=\"container\">\r\n\r\n\r\n    <div class=\"align-middle\">\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <div class=\"title d-flex justify-content-center\">\r\n                    <h1>LOGIN</h1>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    \r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <div class=\"formContent\">\r\n                    <form [formGroup]=\"LoginForm\" (ngSubmit)=\"onSubmit()\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12 d-flex justify-content-center mb-2\">\r\n                                <div class=\"field\">\r\n                                    <input formControlName=\"username\" type=\"text\" placeholder=\"Username\" required>\r\n                                </div>\r\n                            </div>\r\n    \r\n                            <div class=\"col-12 d-flex justify-content-center mb-2\">\r\n                                <div class=\"field\">\r\n                                    <input formControlName=\"password\" type=\"password\" placeholder=\"Enter your password\" required>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-12 d-flex justify-content-center\">\r\n                                <div class=\"field d-flex justify-content-end\">\r\n                                    <button class=\"btn btn-sm btn-danger\">Login</button>\r\n                                </div>\r\n                            </div>\r\n    \r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div class=\"errorMessage\" *ngIf=\"LoginError\">\r\n                    <p>Wrong Username or Password</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n    \r\n\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.scss']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor(\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  logout(){\r\n    localStorage.clear();\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n","<div class=\"container align-items-start pl-4\">\r\n\r\n  <div>\r\n    <div class=\"image img-fluid\">\r\n      <img src=\"https://dam.ngenespanol.com/wp-content/uploads/2019/06/arbol-mas-alto-del-mundo-770x395.png\" alt=\"Fixed Photo\">\r\n  </div>\r\n  <div class=\"mt-3\">\r\n      <ul class=\"nav flex-column\">\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/spinner\">SPINNER</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/customize-spinner\">CUSTOMIZE SPINNER</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/email-list\">EMAIL LIST</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/custom-script\">CUSTOM SCRIPIT</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n              <a class=\"nav-link\" href=\"#\">SUPPORT</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n              <a class=\"nav-link\" href=\"#\">REQUEST FEATURE</a>\r\n          </li>\r\n            \r\n        </ul>\r\n  </div>\r\n    <button class=\"btn btn-danger ml-auto\" (click)=\"logout()\">Logout</button>\r\n  </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CenterImageService {\r\n\r\n  URL_API = \"/api/v1/centerImage\";\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private processHTTPMsgService: ProcessHTTPMsgService\r\n  ) { }\r\n\r\n  getImageCenter(): Observable<any> {\r\n    return this.http.get<any>(this.URL_API)\r\n      .pipe(map((data:any) => data),\r\n      catchError(this.processHTTPMsgService.handleError));\r\n  }\r\n\r\n  sendImageCenter(Form:any): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n    };\r\n    return this.http.post<any>(this.URL_API, Form)\r\n      .pipe(catchError(this.processHTTPMsgService.handleError));\r\n  }; \r\n\r\n  deleteImageCenter() {\r\n    return this.http.delete(this.URL_API);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CustomScriptService {\r\n\r\n\r\n\r\n  URL_API = \"/api/v1/headerFooter\";\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private processHTTPMsgService: ProcessHTTPMsgService) { }\r\n\r\n  sendHeaderFooter(Form:any): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n    };\r\n    return this.http.post<any>(this.URL_API, Form)\r\n      .pipe(catchError(this.processHTTPMsgService.handleError));\r\n  }; \r\n\r\n  deleteHeaderFooter() {\r\n    return this.http.delete(this.URL_API);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmailsService {\r\n\r\n  URL_API = \"/api/v1/results\";\r\n\r\n  TOKEN = localStorage.getItem('userToken');\r\n  \r\n  httpOptions = {\r\n    headers: new HttpHeaders({ 'Authorization': `Bearer ${this.TOKEN}` })\r\n  };\r\n\r\n  \r\n  constructor(\r\n    private http: HttpClient,\r\n    private processHTTPMsgService: ProcessHTTPMsgService) { }\r\n\r\n  getEmails(): Observable<any> {\r\n    return this.http.get<any>(this.URL_API, this.httpOptions) //Check and test later\r\n      .pipe(map((data:any) => data),\r\n      catchError(this.processHTTPMsgService.handleError));\r\n  }\r\n\r\n  sendEmails(Form:any): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n    };\r\n    return this.http.post<any>(this.URL_API, Form)\r\n      .pipe(catchError(this.processHTTPMsgService.handleError));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private router: Router\r\n  ){}\r\n\r\n  canActivate(): boolean {\r\n    if( localStorage.getItem('userToken') ){\r\n      return true\r\n    } else {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HeaderFooterService {\r\n\r\n  URL_API_HEADER = \"/api/v1/headerFooter\";\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private processHTTPMsgService: ProcessHTTPMsgService) { }\r\n\r\n    getHeaderFooter(): Observable<any> {\r\n      return this.http.get<any>(this.URL_API_HEADER)\r\n      .pipe(map((data:any) => data),\r\n      catchError(this.processHTTPMsgService.handleError));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ImageService {\r\n\r\n  URL_API = \"/api/v1/imageUpload\";\r\n\r\n  TOKEN = localStorage.getItem('userToken');\r\n  \r\n  httpOptions = {\r\n    headers: new HttpHeaders({ 'Authorization': `Bearer ${this.TOKEN}` })\r\n  };\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public uploadImage(image: File): Observable<any> {\r\n    const imageF = new FormData();\r\n\r\n    imageF.append('imageFile', image);\r\n\r\n    return this.http.post(this.URL_API, imageF, this.httpOptions);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n  URL_API = \"/users/login\";\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  Login(user: userLogin){\r\n    return this.http.post(this.URL_API, user);\r\n  }\r\n}\r\n\r\n\r\nexport class userLogin{\r\n\r\n  username: string;\r\n  password: string;\r\n\r\n  constructor(user, pass){\r\n    this.username = user;\r\n    this.password = pass;\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { throwError } from 'rxjs';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProcessHTTPMsgService {\r\n\r\n  constructor() { }\r\n\r\n  public handleError(error: HttpErrorResponse | any) {\r\n    let errMsg: string;\r\n\r\n    if (error.error instanceof ErrorEvent) {\r\n      errMsg = error.error.message;\r\n    } else {\r\n      errMsg = `${error.status} - ${error.statusText || ''} ${error.error}`;\r\n    }\r\n\r\n    return throwError(errMsg);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { formSpinnerControl } from '../shared/form-spinner-controller';\r\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SpinnerCustomizerControllerService {\r\n\r\n  TOKEN = localStorage.getItem('userToken');\r\n  \r\n  httpOptions = {\r\n    headers: new HttpHeaders({ 'Authorization': `Bearer ${this.TOKEN}` })\r\n  };\r\n\r\n  URL_API = \"/api/v1/spinner\";\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private processHTTPMsgService: ProcessHTTPMsgService) { }\r\n\r\n  sendSpinner( spinnerArray: Array <formSpinnerControl>) {\r\n    return this.http.post(this.URL_API, spinnerArray, this.httpOptions);\r\n  }\r\n\r\n  deleteSpinner() {\r\n    return this.http.delete(this.URL_API, this.httpOptions);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SpinnerService {\r\n\r\n  URL_API_SPINNER = \"/api/v1/spinner\";\r\n  URL_API_HEADER = \"/api/v1/headerFooter\";\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private processHTTPMsgService: ProcessHTTPMsgService\r\n  ) { }\r\n\r\n  getSpinner(): Observable<any> {\r\n    return this.http.get<any>(this.URL_API_SPINNER) //Check and test later\r\n      .pipe(map((data:any) => data),\r\n      catchError(this.processHTTPMsgService.handleError));\r\n  }\r\n\r\n  //Inverter color function\r\n  invertColor(hex): any {\r\n    if (hex.indexOf('#') === 0) {\r\n      hex = hex.slice(1);\r\n    }\r\n    // convert 3-digit hex to 6-digits.\r\n    if (hex.length === 3) {\r\n      hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\r\n    }\r\n    if (hex.length !== 6) {\r\n      throw new Error('Invalid HEX color.');\r\n    }\r\n    // invert color components\r\n    var r = (255 - parseInt(hex.slice(0, 2), 16)).toString(16),\r\n        g = (255 - parseInt(hex.slice(2, 4), 16)).toString(16),\r\n        b = (255 - parseInt(hex.slice(4, 6), 16)).toString(16);\r\n    // pad each with zeros and return\r\n    function padZero(str) {\r\n      let len = 2;\r\n      var zeros = new Array(len).join('0');\r\n      return (zeros + str).slice(-len);\r\n    }\r\n    return '#' + padZero(r) + padZero(g) + padZero(b);\r\n  }\r\n  ///////////////////////////\r\n\r\n}\r\n","export class ImageSnippet {\r\n    pending: boolean = false;\r\n    status: string = 'init';\r\n    constructor(public src: string, public file: File) {}\r\n}","export class formSpinnerControl {\r\n    isItImage: boolean;\r\n    image: any;\r\n    textFieldOne: string;\r\n    percentage: number;\r\n    isItEmail: boolean;\r\n    textPopUp: string;\r\n    email: string;\r\n    bgColor: string;\r\n\r\n    constructor(isImage, image, textOne, percentage, isEmail, textPopUp, email, color){\r\n        this.isItImage = isImage;\r\n        this.image = image;\r\n        this.textFieldOne = textOne;\r\n        this.percentage = percentage;\r\n        this.isItEmail = isEmail;\r\n        this.textPopUp = textPopUp;\r\n        this.email = email;\r\n        this.bgColor = color;\r\n    }\r\n}\r\n","import { Component, OnInit, ViewChild, QueryList, ViewChildren, ElementRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { SpinnerService } from '../services/spinner.service';\r\nimport { HeaderFooterService } from '../services/header-footer.service';\r\nimport { EmailsService } from '../services/emails.service';\r\nimport { CenterImageService } from '../services/center-image.service';\r\n\r\n@Component({\r\n  selector: 'app-spinner',\r\n  templateUrl: './spinner.component.html',\r\n  styleUrls: ['./spinner.component.scss']\r\n})\r\nexport class SpinnerComponent implements OnInit {\r\n\r\n\r\n  API_IMAGE_URL = '/api/v1/imageUpload/';\r\n  SpinnerFields: any;\r\n  HeaderFooter: any;\r\n  bgColorStyle: any[] = ['']; // Backgorund color\r\n  fontColor: any[] = ['']; // Font Color\r\n\r\n  fieldStyleNth: any[] = [''] //Individual field style\r\n  holder: any[] = ['']\r\n\r\n  state: string = 'default';\r\n\r\n  //Animations\r\n  clicks: number = 0;\r\n  newDegree: number;\r\n  extraDegree: number; \r\n  totalDegree: number = 0;\r\n  spiningRotate: any;\r\n\r\n  @ViewChildren('wheelSec') wheelSecs: QueryList<any>;\r\n  @ViewChild('txt') Text;\r\n  @ViewChild('spin') spin;\r\n\r\n  spinMovemente: any;\r\n\r\n  //Results\r\n  angle: number;\r\n  initialDegreesStart: any[] = [''];\r\n  initialDegreesEnd: any[] = [''];\r\n  degreesRotated: number = 0;\r\n  resultingField: number = 0;\r\n  FinalResult: any;\r\n\r\n  sendEmailForm: FormGroup;\r\n  form: any;\r\n  formCopy: any;\r\n  errMess: string;\r\n  ///\r\n\r\n  //Center image\r\n  centerImage: any;\r\n\r\n  /// Modal results\r\n  closeResult = ''; \r\n  @ViewChild('ResultEmail') ResultEmail;\r\n  @ViewChild('ResultText') ResultText;\r\n\r\n  constructor( \r\n    private spinnerService: SpinnerService,\r\n    private headerFooterService: HeaderFooterService,\r\n    private emailSevice: EmailsService,\r\n    private modalService: NgbModal,\r\n    private centerImageService: CenterImageService,\r\n    private fb: FormBuilder ) { \r\n      this.createForm();\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    this.getHeaderFooter();\r\n    this.getSpinner();\r\n    this.getImageCenter();\r\n  }\r\n\r\n  getSpinner(): void {\r\n    this.spinnerService.getSpinner()\r\n      .subscribe( spinnerFields => {\r\n        this.SpinnerFields = spinnerFields;\r\n        this.angle = 360/this.SpinnerFields.length;\r\n        for(let i=0; i<this.SpinnerFields.length; i++) { //Substitute backslashes for slashes\r\n          this.SpinnerFields[i].image = this.SpinnerFields[i].image.replace(/\\\\/g, \"/\");\r\n          this.SpinnerFields[i].image = this.API_IMAGE_URL + this.SpinnerFields[i].image.slice(14);\r\n          this.bgColorStyle[i] = this.SpinnerFields[i].bgColor; // Backgorund color\r\n          this.fontColor[i] = this.spinnerService.invertColor(this.bgColorStyle[i]); //Font Color\r\n          this.holder[i] = {'transform': 'rotate(' + this.angle*(i) + 'deg)',\r\n                            '-webkit-transform': 'rotate(' + this.angle*(i) + 'deg)',\r\n                            '-moz-transform': 'rotate(' + this.angle*(i) + 'deg)',\r\n                            '-o-transform': 'rotate(' + this.angle*(i) + 'deg)',\r\n                            '-ms-transform': 'rotate(' + this.angle*(i) + 'deg)',}\r\n\r\n          this.fieldStyleNth[i] = {'transform': 'rotate(' + this.angle + 'deg)',\r\n                                  '-webkit-transform': 'rotate(' + this.angle + 'deg)',\r\n                                  '-moz-transform': 'rotate(' + this.angle + 'deg)',\r\n                                  '-o-transform': 'rotate(' + this.angle + 'deg)',\r\n                                  '-ms-transform': 'rotate(' + this.angle + 'deg)',\r\n                                  'background-color': this.bgColorStyle[i],\r\n                                  'color': this.fontColor[i]\t}\r\n\r\n          this.initialDegreesStart[i] = this.angle*i\r\n          this.initialDegreesEnd[i] = this.initialDegreesStart[i] + this.angle;\r\n        }\r\n      })\r\n  }\r\n\r\n  getHeaderFooter() {\r\n    this.headerFooterService.getHeaderFooter()\r\n      .subscribe( headerFooter => {\r\n        this.HeaderFooter = headerFooter[0];\r\n      });\r\n  }\r\n\r\n  getImageCenter() {\r\n    this.centerImageService.getImageCenter()\r\n      .subscribe(centerImage => {\r\n        this.centerImage = centerImage[0];\r\n        this.centerImage.centerImage = this.API_IMAGE_URL + this.centerImage.centerImage.slice(14);\r\n        console.log(centerImage);\r\n      });\r\n  }\r\n\r\n  rotate() {\r\n    this.getSpinner();\r\n    let degreeSpinn = 360*8;\r\n    this.clicks = ++this.clicks; ////\r\n    this.newDegree = degreeSpinn * this.clicks;  ////\r\n\r\n    this.CalculateDegreesRotated()\r\n\r\n    this.totalDegree = this.newDegree + this.extraDegree;\r\n    \r\n    this.spining();\r\n\r\n    this.ExposingResult()\r\n\r\n  }\r\n\r\n  spining() {\r\n    this.spiningRotate = { 'transform': 'rotate(-' + this.totalDegree + 'deg)'};\r\n  }\r\n\r\n\r\n  ExposingResult() {\r\n\r\n    console.log(this.SpinnerFields)\r\n\r\n    if (this.SpinnerFields[this.resultingField].isItEmail === true) {\r\n      setTimeout( () => {\r\n        this.open(this.ResultEmail)\r\n      }, 6500);\r\n  \r\n    }\r\n    else if (this.SpinnerFields[this.resultingField].isItEmail === false) {\r\n      setTimeout( () => {\r\n        this.open(this.ResultText)\r\n      }, 6500);  \r\n    }\r\n  }\r\n\r\n  createForm() {\r\n    this.sendEmailForm = this.fb.group({\r\n      firstName: [''],\r\n      lastName: [''],\r\n      emailAddress: [''],\r\n      result: ['']\r\n    });\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    this.formCopy = this.sendEmailForm.value;\r\n    this.formCopy.result = this.FinalResult.textPopUp;\r\n    console.log(this.formCopy);\r\n    this.emailSevice.sendEmails(this.formCopy)\r\n      .subscribe(emailForm => {\r\n        this.form = emailForm;\r\n        console.log(this.form);\r\n      }, err =>{\r\n        throw new Error('Error Sending the information about the spinner');\r\n      });\r\n    this.sendEmailForm.reset();\r\n\r\n  }\r\n\r\n  CalculateDegreesRotated() {\r\n    let DegreesArray = [];\r\n    let index, sum = 0\r\n    let random = Math.random();\r\n    let random2 = Math.random();\r\n\r\n    for( index = 0; index < this.SpinnerFields.length; index++) {\r\n      sum += this.SpinnerFields[index].percentage/100;\r\n      DegreesArray[index] = sum;\r\n    }\r\n\r\n    for ( index = 0; random < DegreesArray.length && random >= DegreesArray[index]; index++);\r\n\r\n    this.extraDegree = (this.initialDegreesEnd[index] - this.angle)\r\n      + Math.floor(random2 * (this.initialDegreesEnd[index] - (this.initialDegreesEnd[index] - this.angle)-1));\r\n  \r\n      this.resultingField = index;\r\n      console.log(index);\r\n\r\n      this.FinalResult = this.SpinnerFields[index]\r\n      console.log(this.FinalResult)\r\n    }\r\n\r\n\r\n    // Modal results\r\n    open(content) {\r\n      this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n        this.closeResult = `Closed with: ${result}`;\r\n      }, (reason) => {\r\n        this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n      });\r\n    }\r\n\r\n    private getDismissReason(reason: any): string {\r\n      if (reason === ModalDismissReasons.ESC) {\r\n        return 'by pressing ESC';\r\n      } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n        return 'by clicking on a backdrop';\r\n      } else {\r\n        return `with: ${reason}`;\r\n      }\r\n    }\r\n    ///////\r\n\r\n  }","\r\n<header *ngIf=\"HeaderFooter\">\r\n    <div [innerHTML]=\"HeaderFooter.header\"></div>\r\n</header>\r\n\r\n\r\n<div class=\"my-5 row\" *ngIf=\"HeaderFooter\">\r\n    <div class=\"col-12 d-flex justify-content-center\" id=\"title\">\r\n        <h2>{{HeaderFooter.pageTitle}}</h2>\r\n    </div>\r\n\r\n    <div class=\"col-12 d-flex justify-content-center mt-3\" id=\"description\">\r\n        <p>{{HeaderFooter.pageDescription}}</p>\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n<div id=\"wrapper\">\r\n            \r\n    <div *ngIf=\"SpinnerFields\" id=\"wheel\">\r\n\r\n        <div id=\"inner-wheel\" [style]=\"spiningRotate\">\r\n            <div *ngFor=\"let field of SpinnerFields; let i = index\">\r\n                <div #wheelSec>\r\n                    <div [style]=\"holder[i]\" class=\"hold\" *ngIf=\"field.isItImage\">\r\n                        <div  class=\"sec\" id=\"wheelSec\" [style]=\"fieldStyleNth[i]\">\r\n                            <div> <span> <img [src]=\"field.image\" alt=\"\">\r\n                                {{field.image}} </span></div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div [style]=\"holder[i]\" class=\"hold\" *ngIf=\"!field.isItImage\">\r\n                        <div class=\"sec\" [style]=\"fieldStyleNth[i]\">\r\n                            <div><span>{{field.textFieldOne}}</span></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n    \r\n            </div>       \r\n           \r\n\r\n        </div>\r\n        <div id=\"spin\" (click)=\"rotate()\" #spin [style]=\"spinMovemente\">\r\n            <div id=\"inner-spin\">\r\n              <div *ngIf=\"centerImage\">\r\n<<<<<<< HEAD\r\n                <img #Image src=\"{{centerImage.centerImage}}\" alt=\"CenterImage\">\r\n=======\r\n                <img src=\"{{centerImage.centerImage}}\">\r\n>>>>>>> 6be21e8745f81911319a594ee7b8941746555e75\r\n              </div>\r\n            </div>\r\n        </div>\r\n        \r\n        <div id=\"shine\"></div>\r\n        \r\n    </div>\r\n    \r\n    <div id=\"txt\" #txt></div>\r\n</div>\r\n  \r\n\r\n<footer *ngIf=\"HeaderFooter\">\r\n    <div [innerHTML]=\"HeaderFooter.footer\"></div>\r\n</footer>\r\n\r\n<ng-template #ResultEmail let-modal>\r\n    <div class=\"modal-header\">\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n\r\n    <div *ngIf=\"FinalResult\" class=\"modal-body\">\r\n        <h2>{{FinalResult.textPopUp}}</h2>\r\n        <form class=\"row\" [formGroup]=\"sendEmailForm\" (ngSubmit)=\"onSubmit()\">\r\n          <div class=\"col-12 d-flex justify-content-center my-3\">\r\n            <input formControlName=\"firstName\" type=\"text\" placeholder=\"First Name\">\r\n          </div>\r\n\r\n          <div class=\"col-12 d-flex justify-content-center mb-3\">\r\n            <input formControlName=\"lastName\" type=\"text\" placeholder=\"Last Name\">\r\n          </div>\r\n\r\n          <div class=\"col-12 d-flex justify-content-center mb-3\">\r\n            <input formControlName=\"emailAddress\" type=\"email\"  placeholder=\"email\">\r\n          </div>\r\n          \r\n          <div class=\"modal-footer\">\r\n            <button class=\"btn btn-success\">Send</button>\r\n            <button class=\"btn btn-danger\"(click)=\"modal.close('Save click')\">Close</button>\r\n\r\n          </div>\r\n      </form>\r\n    </div>\r\n\r\n\r\n  </ng-template>\r\n\r\n  <ng-template #ResultText let-modal>\r\n    <div class=\"modal-header\">\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n    <div *ngIf=\"FinalResult\" class=\"modal-body\">\r\n      <h2>{{FinalResult.textPopUp}}</h2>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-success\" (click)=\"modal.close('Save click')\">Close</button>\r\n    </div>\r\n  </ng-template>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}