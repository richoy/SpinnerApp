{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/animations/app.animations.ts","./src/app/app-routing/app-routing.module.ts","./src/app/app-routing/routes.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/backend-control/backend-control.component.ts","./src/app/backend-control/backend-control.component.html","./src/app/custom-script/custom-script.component.ts","./src/app/custom-script/custom-script.component.html","./src/app/customize-spinner/customize-spinner.component.ts","./src/app/customize-spinner/customize-spinner.component.html","./src/app/email-list/email-list.component.ts","./src/app/email-list/email-list.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/password-change/password-change.component.ts","./src/app/password-change/password-change.component.html","./src/app/services/center-image.service.ts","./src/app/services/change-password.service.ts","./src/app/services/csvconverter.service.ts","./src/app/services/custom-script.service.ts","./src/app/services/emails.service.ts","./src/app/services/guards/login.guard.ts","./src/app/services/header-footer.service.ts","./src/app/services/image.service.ts","./src/app/services/login.service.ts","./src/app/services/process-httpmsg.service.ts","./src/app/services/spinner-customizer-controller.service.ts","./src/app/services/spinner.service.ts","./src/app/shared/ImageSnippet.ts","./src/app/shared/baseHref.ts","./src/app/shared/form-spinner-controller.ts","./src/app/spinner/spinner.component.ts","./src/app/spinner/spinner.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.sass']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","import { trigger, state, style, animate, transition } from '@angular/animations';\r\n\r\nexport function visibility() {\r\n    return trigger('visibility', [\r\n        state('shown', style({\r\n          transform: 'scale(1.0)',\r\n          opacity: 1\r\n        })),\r\n        state('hidden', style({\r\n          transform: 'scale(0.5)',\r\n          opacity: 0\r\n        })),\r\n        transition('* => *', animate('0.5s ease-in-out'))\r\n      ])\r\n}\r\n\r\nexport function expand() {\r\n    return trigger('expand', [\r\n        state('*', style({ opacity: 1, transform: 'translateX(0)' })),\r\n        transition(':enter', [\r\n            style({ transform: 'translateY(-50%)', opacity:0 }),\r\n            animate('200ms ease-in', style({ opacity: 1, transform: 'translateX(0)' }))\r\n        ])\r\n    ]);\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { routes } from './routes';\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { LoginComponent } from '../login/login.component';\r\nimport { CustomizeSpinnerComponent } from '../customize-spinner/customize-spinner.component';\r\nimport { EmailListComponent } from '../email-list/email-list.component';\r\nimport { CustomScriptComponent } from '../custom-script/custom-script.component';\r\nimport { SpinnerComponent } from '../spinner/spinner.component';\r\nimport { BackendControlComponent } from '../backend-control/backend-control.component';\r\nimport { PasswordChangeComponent } from '../password-change/password-change.component';\r\nimport { AdminComponent } from '../admin/admin.component';\r\nimport { LoginGuard } from '../services/guards/login.guard';\r\n\r\nexport const routes: Routes = [\r\n    { path: 'spinner', component: SpinnerComponent },\r\n    { path: 'admin', component: AdminComponent,\r\n        children: [\r\n            { path: '', component: LoginComponent },\r\n            { path: 'bc', component: BackendControlComponent, canActivate: [LoginGuard],\r\n            children: [\r\n                { path: 'password-change', component: PasswordChangeComponent, canActivate: [LoginGuard] },\r\n                { path: 'customize-spinner', component: CustomizeSpinnerComponent, canActivate: [LoginGuard] },\r\n                { path: 'email-list', component: EmailListComponent, canActivate: [LoginGuard] },\r\n                { path: 'custom-script', component: CustomScriptComponent, canActivate: [LoginGuard]},\r\n            ] },\r\n        ] },\r\n    { path: '', redirectTo: '/spinner', pathMatch: 'full' },\r\n    { path: '**', redirectTo: '/spinner', pathMatch:'full' },\r\n    { path: 'admin', redirectTo: 'admin/login', pathMatch:'full' }\r\n];","import { Component, OnInit } from '@angular/core';\r\nimport { Meta, Title } from '@angular/platform-browser';\r\n\r\nimport { HeaderFooterService } from './services/header-footer.service';\r\nimport { baseHref } from './shared/baseHref';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit{\r\n\r\n  API_IMAGE_URL = `${baseHref}api/v1/imageUpload/`;\r\n  favIcon: HTMLLinkElement = document.querySelector('#favIcon');\r\n  baseHref: HTMLLinkElement = document.querySelector('#baseHref');\r\n  HeaderFooter: any;\r\n\r\n  title = 'spinner-app';\r\n  // code for testing backend, remove \"implements oninit\", constructor and ngOnInit later\r\n  testBackend:string;\r\n  constructor(    \r\n    private headerFooterService: HeaderFooterService,\r\n    private metaService: Meta,\r\n    private Pagetitle: Title) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getHeaderFooter();\r\n  }\r\n\r\n  getHeaderFooter() {\r\n    this.headerFooterService.getHeaderFooter()\r\n      .subscribe( headerFooter => {\r\n        this.HeaderFooter = headerFooter[0];\r\n        this.baseHref.href = baseHref;\r\n        this.favIcon.href = this.API_IMAGE_URL + this.HeaderFooter.favicon.slice(14);\r\n        this.Pagetitle.setTitle( this.HeaderFooter.pageTitle );\r\n        this.metaService.addTag({ name: 'description', content: this.HeaderFooter.pageDescription }); //Description\r\n        //this.headScript.appendChild(this.HeaderFooter.header);\r\n      });\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>","import { BrowserModule, Meta, Title } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule, NoopAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { bootstrap } from 'bootstrap'\r\n\r\nimport { AppRoutingModule } from './app-routing/app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { CustomizeSpinnerComponent } from './customize-spinner/customize-spinner.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { EmailListComponent } from './email-list/email-list.component';\r\nimport { CustomScriptComponent } from './custom-script/custom-script.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { SpinnerComponent } from './spinner/spinner.component';\r\nimport { PasswordChangeComponent } from './password-change/password-change.component';\r\nimport { BackendControlComponent } from './backend-control/backend-control.component';\r\nimport { baseHref } from './shared/baseHref';\nimport { AdminComponent } from './admin/admin.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    CustomizeSpinnerComponent,\r\n    EmailListComponent,\r\n    CustomScriptComponent,\r\n    NavbarComponent,\r\n    SpinnerComponent,\r\n    PasswordChangeComponent,\r\n    BackendControlComponent,\r\n    AdminComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    NoopAnimationsModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule\r\n  ],\r\n  providers: [\r\n    Meta, \r\n    Title,\r\n    {provide: 'baseHref', useValue: baseHref}],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-backend-control',\r\n  templateUrl: './backend-control.component.html',\r\n  styleUrls: ['./backend-control.component.scss']\r\n})\r\nexport class BackendControlComponent implements OnInit {\r\n\r\n  public isMenuCollapsed = true;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12 col-lg-2 menuBar navbar navbar-expand-lg p-0\">\r\n        <div class=\"ButtonToggler\">\r\n            <button class=\"navbar-toggler pl-4\" type=\"button\" (click)=\"isMenuCollapsed = !isMenuCollapsed\">\r\n                <span class=\"btn btn-secondary\">&#9776;</span> \r\n            </button>\r\n        </div>\r\n\r\n        <div class=\"appNavbar d-flex justify-content-center align-items-start\">\r\n            <app-navbar\r\n            class=\"collapse navbar-collapse\" \r\n            id=\"navbarSupportedContent\" \r\n            [ngbCollapse]=\"isMenuCollapsed\"\r\n            (click)=\"isMenuCollapsed = true\">\r\n            </app-navbar>\r\n        </div>\r\n\r\n\r\n    </div>\r\n    <div class=\"col-12 col-lg-10 routerOutletContent\">\r\n        <router-outlet class=\"routerOutlet\"></router-outlet>\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n<!--\r\n<div class=\"col-12 col-lg-2 navbar navbar-expand-lg p-0 bg-dark\">\r\n    <button class=\"navbar-toggler pl-4\" type=\"button\" (click)=\"isMenuCollapsed = !isMenuCollapsed\">\r\n        <span class=\"btn btn-secondary\">&#9776;</span> \r\n    </button>\r\n    <app-navbar class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" [ngbCollapse]=\"isMenuCollapsed\"></app-navbar>\r\n</div>\r\n-->","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { CustomScriptService } from '../services/custom-script.service';\r\nimport { ImageService } from '../services/image.service';\r\nimport { HeaderFooterService } from '../services/header-footer.service';\r\nimport { ImageSnippet } from '../shared/ImageSnippet';\r\nimport { expand } from '../animations/app.animations';\r\n\r\n@Component({\r\n  selector: 'app-custom-script',\r\n  templateUrl: './custom-script.component.html',\r\n  styleUrls: ['./custom-script.component.scss'],\r\n  animations: [\r\n    expand()\r\n  ]\r\n})\r\nexport class CustomScriptComponent implements OnInit {\r\n\r\n\r\n  HeaderFooterForm: FormGroup;\r\n  form: any;\r\n  formCopy: any;\r\n  errMess: string;\r\n\r\n  selectedFile: ImageSnippet;\r\n  StringOfImageUpload: string;\r\n  SuccessfullyUpload: boolean = false;\r\n  UnsuccessfullyUpload: boolean = false;\r\n\r\n  formErrors = {\r\n    'header': '',\r\n    'footer': '',\r\n    'pageTitle': '',\r\n    'pageDescription': ''\r\n  };\r\n\r\n  validationMessages = {\r\n    'header': {\r\n      'required': 'Header is required.'\r\n    },\r\n    'footer': {\r\n      'required': 'Footer is required.'\r\n    },\r\n    'pageTitle': {\r\n      'required': 'Title is required.',\r\n    },\r\n    'pageDescription': {\r\n      'required': 'Description is required'\r\n    }\r\n  };\r\n\r\n\r\n  //Submition\r\n\r\n  FormSuccessfullySend: boolean = false;\r\n  HeaderAndFooterData: any;\r\n\r\n  constructor( \r\n    private customScriptService: CustomScriptService,\r\n    private imageService: ImageService,\r\n    private headerandFooterService: HeaderFooterService,\r\n    private fb: FormBuilder) {\r\n      this.createForm();\r\n     }\r\n\r\n  ngOnInit(): void {\r\n    this.getPreviousData();\r\n  }\r\n  \r\n  getPreviousData() {\r\n    this.headerandFooterService.getHeaderFooter()\r\n      .subscribe(data => {\r\n        this.HeaderAndFooterData = data;\r\n        delete this.HeaderAndFooterData[0]['createdAt'];\r\n        delete this.HeaderAndFooterData[0]['updatedAt'];\r\n        delete this.HeaderAndFooterData[0]['_id'];\r\n        delete this.HeaderAndFooterData[0]['__v'];\r\n\r\n        this.setValuesofBackendHeaderAndFooter(this.HeaderFooterForm, this.HeaderAndFooterData[0]);\r\n\r\n        if ( this.HeaderFooterForm.value.favicon != '' ) {\r\n          this.onSuccess(this.HeaderAndFooterData[0].favicon);\r\n        } else if (this.HeaderFooterForm.value.favicon == '') {\r\n          this.SuccessfullyUpload = false;\r\n          this.UnsuccessfullyUpload = false;\r\n        }\r\n\r\n        console.log(this.SuccessfullyUpload);\r\n        console.log(this.UnsuccessfullyUpload);\r\n      },(err) => {\r\n        this.SuccessfullyUpload = false;\r\n        this.UnsuccessfullyUpload = false;\r\n        throw new Error(err);\r\n      });\r\n  }\r\n\r\n  setValuesofBackendHeaderAndFooter(form, data) {\r\n    form.patchValue(data);\r\n  } \r\n\r\n  createForm() {\r\n    this.HeaderFooterForm = this.fb.group({\r\n      header: [''],\r\n      footer: [''],\r\n      pageTitle: [''],\r\n      pageDescription: [''],\r\n      favicon: ['']\r\n    });\r\n    this.HeaderFooterForm.valueChanges\r\n    .subscribe(data => this.onValueChanged(data));\r\n\r\n    this.onValueChanged(); // (re)set validation messages now\r\n  }\r\n\r\n\r\n  onValueChanged(data?: any) {\r\n    if (!this.HeaderFooterForm) { return; }\r\n    const form = this.HeaderFooterForm;\r\n    for (const field in this.formErrors) {\r\n      if (this.formErrors.hasOwnProperty(field)) {\r\n        // clear previous error message (if any)\r\n        this.formErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && control.dirty && !control.valid) {\r\n          const messages = this.validationMessages[field];\r\n          for ( const key in control.errors) {\r\n            if (control.errors.hasOwnProperty(key)) {\r\n              this.formErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  private onSuccess(path) {\r\n    this.StringOfImageUpload = path;\r\n    this.SuccessfullyUpload = true;\r\n    this.UnsuccessfullyUpload = false; \r\n  }\r\n\r\n  private onError() {\r\n    this.UnsuccessfullyUpload = true; \r\n    this.SuccessfullyUpload = false;\r\n  }\r\n\r\n\r\n  processFile(image: any) {\r\n    let files = image.srcElement.files;\r\n    let file: File = files[0];\r\n    let reader = new FileReader();\r\n    reader.addEventListener('load', (event: any) => {\r\n      this.selectedFile = new ImageSnippet(event.target.result, file);\r\n      this.imageService.uploadImage(this.selectedFile.file)\r\n        .subscribe((res) => {\r\n          this.onSuccess(res.path);\r\n        },\r\n        (err) => {\r\n          this.onError()\r\n          throw new Error(err);\r\n        });\r\n    });\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.FormSuccessfullySend = true;\r\n    this.customScriptService.deleteHeaderFooter().subscribe(()=> {\r\n      this.formCopy = this.HeaderFooterForm.value;\r\n      this.formCopy.favicon = this.StringOfImageUpload.replace(/\\\\/g, \"/\");\r\n      this.customScriptService.sendHeaderFooter(this.formCopy)\r\n        .subscribe(HFform => {\r\n          this.form = HFform;\r\n          setTimeout( () => {\r\n          this.FormSuccessfullySend = false\r\n          },2000);\r\n        }, err =>{\r\n          throw new Error('Error Sending the information about the spinner');\r\n        });\r\n    }, err => {\r\n      throw new Error('Error deleting the information of the previous spineer');\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"bgColor\">\r\n\r\n    <div class=\"container\">\r\n        <div class=\"title\">\r\n            <h2>Insert Custom Script</h2>\r\n        </div>\r\n    \r\n        <div class=\"row\">\r\n            <div class=\"col-10 mr-auto\" [hidden]=\"FormSuccessfullySend\" [@expand]>\r\n                <form [formGroup]=\"HeaderFooterForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <div class=\"mb-3\">\r\n                        <label for=\"header\">HEADER:</label>\r\n                        <textarea required formControlName=\"header\" class=\"form-control\" id=\"header\" name=\"header\" rows=\"3\"></textarea>\r\n                        \r\n \r\n                    </div>\r\n    \r\n                    <div class=\"mb-3\">\r\n                        <label for=\"footer\">Footer:</label>\r\n                        <textarea required formControlName=\"footer\" class=\"form-control\" id=\"footer\" name=\"footer\" rows=\"3\"></textarea>    \r\n                    </div>\r\n    \r\n                    <div class=\"mb-3\">\r\n                        <label for=\"title\">Page title:</label>\r\n                        <input required formControlName=\"pageTitle\" type=\"text\" class=\"form-control\" id=\"title\" name=\"title\">  \r\n                    </div>\r\n    \r\n                    <div class=\"mb-3\">\r\n                        <label for=\"description\">Page description:</label>\r\n                        <textarea required formControlName=\"pageDescription\" class=\"form-control\" id=\"description\" name=\"description\" rows=\"3\"></textarea>    \r\n                    </div>\r\n    \r\n                    <div class=\"mb-3\">\r\n                        <label for=\"favicon\">Favicon:</label>\r\n\r\n                        <div class=\"ImageUploadAndMessage d-flex\" id=\"ImageUploadBox\">\r\n                            <div id=\"FileUploadBox\">\r\n                                <button type=\"button\" class=\"btn btn-sm btn-success\" (click)=\"favicon.click()\">\r\n                                    <span>File Upload</span>\r\n                                    <input \r\n                                    style=\"display:none;\"\r\n                                    #favicon\r\n                                    type=\"file\" \r\n                                    (change)=\"processFile($event)\"> \r\n                                </button>\r\n                            </div>\r\n\r\n                            <div id=\"FileUploadMessageBox\" class=\"ml-1\">\r\n                                <div *ngIf=\"SuccessfullyUpload\" class=\"alert alert-success d-flex justify-content-center\"> <span>&#10004;</span></div>\r\n                                <div *ngIf=\"UnsuccessfullyUpload\" class=\"alert alert-danger d-flex justify-content-center\"> <span>&#x2716;</span></div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n\r\n    \r\n                    <div class=\"d-flex justify-content-end\">\r\n                        <button class=\"btn btn-success\">Save</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n            <div class=\"customScriptSuccessfullySend\" [hidden]=\"!FormSuccessfullySend\" [@expand]>\r\n                <h2>The custom script has been successfully saved</h2>\r\n            </div>\r\n        </div>\r\n    \r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit, QueryList, ViewChildren, ViewChild, ElementRef, OnChanges } from '@angular/core';\r\nimport { FormBuilder,FormArray, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { Observable, fromEvent, merge} from 'rxjs';\r\nimport { map, debounceTime, distinctUntilChanged, filter } from 'rxjs/operators';\r\nimport { SpinnerCustomizerControllerService } from '../services/spinner-customizer-controller.service';\r\nimport { SpinnerService } from '../services/spinner.service';\r\nimport { ImageService } from '../services/image.service';\r\nimport { CenterImageService } from '../services/center-image.service';\r\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\r\nimport { formSpinnerControl } from '../shared/form-spinner-controller';\r\nimport { ImageSnippet } from '../shared/ImageSnippet';\r\nimport { visibility, expand } from '../animations/app.animations'      \r\n\r\n@Component({\r\n  selector: 'app-customize-spinner',\r\n  templateUrl: './customize-spinner.component.html',\r\n  styleUrls: ['./customize-spinner.component.scss'],\r\n  animations: [\r\n    visibility(),\r\n    expand()\r\n  ]\r\n})\r\nexport class CustomizeSpinnerComponent implements OnInit {\r\n\r\n  DidModalOpen:boolean = false;\r\n  //Collapse menu\r\n  public isMenuCollapsed = true;\r\n\r\n  // For number of field dropdown\r\n  @ViewChild('numberOfFields') numberOfFields;\r\n  \r\n  items: any[] = [];\r\n\r\n  spinnerForm: FormGroup;\r\n  submitPressed = false;\r\n\r\n  // For imageUpload / Text Field\r\n  itIsImageFile: boolean[] = [false];\r\n  itIsTextField: boolean[] = [false];\r\n  // For imageUpload / Text Field\r\n\r\n  // For results dropdown\r\n  itIsTextPopUp: boolean[] = [false];\r\n  itIsEmailPopUp: boolean[] = [false];\r\n  // For results dropdown\r\n\r\n  // Form validations:\r\n  //controllerForm: FormGroup;\r\n  errMess: string;\r\n\r\n  // For image Upload\r\n  selectedFile: ImageSnippet;\r\n  StringOfImageUpload: UploadFile[] = [];\r\n  SuccessfullyUpload: boolean[] = [];\r\n  UnsuccessfullyUpload: boolean[] = [];\r\n\r\n  //For percentage 100%\r\n  totalPercentage: any[] = [];\r\n  percentageSum: number;\r\n  isPercentageLessThanZero: boolean[] =[ false];\r\n  isPercentageMoreThanHundred: boolean[] = [false];\r\n  SumOfPercentageEqualHundred: boolean = false;\r\n  SumOfPercentageMoreThanHundred: boolean=false;\r\n  percentageValues: number[] = [];\r\n  valueToReach100: number;\r\n  valueOver100: number;\r\n  @ViewChildren('percentage') percentage: QueryList<any>;\r\n\r\n\r\n  //CENTER IMAGE\r\n  StringOfSpinnerCenter: String;\r\n  SuccessSpinnerCenter: boolean;\r\n  UnsuccessSpinnerCenter: boolean;\r\n  CenterImageForm: FormGroup;\r\n  selectedCenterFile: ImageSnippet;\r\n  centerCopy: any;\r\n  centerform: any;\r\n\r\n  //Submiting\r\n\r\n  sucessFormSubmition: boolean = false;\r\n  sucessCenterImageSubmition: boolean = false;\r\n  unsuccessSendingForm: boolean = false;\r\n\r\n  //Get spinner stored data\r\n  SpinnerFieldsStoreData: any;\r\n  CenterImageFieldStoreData: any;\r\n\r\n  closeResult = '';\r\n  @ViewChild('modalPercentageLessThan100') modalPercentageLessThan100;\r\n  @ViewChild('modalPercentageMoreThan100') modalPercentageMoreThan100;\r\n\r\n  constructor(\r\n    public formBuilder:FormBuilder,// For number of field dropdown\r\n    private spinnerService: SpinnerCustomizerControllerService,// Form validations\r\n    private imageService: ImageService,\r\n    private centerImageService: CenterImageService,\r\n    private getDataSpinnerService: SpinnerService,\r\n    private modalService: NgbModal\r\n     ) {       \r\n    // Setting Form Array\r\n    this.spinnerForm = this.formBuilder.group({\r\n\t\t\tspinnerArray: this.formBuilder.array(\r\n\t\t\t\t[],\r\n\t\t\t\t[Validators.required])\r\n    });\r\n    \r\n    this.createFormFieldForCenterSpinnerImage();\r\n   }\r\n\r\n  ngOnInit(): void {\r\n\r\n    for (let i = 0; i < 6; i++) {\r\n      this.addControl(i);\r\n    }\r\n\r\n        // For imageUpload / Text Field\r\n    let i = 0;\r\n    for (i=0; i<=this.items.length; i++) {\r\n      this.itIsImageFile[i] = true;\r\n      this.itIsTextField[i] = false;\r\n    }\r\n    // For imageUpload / Text Field\r\n\r\n    // For number of field dropdown\r\n    for (i=0; i<=this.items.length; i++) {\r\n      this.itIsTextPopUp[i] = true;\r\n  }\r\n    \r\n    this.getSpinnerStoredInfo();\r\n    \r\n  \r\n    // For number of field dropdown\r\n    this.definingPercentage();\r\n  }\r\n\r\n  getSpinnerStoredInfo() {\r\n    this.getDataSpinnerService.getSpinner()\r\n      .subscribe( data => {\r\n        \r\n        this.SpinnerFieldsStoreData = data;\r\n\r\n        //Not used elements of the Data Array\r\n        for(let i=0; i<this.SpinnerFieldsStoreData.length; i++) {\r\n          this.SpinnerFieldsStoreData[i]['file'] = this.SpinnerFieldsStoreData[i]['image'];\r\n          delete this.SpinnerFieldsStoreData[i]['image'];\r\n          delete this.SpinnerFieldsStoreData[i]['createdAt'];\r\n          delete this.SpinnerFieldsStoreData[i]['updatedAt'];\r\n          delete this.SpinnerFieldsStoreData[i]['_id'];\r\n          delete this.SpinnerFieldsStoreData[i]['__v'];\r\n          delete this.SpinnerFieldsStoreData[i]['email'];\r\n        }\r\n\r\n        // Getting Number of fields\r\n        let GetDOMNumberOfFields = this.numberOfFields.nativeElement[this.SpinnerFieldsStoreData.length - 2];\r\n        GetDOMNumberOfFields.setAttribute('selected', 'selected');\r\n\r\n        for (let i = 0; i < this.SpinnerFieldsStoreData.length; i++) {\r\n          this.addControl(i);\r\n        }\r\n        this.onLoad(GetDOMNumberOfFields.value);\r\n\r\n        //Setting Values\r\n        this.setValuesofBackendSpinner(this.spinnerArray, this.SpinnerFieldsStoreData);\r\n        for(let i=0; i<this.SpinnerFieldsStoreData.length; i++) {\r\n          \r\n          if (this.SpinnerFieldsStoreData[i].isItImage == true) {\r\n            this.onSuccess(i, this.SpinnerFieldsStoreData[i].file)\r\n          } else if (this.SpinnerFieldsStoreData[i].isItImage == false) {\r\n            this.itIsImageFile[i] = false;\r\n            this.itIsTextField[i] = true;\r\n            this.SuccessfullyUpload[i] = false;\r\n            this.UnsuccessfullyUpload[i] = false;\r\n          }\r\n\r\n          this.percentageValues[i] = this.SpinnerFieldsStoreData[i].percentage;\r\n        }\r\n        this.checkfullpercentage()\r\n      },\r\n      (err) => {\r\n      \r\n        throw new Error(err);\r\n      });\r\n  \r\n    this.centerImageService.getImageCenter()\r\n      .subscribe( data => {\r\n\r\n        this.CenterImageFieldStoreData = data;\r\n        delete this.CenterImageFieldStoreData[0]['createdAt'];\r\n        delete this.CenterImageFieldStoreData[0]['updatedAt'];\r\n        delete this.CenterImageFieldStoreData[0]['_id'];\r\n        delete this.CenterImageFieldStoreData[0]['__v'];\r\n        this.setValuesofBackendSpinner(this.CenterImageForm, this.CenterImageFieldStoreData[0]);\r\n        if (this.CenterImageForm.value.centerImage != '') {\r\n          this.onSuccessCenter(this.CenterImageFieldStoreData[0].centerImage);\r\n        } else if(this.CenterImageForm.value.centerImage == '') {\r\n          this.SuccessSpinnerCenter = false;\r\n          this.UnsuccessSpinnerCenter = false;\r\n        }\r\n      },(err) => {\r\n        this.SuccessSpinnerCenter = false;\r\n        this.UnsuccessSpinnerCenter = false;\r\n        throw new Error(err);\r\n      });\r\n    \r\n    }\r\n\r\n  setValuesofBackendSpinner(form, data) {\r\n    form.patchValue(data);\r\n  } \r\n\r\n\tcreateSpFormGroup() {\r\n    let SpinnerForm = this.formBuilder.group({\r\n      isItImage: [true, [Validators.required]],\r\n      file: [''],\r\n      textFieldOne:[''],\r\n      percentage: ['', [Validators.required, Validators.pattern(/^[0-9]\\d*$/), Validators.min(0), Validators.max(100)]],\r\n      isItEmail: [true, [Validators.required]],\r\n      textPopUp: [''],\r\n      emails: [''],\r\n      bgColor: [''],\r\n    });\r\n\r\n    SpinnerForm.valueChanges.subscribe( data => {\r\n      this.onValueChanged(SpinnerForm, data);\r\n    });\r\n    this.onValueChanged(SpinnerForm);\r\n\r\n    return SpinnerForm\r\n    \r\n  }\r\n  SpinnerformErrors = {\r\n    'isItImage': '',\r\n    'percentage': '',\r\n    'isItEmail': '',\r\n    'bgColor': '',\r\n  };\r\n  validationMessages = {\r\n    'isItImage': {\r\n      'required': 'image or text is required.'\r\n    },\r\n    'percentage': {\r\n      'required': 'Percentage is required.',\r\n      'pattern': 'Value must be a number',\r\n      'min': 'Minumun possible value is 0%',\r\n      'max': 'Maximum possible value is 100%'\r\n    },\r\n    'isItEmail': {\r\n      'required': 'is it email? is required.'\r\n    },\r\n    'bgColor': {\r\n      'required': 'color is required.'\r\n    }\r\n  }\r\n\r\n  createFormFieldForCenterSpinnerImage() {\r\n    this.CenterImageForm = this.formBuilder.group({\r\n      centerImage: ['']\r\n    });\r\n  }\r\n\r\n  get spinnerArray(): FormArray {\r\n\t\tif ( this.spinnerForm) {\r\n      return this.spinnerForm.get('spinnerArray') as FormArray;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  MessageErrorChange(i) {\r\n\r\n    const keyPressEvent$  = fromEvent(this.percentage.toArray()[i].nativeElement, 'keypress');\r\n    const keyDownEvent$  = fromEvent(this.percentage.toArray()[i].nativeElement, 'keydown');\r\n    const keyupEvent$  = fromEvent(this.percentage.toArray()[i].nativeElement, 'keyup');\r\n    const inputEvent$  = fromEvent(this.percentage.toArray()[i].nativeElement, 'input');\r\n    const changeEvent$  = fromEvent(this.percentage.toArray()[i].nativeElement, 'change');\r\n    const focusEvent$  = fromEvent(this.percentage.toArray()[i].nativeElement, 'focus');\r\n    const focusoutEvent$  = fromEvent(this.percentage.toArray()[i].nativeElement, 'blur');\r\n    \r\n    const allEvents$ = merge(   \r\n      changeEvent$,\r\n      inputEvent$,\r\n      keyDownEvent$,\r\n      keyPressEvent$,   \r\n      keyupEvent$,\r\n      focusEvent$,\r\n      focusoutEvent$\r\n    );\r\n    \r\n    allEvents$\r\n      .pipe(\r\n        map((event: any) => {\r\n\r\n        let value = Number(event.target.value);\r\n        if (value > 100) {\r\n          event.target.value = 100;\r\n          this.isPercentageMoreThanHundred[i] = true;\r\n          this.percentageValues[i] = value;\r\n        } else if (value < 0) {\r\n          event.target.value = 0;\r\n          this.isPercentageLessThanZero[i] = true;\r\n        } else if (value >= 0 && value <= 100) {\r\n          this.isPercentageMoreThanHundred[i] = false;\r\n          this.isPercentageLessThanZero[i] = false;\r\n          this.percentageValues[i] = value;\r\n        }\r\n\r\n        this.checkfullpercentage()\r\n      }),\r\n      debounceTime(1)).subscribe();\r\n      \r\n      this.DidModalOpen = false;\r\n  }\r\n\r\n  checkfullpercentage(){\r\n    this.percentageSum = this.percentageValues.reduce(function(a, b){\r\n      return a + b;\r\n    }, 0);\r\n    if(this.percentageSum === 100) {\r\n      this.SumOfPercentageEqualHundred = true;\r\n      this.SumOfPercentageMoreThanHundred = false;\r\n    } else if(this.percentageSum <= 100 ) {\r\n      this.SumOfPercentageEqualHundred = false;\r\n      this.SumOfPercentageMoreThanHundred = false\r\n    } else if(this.percentageSum > 100) {\r\n      this.SumOfPercentageMoreThanHundred = true\r\n      this.SumOfPercentageEqualHundred = false;\r\n      if(this.DidModalOpen === false) {\r\n        this.DidModalOpen = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  definingPercentage() {\r\n    for (let i=0; i<this.items.length; i++) {\r\n      this.isPercentageMoreThanHundred.length = i\r\n      this.percentageValues.length = i\r\n      this.isPercentageLessThanZero.length = i;\r\n      this.isPercentageMoreThanHundred[i] = false;\r\n      this.isPercentageLessThanZero[i]=false\r\n      this.percentageValues[i] = 0;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  onValueChanged(SpinnerForm ,data?: any) {\r\n    if (!SpinnerForm) {return;}\r\n    const form = SpinnerForm;\r\n    for (const field in this.SpinnerformErrors) {\r\n      if (this.SpinnerformErrors.hasOwnProperty(field)) {\r\n        // clear previous error message (if any)\r\n        this.SpinnerformErrors[field] = '';\r\n        const control = form.get(field);\r\n        if (control && control.dirty && !control.valid) {\r\n          const messages = this.validationMessages[field];\r\n          for (const key in control.errors) {\r\n            if (control.errors.hasOwnProperty(key)) {\r\n              this.SpinnerformErrors[field] += messages[key] + ' ';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n   //Image Upload\r\n  private onSuccess(index, path) {\r\n    this.StringOfImageUpload.push(new UploadFile(index, path));\r\n    this.SuccessfullyUpload[index] = true;\r\n    this.UnsuccessfullyUpload[index] = false; \r\n  }\r\n\r\n  private onError(index) {\r\n    this.UnsuccessfullyUpload[index] = true; \r\n    this.SuccessfullyUpload[index] = false;\r\n  }\r\n\r\n  processFile(image: any, index) {\r\n      let files = image.srcElement.files;\r\n      let file: File = files[0];\r\n      let reader = new FileReader();\r\n      reader.addEventListener('load', (event: any) => {\r\n        this.selectedFile = new ImageSnippet(event.target.result, file);\r\n        this.imageService.uploadImage(this.selectedFile.file)\r\n          .subscribe((res) => {\r\n            this.onSuccess(index, res.path);\r\n          },\r\n          (err) => {\r\n            this.onError(index)\r\n            throw new Error(err);\r\n          });\r\n      });\r\n      reader.readAsDataURL(file);\r\n  }\r\n\r\n\r\n  //Center spinner image\r\n\r\n  private onSuccessCenter(path) {\r\n    this.StringOfSpinnerCenter = path;\r\n    this.SuccessSpinnerCenter = true;\r\n    this.UnsuccessSpinnerCenter = false; \r\n  }\r\n\r\n  private onErrorCenter() {\r\n    this.UnsuccessSpinnerCenter = true; \r\n    this.SuccessSpinnerCenter = false;\r\n  }\r\n\r\n  centerImageButtonAppears: boolean = false;\r\n\r\n  ProcessCenterImage(image: any) {\r\n    let files = image.srcElement.files;\r\n    let file: File = files[0];\r\n    let reader = new FileReader();\r\n    reader.addEventListener('load', (event: any) => {\r\n      this.selectedCenterFile = new ImageSnippet(event.target.result, file);\r\n      this.imageService.uploadImage(this.selectedCenterFile.file)\r\n        .subscribe((res) => {\r\n          this.onSuccessCenter(res.path);\r\n          this.centerImageButtonAppears = true;\r\n        },\r\n        (err) => {\r\n          this.onErrorCenter()\r\n          throw new Error(err);\r\n        });\r\n    });\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  /////\r\n  \r\n\r\n\r\n  // For number of field dropdown\r\n  onChange(i) {\r\n    this.items.length = 0;   // eliminates defalut setting before adding other\r\n    this.spinnerForm.reset();\r\n    this.percentageSum = 0;\r\n\r\n    this.getDataSpinnerService.getSpinner()\r\n      .subscribe( data => {\r\n        \r\n        this.SpinnerFieldsStoreData = data;\r\n        for(let index=0; index<this.SpinnerFieldsStoreData.length; index++) {\r\n          this.SpinnerFieldsStoreData[index]['file'] = this.SpinnerFieldsStoreData[index]['image'];\r\n          delete this.SpinnerFieldsStoreData[index]['image'];\r\n          delete this.SpinnerFieldsStoreData[index]['createdAt'];\r\n          delete this.SpinnerFieldsStoreData[index]['updatedAt'];\r\n          delete this.SpinnerFieldsStoreData[index]['_id'];\r\n          delete this.SpinnerFieldsStoreData[index]['__v'];\r\n          delete this.SpinnerFieldsStoreData[index]['email'];\r\n        }\r\n        this.setValuesofBackendSpinner(this.spinnerArray, this.SpinnerFieldsStoreData);\r\n\r\n        for(let index=0; index < this.SpinnerFieldsStoreData.length; index++) {\r\n          if (this.SpinnerFieldsStoreData[index].isItImage == true) {\r\n            this.onSuccess(index, this.SpinnerFieldsStoreData[index].file)\r\n          } else if (this.SpinnerFieldsStoreData[index].isItImage == false) {\r\n            this.itIsImageFile[index] = false;\r\n            this.itIsTextField[index] = true;\r\n            this.SuccessfullyUpload[index] = false;\r\n            this.UnsuccessfullyUpload[index] = false;\r\n          }\r\n        }\r\n\r\n        if ( this.SpinnerFieldsStoreData.length <= (i-1) ){\r\n          for(let index=0; index < this.SpinnerFieldsStoreData.length; index++) {\r\n            this.percentageValues[index] = this.SpinnerFieldsStoreData[index].percentage;\r\n          }\r\n        } else if (this.SpinnerFieldsStoreData.length > (i-1)) {\r\n          for(let index=0; index < i - 1; index++) {\r\n            this.percentageValues[index] = this.SpinnerFieldsStoreData[index].percentage;\r\n          }\r\n        }\r\n        console.log('percentageVale',this.percentageValues)\r\n        this.checkfullpercentage()\r\n      },(err) => {\r\n        this.SuccessSpinnerCenter = false;\r\n        this.UnsuccessSpinnerCenter = false;\r\n        throw new Error(err);\r\n      });\r\n\r\n\r\n    for( let index = 0; index < i; index++) {\r\n      this.SuccessfullyUpload[index] = false;\r\n      this.UnsuccessfullyUpload[index] = false;\r\n      this.itIsTextField[index] = false;\r\n    }\r\n\r\n    while(this.spinnerArray.length > 0) {\r\n      this.items.pop();\r\n      this.deleteSpinnerField(0);\r\n\r\n    }\r\n    while(i > 0) {\r\n      this.addControl(i);\r\n      i--;\r\n    }\r\n    for (i=0; i<=this.items.length; i++) {\r\n      this.itIsImageFile[i] = true;\r\n    }\r\n    for (i=0; i<=this.items.length; i++) {\r\n      this.itIsTextPopUp[i] = true;\r\n    }\r\n    this.definingPercentage();\r\n    \r\n  }\r\n\r\n  onLoad(i) {\r\n    this.items.length = 0;   // eliminates defalut setting before adding other\r\n    this.spinnerForm.reset();\r\n    this.percentageSum = 0;\r\n    for( let index = 0; index < i; index++) {\r\n      this.SuccessfullyUpload[index] = false;\r\n      this.UnsuccessfullyUpload[index] = false;\r\n      this.itIsTextField[index] = false;\r\n    }\r\n\r\n    while(this.spinnerArray.length > 0) {\r\n      this.items.pop();\r\n      this.deleteSpinnerField(0);\r\n    }\r\n    while(i > 0) {\r\n      this.addControl(i);\r\n      i--;\r\n    }\r\n    for (i=0; i<=this.items.length; i++) {\r\n      this.itIsImageFile[i] = true;\r\n    }\r\n    for (i=0; i<=this.items.length; i++) {\r\n      this.itIsTextPopUp[i] = true;\r\n    }\r\n    this.definingPercentage();\r\n  }\r\n\r\n  addControl(i) {\r\n    this.items.push({id: i.toString()})\r\n\t\tlet fg = this.createSpFormGroup();\r\n\t\tif(this.spinnerArray) {\r\n      this.spinnerArray.push(fg);\r\n    }\r\n  }\r\n\r\n  deleteSpinnerField(idx: number) {\r\n    this.spinnerArray.removeAt(idx);\r\n  }\r\n\r\n  deleteImage() {\r\n\r\n    this.centerImageService.deleteImageCenter()\r\n      .subscribe(() => {\r\n        this.setValuesofBackendSpinner(this.CenterImageForm, {'centerImage': ''});\r\n        this.UnsuccessSpinnerCenter = false;\r\n        this.sucessCenterImageSubmition = true;\r\n        this.SuccessSpinnerCenter = false;\r\n        this.CenterImageForm.reset();\r\n        setTimeout( () => {\r\n          this.sucessCenterImageSubmition = false;\r\n        }, 2000);\r\n      }, err => {\r\n        throw new Error('Error deleting the information of the previous spineer');\r\n      });\r\n  }\r\n  \r\n  // For number of field dropdown\r\n\r\n  //For image text selection\r\n  onChangeImage(option, i) {\r\n      if ( option === \"0: true\" ) {\r\n        this.itIsImageFile[i] = true;\r\n        this.itIsTextField[i] = false;\r\n        \r\n      }\r\n      else if( option === \"1: false\") {\r\n        this.itIsImageFile[i] = false;\r\n        this.itIsTextField[i] = true;\r\n      }\r\n  }\r\n  //For image text selection\r\n\r\n  // For number of field dropdown\r\n  onChangeResult(option, i) {\r\n    if ( option === 'text' ) {\r\n      this.itIsTextPopUp[i] = true;\r\n      this.itIsEmailPopUp[i] = false;\r\n    }\r\n    else if( option === 'email' ) {\r\n      this.itIsTextPopUp[i] = false;\r\n      this.itIsEmailPopUp[i] = true;\r\n    }\r\n}\r\n  // For number of field dropdown\r\n\r\n  onSubmit() {\r\n    let spinner: Array<formSpinnerControl> = [];\r\n    this.submitPressed = true;\r\n    \r\n    // if a field outside the array is added, change this to this.spinnerForm.value\r\n    if (this.spinnerForm.status === \"VALID\") {\r\n\r\n      if (this.percentageSum === 100) {\r\n        \r\n        let counter = 0;\r\n  \r\n        this.spinnerArray.value.forEach(element => {\r\n\r\n        if( element.bgColor === '') {\r\n          element.bgColor = '#000000';\r\n        }\r\n\r\n        let field = new formSpinnerControl(\r\n          element.isItImage,\r\n          element.image,\r\n          element.textFieldOne,\r\n          element.percentage,\r\n          element.isItEmail,\r\n          element.textPopUp,\r\n          element.email,\r\n          element.bgColor\r\n        )\r\n\r\n        this.totalPercentage[counter] = element.percentage;\r\n\r\n        this.StringOfImageUpload.forEach((file)=>{\r\n          if(file.index == counter){\r\n            field.image = file.image;\r\n          } \r\n        })\r\n        spinner.push(field);\r\n        counter++;\r\n        });\r\n\r\n        this.percentageSum = this.totalPercentage.reduce(function(a, b){\r\n          return a + b;\r\n        }, 0);\r\n\r\n        this.sucessFormSubmition = true;\r\n\r\n        this.spinnerService.deleteSpinner().subscribe(() => {\r\n            this.spinnerService.sendSpinner(spinner).subscribe((res) => {\r\n              setTimeout( () => {\r\n                this.sucessFormSubmition = false;\r\n              }, 2000);\r\n              //this.spinnerForm.reset();\r\n              //this.StringOfImageUpload = []; // Resets the StringOfImageUpload array\r\n            }, err =>{\r\n              throw new Error('Error Sending the information about the spinner');\r\n            });\r\n          }, err => {\r\n            throw new Error('Error deleting the information of the previous spineer');\r\n        });\r\n\r\n      } else if (this.percentageSum < 100) {\r\n\r\n        this.open(this.modalPercentageLessThan100);\r\n        this.valueToReach100 = 100 - this.percentageSum;\r\n        throw new Error(`Error Percentage must add up 100%,\r\n          You have only reached ${this.percentageSum}%. You \r\n          still neeed ${this.valueToReach100}% to go!!`);\r\n\r\n      } else if (this.percentageSum > 100) {\r\n        this.valueOver100 = this.percentageSum - 100;\r\n        this.open(this.modalPercentageMoreThan100);\r\n        throw new Error(`Error Percentage must add up 100%,\r\n          You have ${this.percentageSum}%. \r\n          You have exceeded by ${this.valueOver100}%!!`);\r\n      }\r\n\r\n\r\n    } else if (this.spinnerForm.status === \"INVALID\") {\r\n\r\n      this.unsuccessSendingForm = true;\r\n      setTimeout( () => {\r\n        this.unsuccessSendingForm = false;\r\n      }, 2000);\r\n    };\r\n  }\r\n\r\n  //sucessCenterImageSubmition\r\n\r\n  errorWhileSavingCenterImage: boolean = false;\r\n\r\n  onSubmitCenterImage() {\r\n    this.centerImageService.deleteImageCenter()\r\n      .subscribe(() => {\r\n        this.centerCopy = this.CenterImageForm.value;\r\n        this.centerCopy.centerImage = this.StringOfSpinnerCenter.replace(/\\\\/g, \"/\");\r\n        this.centerImageService.sendImageCenter(this.centerCopy)\r\n        .subscribe(HFform => {\r\n          this.centerImageButtonAppears = false;\r\n          this.sucessCenterImageSubmition = true;\r\n          setTimeout( () => {\r\n            this.sucessCenterImageSubmition = false;\r\n          }, 2000);\r\n          this.centerform = HFform;\r\n        }, err =>{\r\n          this.errorWhileSavingCenterImage = true;\r\n          setTimeout( () => {\r\n            this.errorWhileSavingCenterImage = false;\r\n          }, 2000);\r\n\r\n          throw new Error('Error Sending the information about the spinner');\r\n        });\r\n      this.CenterImageForm.reset();\r\n      }, err => {\r\n        throw new Error('Error deleting the information of the previous spineer');\r\n    });\r\n  }\r\n\r\n  open(content) {\r\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport class UploadFile {\r\n  index: number;\r\n  image: any;\r\n\r\n  constructor(idx, fil){\r\n    this.index = idx;\r\n    this.image = fil;\r\n  }\r\n}\r\n","<div class=\"bgColor\">\r\n    <div class=\"container menu1\">\r\n    \r\n        <h2>Customize the spinner</h2>\r\n    \r\n        <div class=\"row my-5\">\r\n            <div class=\"col-12\">\r\n      \r\n                <div id=\"settingNumber\">\r\n                    <div>\r\n                        <label class=\"mr-3\" for=\"numberOptions\">Number of fields on the spinner </label>\r\n                        <select matNativeControl name=\"numberOptions\" id=\"numberOfFields\" #numberOfFields required (change)=\"onChange($event.target.value)\">\r\n                            <option value=\"2\">2</option>\r\n                            <option value=\"3\">3</option>\r\n                            <option value=\"4\">4</option>\r\n                            <option value=\"5\">5</option>\r\n                            <option value=\"6\" selected>6</option>\r\n                            <option value=\"7\">7</option>\r\n                            <option value=\"8\">8</option>\r\n                            <option value=\"9\">9</option>\r\n                            <option value=\"10\">10</option>\r\n                            <option value=\"11\">11</option>\r\n                            <option value=\"12\">12</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"col-12\">\r\n            <form [formGroup]=\"spinnerForm\" (ngSubmit)=\"onSubmit()\" [hidden]=\"sucessFormSubmition || unsuccessSendingForm\" [@expand]>\r\n                <div>\r\n\r\n                    <div>\r\n                        <table class=\"table table-responsive-lg table-borderless\">\r\n                            <div formArrayName=\"spinnerArray\">\r\n\r\n\r\n                                <tr>\r\n                                    <th><label for=\"ImageOption\">Input type</label></th>\r\n                                    <th><label for=\"\">File / Text</label></th>\r\n                                    <th><label for=\"\">Percentage</label></th>\r\n                                    <th><label for=\"\">Result</label></th>\r\n                                    <th><label for=\"\">Text</label></th>\r\n                                    <th><label for=\"\">bg Color</label></th>\r\n                                </tr>\r\n                                <tr *ngFor=\"let spinnerfield of spinnerArray.controls; let i = index\" [formGroupName]=\"i\">\r\n\r\n                                    <td>\r\n                                        <select class=\"inputType\" formControlName=\"isItImage\" required (change)=\"onChangeImage($event.target.value, i)\">\r\n                                            <option [ngValue]=\"true\" selected>Image</option>\r\n                                            <option [ngValue]=\"false\">Text</option>\r\n                                        </select>\r\n                                    </td>\r\n\r\n                                    <td *ngIf=\"itIsImageFile[i]\">\r\n                                        <div class=\"ImageUploadAndMessage d-flex\" id=\"ImageUploadBox\">\r\n\r\n                                            <div id=\"FileUploadBox\">\r\n                                                <button type=\"button\" class=\"btn btn-sm btn-success btnInput\" (click)=\"imageInput.click()\">\r\n                                                    <span>File Upload</span>\r\n                                                    <input #imageInput style=\"display:none;\"\r\n                                                    type=\"file\" \r\n                                                    accept=\"image/*\"\r\n                                                    name=\"imageFile\"\r\n                                                    (change)=\"processFile($event, i)\">   <!--formControlName=\"file\"-->\r\n                                                </button>\r\n                                            </div>\r\n    \r\n                                            <div id=\"FileUploadMessageBox\" class=\"ml-1\">\r\n                                                <div *ngIf=\"SuccessfullyUpload[i]\" class=\"alert alert-success d-flex justify-content-center\"> <span>&#10004;</span></div>\r\n                                                <div *ngIf=\"UnsuccessfullyUpload[i]\" class=\"alert alert-danger d-flex justify-content-center\"> <span>&#x2716;</span></div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </td>\r\n\r\n                                    <td *ngIf=\"itIsTextField[i]\">\r\n                                        <div class=\"ImageUploadAndMessage d-flex\">\r\n                                            <input class=\"textFieldOne\" formControlName=\"textFieldOne\" type=\"text\" name=\"textField\">\r\n                                        </div>\r\n                                    </td>\r\n\r\n                                    <td>\r\n                                        <div class=\"percentageContainer d-flex\">\r\n\r\n                                            <input formControlName=\"percentage\" \r\n                                            type=\"number\" \r\n                                            name=\"textField\" \r\n                                            class=\"PercentageInput\"\r\n                                            min=\"0\" max=\"100\" \r\n                                            [class.invalid]=\"spinnerfield.controls.percentage.hasError('required')  && submitPressed\" \r\n                                            (keyup)=\"MessageErrorChange(i)\" \r\n                                            (click)=\"MessageErrorChange(i)\"\r\n                                            autocomplete=\"off\"\r\n                                            #percentage>\r\n\r\n                                            <div class=\"errorPercentageMessages ml-1 d-flex justify-content-center\" \r\n                                            *ngIf=\"isPercentageLessThanZero[i]\">\r\n                                                <p> Min 0% </p>\r\n                                            </div>\r\n                                            <div class=\"errorPercentageMessages ml-1 d-flex justify-content-center\" \r\n                                            *ngIf=\"isPercentageMoreThanHundred[i]\">\r\n                                                <p> Max 100% </p>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </td>\r\n\r\n\r\n                                    <td>\r\n                                        <select formControlName=\"isItEmail\" name=\"resultOption\" required (change)=\"onChangeResult($event.target.value, i)\">\r\n                                            <option [ngValue]=\"false\" selected>Text Popup</option>\r\n                                            <option [ngValue]=\"true\">Email Popup</option>\r\n                                        </select>\r\n                                    </td>\r\n\r\n                                    <td>\r\n                                        <input class=\"textPopup\" formControlName=\"textPopUp\"  type=\"text\" name=\"imageFile\">\r\n                                    </td>\r\n            \r\n\r\n                                    <td>\r\n                                        <div class=\"colorInputContainer\">\r\n                                            <input class=\"colorInput\" formControlName=\"bgColor\" type=\"color\" [class.invalid]=\"spinnerfield.controls.bgColor.hasError('required')  && submitPressed\">\r\n                                        </div>\r\n                                    </td>\r\n\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                    <td>\r\n                                        <div class=\"totalPercentageSum d-flex justify-content-center bg-warning\" *ngIf=\"percentageSum && !SumOfPercentageMoreThanHundred && !SumOfPercentageEqualHundred\" [@expand]>\r\n                                            <p>{{percentageSum}}%</p>\r\n                                        </div>\r\n\r\n                                        <div class=\"totalPercentageSum d-flex justify-content-center bg-danger\" *ngIf=\"percentageSum && SumOfPercentageMoreThanHundred\" [@expand]>\r\n                                            <p>{{percentageSum}}%</p>\r\n                                        </div>\r\n\r\n                                        <div class=\"totalPercentageSum d-flex justify-content-center bg-success\" *ngIf=\"percentageSum && SumOfPercentageEqualHundred\" [@expand]>\r\n                                            <p>{{percentageSum}}%</p>\r\n                                        </div>\r\n\r\n                                    </td>\r\n                                    <td colspan=\"2\"></td>\r\n                                    <td>\r\n\r\n                                        <button type=\"submit\" class=\"btn btn-success\">\r\n                                            Save\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n\r\n                            </div>\r\n\r\n                        </table>\r\n\r\n                    </div>\r\n\r\n                    \r\n                    <div class=\"d-flex justify-content-end mt-2\">\r\n\r\n\r\n\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n            </form>\r\n\r\n            <div class=\"successFormSend\" [hidden]=\"!sucessFormSubmition\" [@expand]>\r\n                <h2>The spinner fields data has been successfully saved</h2>\r\n            </div>\r\n\r\n            <div class=\"successFormSend\" [hidden]=\"!unsuccessSendingForm\" [@expand]>\r\n                <h2 style=\"color:red;\">The spinner has not been saved, all percentages fields must have a value</h2>\r\n            </div>\r\n\r\n            <h3 class=\"mt-3\">Image for center of spinner</h3>\r\n\r\n\r\n            <div class=\"d-flex\" >\r\n                <form [formGroup]=\"CenterImageForm\" (ngSubmit)=\"onSubmitCenterImage()\"[hidden]=\"sucessCenterImageSubmition\">\r\n\r\n                    <div class=\"d-flex\">\r\n                        <div class=\"ImageUploadAndMessage d-flex mr-3\" id=\"ImageUploadBox\" >\r\n                            <div id=\"FileUploadBox\">\r\n                                <button type=\"button\" class=\"btn btn-sm btn-success\" (click)=\"centerimageInput.click()\">\r\n                                    <span>File Upload</span>\r\n                \r\n                                    <input #centerimageInput\r\n                                    style=\"display:none;\"\r\n                                    type=\"file\" \r\n                                    (change)=\"ProcessCenterImage($event)\">\r\n                \r\n                                </button>\r\n                            </div>\r\n        \r\n                            <div id=\"FileUploadMessageBox\" class=\"ml-1\">\r\n                                <div *ngIf=\"SuccessSpinnerCenter\" class=\"alert alert-success d-flex justify-content-center\"> <span>&#10004;</span></div>\r\n                                <div *ngIf=\"UnsuccessSpinnerCenter\" class=\"alert alert-danger d-flex justify-content-center\"> <span>&#x2716;</span></div>\r\n                            </div>\r\n                        </div>\r\n    \r\n            \r\n        \r\n                        <div class=\"ml-3\">\r\n\r\n                            <div class=\"invisible-button\">\r\n\r\n                            </div>\r\n\r\n                            <button \r\n                            type=\"submit\" \r\n                            class=\"btn btn-success btn-sm ml-auto ml-2\"\r\n                            [hidden]=\"!centerImageButtonAppears\">\r\n                                Save\r\n                            </button>\r\n                        </div>\r\n    \r\n                    </div>\r\n                    \r\n                </form>\r\n\r\n                <div class=\"ml-3\" [hidden]=\"sucessCenterImageSubmition\">\r\n                    <button class=\"btn btn-warning text-white btn-sm\" (click)=\"deleteImage()\" \r\n                    >Default image!</button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n            <div class=\"successImageSend\" [hidden]=\"!sucessCenterImageSubmition\" [@expand]>\r\n                <h4>The spinner center image has been successfully saved</h4>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    \r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n<!--When percentage is less than 100-->\r\n<ng-template #modalPercentageLessThan100 let-modal>\r\n    <div class=\"modal-header\">\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <h4>Warning!!</h4>\r\n        <p><b>Spinner not saved</b></p>\r\n        <p>You need <span class=\"text-warning\"><b>{{valueToReach100}}%</b></span> to reach <span class=\"text-success\"><b>100%</b></span> to your total percentage</p>   \r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-success\" (click)=\"modal.close('Save click')\">Ok</button>\r\n      </div>\r\n</ng-template>\r\n\r\n\r\n<!--When percentage is more than 100-->\r\n<ng-template #modalPercentageMoreThan100 let-modal>\r\n    <div class=\"modal-header\">\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <h4>Warning!!</h4>\r\n        <p><b>Spinner not saved</b></p>\r\n        <p>Your current percentage is <span class=\"text-warning\"><b>{{percentageSum}}%</b></span></p>\r\n        <p>You have exceed the maximum value by <span class=\"text-danger\"><b>{{valueOver100}}%</b></span>, Total percentage must be equal to <span class=\"text-success\"><b>100%</b></span></p>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-success\" (click)=\"modal.close('Save click')\">Ok</button>\r\n      </div>\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\r\nimport { CSVconverterService } from '../services/csvconverter.service';\r\nimport { Router } from '@angular/router';\r\nimport { EmailsService } from '../services/emails.service';\r\n\r\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-email-list',\r\n  templateUrl: './email-list.component.html',\r\n  styleUrls: ['./email-list.component.scss']\r\n})\r\nexport class EmailListComponent implements OnInit {\r\n\r\n  closeResult = '';\r\n\r\n  emails: EmailResult [] = [];\r\n\r\n  constructor( private emailService: EmailsService,\r\n               private csvService: CSVconverterService,\r\n               private modalService: NgbModal,\r\n               private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getEmails();\r\n  }\r\n\r\n  getEmails(): void {\r\n    this.emailService.getEmails()\r\n      .subscribe( emails => {\r\n        emails.forEach(email => {\r\n\r\n          const EMAIL = new EmailResult(email.emailAddress,\r\n                                        email.firstName,\r\n                                        email.lastName,\r\n                                        email.updatedAt,\r\n                                        email.createdAt,\r\n                                        email.result);\r\n          this.emails.push(EMAIL)\r\n\r\n        });\r\n\r\n        // Order chronologically\r\n        let GetSortOrder = (prop) => {\r\n          return (a, b) => {\r\n            if (a[prop] > b[prop]) {\r\n              return -1;\r\n            } else if ( a[prop] < b[prop]) {\r\n              return 1;\r\n            }\r\n            return 0;\r\n          }\r\n        };\r\n\r\n        this.emails.sort(GetSortOrder('DateSpin'));\r\n        console.log('sort', this.emails)\r\n        \r\n        // Eliminate the repetead, leave the newest\r\n        \r\n        let reducer = (accumulator, currentValue) => {\r\n          if (!accumulator.find(obj => obj.EmailAddress === currentValue.EmailAddress)) {\r\n            accumulator.push(currentValue);\r\n          }\r\n          return accumulator;\r\n        };\r\n\r\n        this.emails = this.emails.reduce(reducer, []);\r\n        \r\n\r\n        console.log(this.emails)\r\n      })\r\n  }\r\n\r\n\r\n\r\n  exportCSV(){\r\n    this.csvService.downloadFile(this.emails);\r\n  }\r\n\r\n  deleteResults() {\r\n    this.emailService.deleteEmails()\r\n      .subscribe(() => {}, err => {\r\n        throw new Error('Error deleting the information');\r\n      });\r\n    this.router.navigate(['backend-control/email-list']);\r\n  }\r\n\r\n  //modal\r\n  open(content) {\r\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nclass EmailResult { \r\n\r\n  EmailAddress: string;\r\n  FirstName: string;\r\n  LastName: string;\r\n  DateSpin: string;\r\n  DateCreation: string;\r\n  Result: string;\r\n\r\n  constructor(email, firstName, lastName, DateSpin, DateCreate, result) {\r\n    this.EmailAddress = email;\r\n    this.FirstName = firstName;\r\n    this.LastName = lastName;\r\n    this.DateSpin = DateSpin;\r\n    this.DateCreation = DateCreate;\r\n    this.Result = result;\r\n  }\r\n}\r\n","<div class=\"bgColor\">\r\n\r\n    <div class=\"container col-12 col-lg-10\">\r\n        <div id=\"title\">\r\n            <h2>List of collected Emails</h2>\r\n        </div>\r\n    \r\n        <div class=\"row\">\r\n            <div class=\"col-12 d-flex justify-content-end mb-5\">\r\n                <button class=\"btn btn-info\" (click)=\"exportCSV()\">Export results csv/excel</button>\r\n            </div>\r\n            <div *ngIf=\"emails\">\r\n                <table class=\"table table-responsive-lg table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Email Address</th>\r\n                            <th>First Name</th>\r\n                            <th>Last Name</th>\r\n                            <th>Date Spin</th>\r\n                            <th>Result</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let email of emails\">\r\n                            <td>{{email.EmailAddress}}</td>\r\n                            <td>{{email.FirstName}}</td>\r\n                            <td>{{email.LastName}}</td>\r\n                            <td>{{email.DateSpin | date}}</td>\r\n                            <td>{{email.Result}}</td>\r\n                        </tr>\r\n                    </tbody>\r\n    \r\n    \r\n                </table>\r\n            </div>\r\n\r\n            <div class=\"col-12 d-flex justify-content-end mt-5\">\r\n                <button class=\"btn btn-danger\" (click)=\"open(content)\">Delete Collected Data</button>\r\n            </div>\r\n            \r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<ng-template #content let-modal>\r\n    <div class=\"modal-header\">\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n\r\n        <h2>Are you sure you want to delete the collected data?</h2>\r\n\r\n        <div class=\"mb-4\">\r\n            <button type=\"button\" class=\"btn btn-danger mr-5\" (click)=\"deleteResults()\">Yes</button>\r\n            \r\n            <button type=\"button\" class=\"btn btn-info\" (click)=\"modal.close('Save click')\">No</button>\r\n        </div>\r\n\r\n        <button class=\"btn btn-secondary\"(click)=\"modal.close('Save click')\">Close</button>\r\n    </div>\r\n  </ng-template>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { LoginService, userLogin } from '../services/login.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  LoginForm: FormGroup;\r\n  LoginError: boolean;\r\n\r\n  constructor( \r\n    private fb: FormBuilder,\r\n    private loginservice: LoginService,\r\n    private router: Router) {\r\n      this.createForm();\r\n     }\r\n\r\n  ngOnInit(): void {\r\n    this.LoginError = false;\r\n  }\r\n\r\n  createForm() {\r\n    this.LoginForm = this.fb.group({\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  onSubmit(){\r\n    if(this.LoginForm.status === \"VALID\"){\r\n      const user = new userLogin(this.LoginForm.controls.username.value, \r\n                                this.LoginForm.controls.password.value)\r\n      \r\n      this.loginservice.Login(user).subscribe((resp: any) => {\r\n         if(resp.success === true) {\r\n           this.LoginError = false;\r\n           localStorage.setItem(\"userToken\", resp.token);\r\n           this.router.navigate(['admin/bc/customize-spinner']);\r\n         }\r\n      }, err => {\r\n        this.LoginError = true;\r\n        \r\n      })\r\n    }\r\n  }\r\n}\r\n","<div class=\"container\">\r\n\r\n\r\n    <div class=\"align-middle\">\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <div class=\"title d-flex justify-content-center\">\r\n                    <h1>LOGIN</h1>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    \r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <div class=\"formContent\">\r\n                    <form [formGroup]=\"LoginForm\" (ngSubmit)=\"onSubmit()\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12 d-flex justify-content-center mb-2\">\r\n                                <div class=\"field\">\r\n                                    <input formControlName=\"username\" type=\"text\" placeholder=\"Username\" required>\r\n                                </div>\r\n                            </div>\r\n    \r\n                            <div class=\"col-12 d-flex justify-content-center mb-2\">\r\n                                <div class=\"field\">\r\n                                    <input formControlName=\"password\" type=\"password\" placeholder=\"Enter your password\" required>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-12 d-flex justify-content-center\">\r\n                                <div class=\"field d-flex justify-content-end\">\r\n                                    <button class=\"btn btn-sm btn-danger\">Login</button>\r\n                                </div>\r\n                            </div>\r\n    \r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div class=\"errorMessage\" *ngIf=\"LoginError\">\r\n                    <p>Wrong Username or Password</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n    \r\n\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.scss']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor(\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  logout(){\r\n    localStorage.clear();\r\n    this.router.navigate(['/admin']);\r\n  }\r\n}\r\n","<div class=\"container d-flex justify-content-lg-center\">\r\n\r\n  <div>\r\n    <div class=\"image img-fluid d-none d-lg-block\">\r\n      <img src=\"https://dam.ngenespanol.com/wp-content/uploads/2019/06/arbol-mas-alto-del-mundo-770x395.png\" alt=\"Fixed Photo\">\r\n    </div>\r\n    <div class=\"mt-3\">\r\n      <ul class=\"nav flex-column\">\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/spinner\">SPINNER</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/admin/bc/customize-spinner\">CUSTOMIZE SPINNER</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/admin/bc/email-list\">EMAIL LIST</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/admin/bc/custom-script\">CUSTOM SCRIPIT</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/admin/bc/password-change\">CHANGE PASSWORD</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n              <a class=\"nav-link\" href=\"#\">SUPPORT</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n              <a class=\"nav-link\" href=\"#\">REQUEST FEATURE</a>\r\n          </li>\r\n            \r\n        </ul>\r\n    </div>\r\n\r\n    <button class=\"btn btn-danger mt-4 ml-auto\" (click)=\"logout()\">Logout</button>\r\n  </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\r\nimport { ChangePasswordService, passwordChange } from '../services/change-password.service';\r\n\r\n@Component({\r\n  selector: 'app-password-change',\r\n  templateUrl: './password-change.component.html',\r\n  styleUrls: ['./password-change.component.scss']\r\n})\r\nexport class PasswordChangeComponent implements OnInit {\r\n\r\n  PasswordChangeForm: FormGroup;\r\n  PasswordChangeError: boolean;\r\n  closeResult = '';\r\n  @ViewChild('modal') modal;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private changePasswordservice: ChangePasswordService,\r\n    private router: Router,\r\n    private modalService: NgbModal\r\n  ) {\r\n    this.createForm();\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.PasswordChangeError = false;\r\n  }\r\n\r\n  createForm() {\r\n    this.PasswordChangeForm = this.fb.group({\r\n      username: ['', Validators.required],\r\n      oldpassword: ['', Validators.required],\r\n      newpassword: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  open(content) {\r\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n\r\n  onSubmit(){\r\n    if(this.PasswordChangeForm.status === \"VALID\"){\r\n      const user = new passwordChange(\r\n        this.PasswordChangeForm.controls.username.value, \r\n        this.PasswordChangeForm.controls.oldpassword.value,\r\n        this.PasswordChangeForm.controls.newpassword.value);\r\n      \r\n      this.changePasswordservice.ChangePassword(user).subscribe((resp: any) => {\r\n         if(resp.success === true) {\r\n           this.PasswordChangeError = false;\r\n           this.open(this.modal)\r\n         }\r\n      }, err => {\r\n        this.PasswordChangeError = true;\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n\r\n    <div class=\"align-middle\">\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <div class=\"title d-flex justify-content-center\">\r\n                    <h1>LOGIN</h1>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    \r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <div class=\"formContent\">\r\n                    <form [formGroup]=\"PasswordChangeForm\" (ngSubmit)=\"onSubmit()\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12 d-flex justify-content-center mb-2\">\r\n                                <div class=\"field\">\r\n                                    <input formControlName=\"username\" type=\"text\" placeholder=\"Username\" required>\r\n                                </div>\r\n                            </div>\r\n    \r\n                            <div class=\"col-12 d-flex justify-content-center mb-2\">\r\n                                <div class=\"field\">\r\n                                    <input formControlName=\"oldpassword\" type=\"password\" placeholder=\"Enter your OLD password\" required>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-12 d-flex justify-content-center mb-2\">\r\n                                <div class=\"field\">\r\n                                    <input formControlName=\"newpassword\" type=\"password\" placeholder=\"Enter your NEW password\" required>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-12 d-flex justify-content-center\">\r\n                                <div class=\"field d-flex justify-content-end\">\r\n                                    <button class=\"btn btn-sm btn-danger\">Change Password</button>\r\n                                </div>\r\n                            </div>\r\n    \r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div class=\"errorMessage\" *ngIf=\"PasswordChangeError\">\r\n                    <p>Wrong Username or Password</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n    \r\n\r\n\r\n</div>\r\n\r\n\r\n<ng-template #modal let-modal>\r\n    <div class=\"modal-header\">\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <h2>Password Changed Successfully</h2>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-success\" (click)=\"modal.close('Save click')\" routerLink=\"/bc/customize-spinner\">Get back</button>\r\n    </div>\r\n</ng-template>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\r\nimport { baseHref } from '../shared/baseHref';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CenterImageService {\r\n\r\n    \r\n  TOKEN = localStorage.getItem('userToken');\r\n  \r\n  httpOptions = {\r\n    headers: new HttpHeaders(\r\n      { 'Authorization': `Bearer ${this.TOKEN}`})\r\n  };\r\n\r\n  URL_API = `${baseHref}api/v1/centerImage`;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private processHTTPMsgService: ProcessHTTPMsgService\r\n  ) { }\r\n\r\n  getImageCenter(): Observable<any> {\r\n    return this.http.get<any>(this.URL_API, this.httpOptions)\r\n      .pipe(map((data:any) => data),\r\n      catchError(this.processHTTPMsgService.handleError));\r\n  }\r\n\r\n  sendImageCenter(Form:any): Observable<any> {\r\n    return this.http.post<any>(this.URL_API, Form, this.httpOptions)\r\n      .pipe(catchError(this.processHTTPMsgService.handleError));\r\n  }; \r\n\r\n  deleteImageCenter() {\r\n    return this.http.delete(this.URL_API, this.httpOptions);\r\n  }\r\n\r\n}\r\n","import { HttpClient, HttpHeaders  } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\r\nimport { baseHref } from '../shared/baseHref';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ChangePasswordService {\r\n    \r\n  TOKEN = localStorage.getItem('userToken');\r\n  \r\n  httpOptions = {\r\n    headers: new HttpHeaders({ \r\n      'Authorization': `Bearer ${this.TOKEN}`, \r\n      'Content-Type': 'application/json'})\r\n  };\r\n\r\n  URL_API = `${baseHref}users/resetPassword`;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private processHTTPMsgService: ProcessHTTPMsgService\r\n  ) { }\r\n\r\n  ChangePassword(user: passwordChange){\r\n    return this.http.post(this.URL_API, user, this.httpOptions)\r\n    .pipe(catchError(this.processHTTPMsgService.handleError));\r\n  }\r\n\r\n}\r\n\r\nexport class passwordChange{\r\n\r\n  username: string;\r\n  oldpassword: string;\r\n  newpassword: string;\r\n\r\n  constructor(user, oldPass, newPass){\r\n    this.username = user;\r\n    this.oldpassword = oldPass;\r\n    this.newpassword = newPass;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CSVconverterService {\r\n\r\n  constructor() { }\r\n\r\n\r\n  downloadFile(data, filename='Collected_Emails') {\r\n    let csvData = this.ConvertToCSV(data, ['EmailAddress','FirstName', 'LastName', 'DateSpin', 'DateCreation', 'Result']);\r\n    let blob = new Blob(['\\ufeff' + csvData], { type: 'text/csv;charset=utf-8;' });\r\n    let dwldLink = document.createElement(\"a\");\r\n    let url = URL.createObjectURL(blob);\r\n    let isSafariBrowser = navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\r\n    if (isSafariBrowser) {  //if Safari open in new window to save file with random filename.\r\n        dwldLink.setAttribute(\"target\", \"_blank\");\r\n    }\r\n    dwldLink.setAttribute(\"href\", url);\r\n    dwldLink.setAttribute(\"download\", filename + \".csv\");\r\n    dwldLink.style.visibility = \"hidden\";\r\n    document.body.appendChild(dwldLink);\r\n    dwldLink.click();\r\n    document.body.removeChild(dwldLink);\r\n  }\r\n\r\n  ConvertToCSV(objArray, headerList) {\r\n    let array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;\r\n    let str = '';\r\n    let row = 'Number,';\r\n    for (let index in headerList) {\r\n     row += headerList[index] + ',';\r\n    }\r\n    row = row.slice(0, -1);\r\n    str += row + '\\r\\n';\r\n    for (let i = 0; i < array.length; i++) {\r\n     let line = (i+1)+'';\r\n     for (let index in headerList) {\r\n      let head = headerList[index];\r\n      line += ',' + array[i][head];\r\n     }\r\n     str += line + '\\r\\n';\r\n    }\r\n    return str;\r\n   }\r\n\r\n   \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\r\nimport { baseHref } from '../shared/baseHref';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CustomScriptService {\r\n  \r\n  TOKEN = localStorage.getItem('userToken');\r\n  \r\n  httpOptions = {\r\n    headers: new HttpHeaders({ \r\n      'Authorization': `Bearer ${this.TOKEN}`, \r\n      'Content-Type': 'application/json'})\r\n  };\r\n\r\n  URL_API = `${baseHref}api/v1/headerFooter`;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private processHTTPMsgService: ProcessHTTPMsgService) { }\r\n\r\n  sendHeaderFooter(Form:any): Observable<any> {\r\n    return this.http.post<any>(this.URL_API, Form, this.httpOptions)\r\n      .pipe(catchError(this.processHTTPMsgService.handleError));\r\n  }; \r\n\r\n  deleteHeaderFooter() {\r\n    return this.http.delete(this.URL_API, this.httpOptions);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\r\nimport { baseHref } from '../shared/baseHref';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmailsService {\r\n\r\n  URL_API = `${baseHref}api/v1/results`;\r\n\r\n  TOKEN = localStorage.getItem('userToken');\r\n  \r\n  httpOptions = {\r\n    headers: new HttpHeaders({ 'Authorization': `Bearer ${this.TOKEN}` })\r\n  };\r\n\r\n  \r\n  constructor(\r\n    private http: HttpClient,\r\n    private processHTTPMsgService: ProcessHTTPMsgService) { }\r\n\r\n  getEmails(): Observable<any> {\r\n    return this.http.get<any>(this.URL_API, this.httpOptions) //Check and test later\r\n      .pipe(map((data:any) => data),\r\n      catchError(this.processHTTPMsgService.handleError));\r\n  }\r\n\r\n  sendEmails(Form:any): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n    };\r\n    return this.http.post<any>(this.URL_API, Form)\r\n      .pipe(catchError(this.processHTTPMsgService.handleError));\r\n  }\r\n\r\n  deleteEmails(){\r\n    return this.http.delete(this.URL_API, this.httpOptions);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private router: Router\r\n  ){}\r\n\r\n  canActivate(): boolean {\r\n    if( localStorage.getItem('userToken') ){\r\n      return true\r\n    } else {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\r\nimport { baseHref } from '../shared/baseHref';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HeaderFooterService {\r\n\r\n  URL_API_HEADER = `${baseHref}api/v1/headerFooter`;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private processHTTPMsgService: ProcessHTTPMsgService) { }\r\n\r\n    getHeaderFooter(): Observable<any> {\r\n      return this.http.get<any>(this.URL_API_HEADER)\r\n      .pipe(map((data:any) => data),\r\n      catchError(this.processHTTPMsgService.handleError));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { baseHref } from '../shared/baseHref';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ImageService {\r\n\r\n  URL_API = `${baseHref}api/v1/imageUpload`;\r\n\r\n  TOKEN = localStorage.getItem('userToken');\r\n  \r\n  httpOptions = {\r\n    headers: new HttpHeaders({ 'Authorization': `Bearer ${this.TOKEN}` })\r\n  };\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public uploadImage(image: File): Observable<any> {\r\n    const imageF = new FormData();\r\n\r\n    imageF.append('imageFile', image);\r\n\r\n    return this.http.post(this.URL_API, imageF, this.httpOptions);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { baseHref } from '../shared/baseHref';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n  URL_API = `${baseHref}users/login`;\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  Login(user: userLogin){\r\n    return this.http.post(this.URL_API, user);\r\n  }\r\n}\r\n\r\n\r\nexport class userLogin{\r\n\r\n  username: string;\r\n  password: string;\r\n\r\n  constructor(user, pass){\r\n    this.username = user;\r\n    this.password = pass;\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { throwError } from 'rxjs';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProcessHTTPMsgService {\r\n\r\n  constructor() { }\r\n\r\n  public handleError(error: HttpErrorResponse | any) {\r\n    let errMsg: string;\r\n\r\n    if (error.error instanceof ErrorEvent) {\r\n      errMsg = error.error.message;\r\n    } else {\r\n      errMsg = `${error.status} - ${error.statusText || ''} ${error.error}`;\r\n    }\r\n\r\n    return throwError(errMsg);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { formSpinnerControl } from '../shared/form-spinner-controller';\r\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\r\nimport { baseHref } from '../shared/baseHref';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SpinnerCustomizerControllerService {\r\n\r\n  TOKEN = localStorage.getItem('userToken');\r\n  \r\n  httpOptions = {\r\n    headers: new HttpHeaders({ 'Authorization': `Bearer ${this.TOKEN}` })\r\n  };\r\n\r\n  URL_API = `${baseHref}api/v1/spinner`;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private processHTTPMsgService: ProcessHTTPMsgService) { }\r\n\r\n  sendSpinner( spinnerArray: Array <formSpinnerControl>) {\r\n    return this.http.post(this.URL_API, spinnerArray, this.httpOptions);\r\n  }\r\n\r\n  deleteSpinner() {\r\n    return this.http.delete(this.URL_API, this.httpOptions);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\r\nimport { baseHref } from '../shared/baseHref';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SpinnerService {\r\n\r\n  URL_API_SPINNER = `${baseHref}api/v1/spinner`;\r\n  URL_API_HEADER = `${baseHref}api/v1/headerFooter`;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private processHTTPMsgService: ProcessHTTPMsgService\r\n  ) { }\r\n\r\n  getSpinner(): Observable<any> {\r\n    return this.http.get<any>(this.URL_API_SPINNER) //Check and test later\r\n      .pipe(map((data:any) => data),\r\n      catchError(this.processHTTPMsgService.handleError));\r\n  }\r\n\r\n  //Inverter color function\r\n  invertColor(hex): any {\r\n    if (hex.indexOf('#') === 0) {\r\n      hex = hex.slice(1);\r\n    }\r\n    // convert 3-digit hex to 6-digits.\r\n    if (hex.length === 3) {\r\n      hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\r\n    }\r\n    if (hex.length !== 6) {\r\n      throw new Error('Invalid HEX color.');\r\n    }\r\n    // invert color components\r\n    var r = (255 - parseInt(hex.slice(0, 2), 16)).toString(16),\r\n        g = (255 - parseInt(hex.slice(2, 4), 16)).toString(16),\r\n        b = (255 - parseInt(hex.slice(4, 6), 16)).toString(16);\r\n    // pad each with zeros and return\r\n    function padZero(str) {\r\n      let len = 2;\r\n      var zeros = new Array(len).join('0');\r\n      return (zeros + str).slice(-len);\r\n    }\r\n    return '#' + padZero(r) + padZero(g) + padZero(b);\r\n  }\r\n  ///////////////////////////\r\n\r\n}\r\n","export class ImageSnippet {\r\n    pending: boolean = false;\r\n    status: string = 'init';\r\n    constructor(public src: string, public file: File) {}\r\n}","export const baseHref = '/';   // /~devsite/","export class formSpinnerControl {\r\n    isItImage: boolean;\r\n    image: any;\r\n    textFieldOne: string;\r\n    percentage: number;\r\n    isItEmail: boolean;\r\n    textPopUp: string;\r\n    email: string;\r\n    bgColor: string;\r\n\r\n    constructor(isImage, image, textOne, percentage, isEmail, textPopUp, email, color){\r\n        this.isItImage = isImage;\r\n        this.image = image;\r\n        this.textFieldOne = textOne;\r\n        this.percentage = percentage;\r\n        this.isItEmail = isEmail;\r\n        this.textPopUp = textPopUp;\r\n        this.email = email;\r\n        this.bgColor = color;\r\n    }\r\n}\r\n","import { Renderer2, Inject, Component, OnInit, ViewChild, QueryList, ViewChildren, ElementRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { SpinnerService } from '../services/spinner.service';\r\nimport { HeaderFooterService } from '../services/header-footer.service';\r\nimport { EmailsService } from '../services/emails.service';\r\nimport { CenterImageService } from '../services/center-image.service';\r\nimport { baseHref } from '../shared/baseHref';\r\n\r\n@Component({\r\n  selector: 'app-spinner',\r\n  templateUrl: './spinner.component.html',\r\n  styleUrls: ['./spinner.component.scss']\r\n})\r\nexport class SpinnerComponent implements OnInit {\r\n\r\n  //headScript: HTMLLinkElement = document.querySelector('#head');\r\n\r\n  API_IMAGE_URL = `${baseHref}api/v1/imageUpload/`;\r\n  SpinnerFields: any;\r\n  HeaderFooter: any;\r\n  bgColorStyle: any[] = ['']; // Backgorund color\r\n  fontColor: any[] = ['']; // Font Color\r\n\r\n  fieldStyleNth: any[] = ['']; //Individual field style\r\n  holder: any[] = [''];\r\n  imageOrientation: any[] = [''];\r\n  textOrientation: any[] = [''];\r\n\r\n  state: string = 'default';\r\n\r\n  //Animations\r\n  clicks: number = 0;\r\n  newDegree: number;\r\n  extraDegree: number; \r\n  totalDegree: number = 0;\r\n  spiningRotate: any;\r\n\r\n  @ViewChildren('wheelSec') wheelSecs: QueryList<any>;\r\n  @ViewChild('txt') Text;\r\n  @ViewChild('spin') spin;\r\n\r\n  spinMovemente: any;\r\n\r\n  //Results\r\n  angle: number;\r\n  initialDegreesStart: any[] = [''];\r\n  initialDegreesEnd: any[] = [''];\r\n  degreesRotated: number = 0;\r\n  resultingField: number = 0;\r\n  FinalResult: any;\r\n\r\n  sendEmailForm: FormGroup;\r\n  form: any;\r\n  formCopy: any;\r\n  errMess: string;\r\n  ///\r\n\r\n  //Center image\r\n  centerImage: any;\r\n\r\n  /// Modal results\r\n  validForm = true;\r\n  closeResult = ''; \r\n  @ViewChild('ResultEmail') ResultEmail;\r\n  @ViewChild('ResultText') ResultText;\r\n\r\n  constructor( \r\n    private spinnerService: SpinnerService,\r\n    private headerFooterService: HeaderFooterService,\r\n    private emailSevice: EmailsService,\r\n    private modalService: NgbModal,\r\n    private centerImageService: CenterImageService,\r\n    private fb: FormBuilder,\r\n    private renderer2: Renderer2,\r\n    @Inject(DOCUMENT) private _document ) { \r\n      this.createForm();\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    this.getHeaderFooter();\r\n    this.getSpinner();\r\n    this.getImageCenter();\r\n  }\r\n\r\n  getSpinner(): void {\r\n    this.spinnerService.getSpinner()\r\n      .subscribe( spinnerFields => {\r\n        this.SpinnerFields = spinnerFields;\r\n        this.angle = 360/this.SpinnerFields.length;\r\n        for(let i=0; i<this.SpinnerFields.length; i++) { //Substitute backslashes for slashes\r\n          this.SpinnerFields[i].image = this.SpinnerFields[i].image.replace(/\\\\/g, \"/\");\r\n          this.SpinnerFields[i].image = this.API_IMAGE_URL + this.SpinnerFields[i].image.slice(14);\r\n          this.bgColorStyle[i] = this.SpinnerFields[i].bgColor; // Backgorund color\r\n          this.fontColor[i] = this.spinnerService.invertColor(this.bgColorStyle[i]); //Font Color\r\n          this.holder[i] = {'transform': 'rotate(' + this.angle*(i) + 'deg)',\r\n                            '-webkit-transform': 'rotate(' + this.angle*(i) + 'deg)',\r\n                            '-moz-transform': 'rotate(' + this.angle*(i) + 'deg)',\r\n                            '-o-transform': 'rotate(' + this.angle*(i) + 'deg)',\r\n                            '-ms-transform': 'rotate(' + this.angle*(i) + 'deg)'};\r\n\r\n          this.fieldStyleNth[i] = {'transform': 'rotate(' + this.angle + 'deg)',\r\n                                  '-webkit-transform': 'rotate(' + this.angle + 'deg)',\r\n                                  '-moz-transform': 'rotate(' + this.angle + 'deg)',\r\n                                  '-o-transform': 'rotate(' + this.angle + 'deg)',\r\n                                  '-ms-transform': 'rotate(' + this.angle + 'deg)',\r\n                                  'background-color': this.bgColorStyle[i],\r\n                                  'color': this.fontColor[i]\t};\r\n          \r\n          this.imageOrientation[i] = { 'transform': 'rotate(' + (this.angle - this.angle*1.5 ) + 'deg)',\r\n                                       '-webkit-transform': 'rotate(' + (this.angle - this.angle*1.5) + 'deg)',\r\n                                       '-moz-transform': 'rotate(' + (this.angle - this.angle*1.5) + 'deg)',\r\n                                       '-o-transform': 'rotate(' + (this.angle - this.angle*1.5) + 'deg)',\r\n                                       '-ms-transform': 'rotate(' + (this.angle - this.angle*1.5) + 'deg)',\r\n                                       'transform-origin': 'bottom center'};\r\n\r\n          this.textOrientation[i] = { 'transform': 'rotate(' + (90 - this.angle/2) + 'deg)',\r\n                                      '-webkit-transform': 'rotate(' + (180 + this.angle/4) + 'deg)',\r\n                                      '-moz-transform': 'rotate(' + (180 + this.angle/4) + 'deg)',\r\n                                      '-o-transform': 'rotate(' + (180 + this.angle/4) + 'deg)',\r\n                                      '-ms-transform': 'rotate(' + (180 + this.angle/4) + 'deg)', \r\n                                      'transform-origin': 'center right'};\r\n\r\n          this.initialDegreesStart[i] = this.angle*i\r\n          this.initialDegreesEnd[i] = this.initialDegreesStart[i] + this.angle;\r\n        }\r\n      })\r\n  }\r\n\r\n  getHeaderFooter() {\r\n    this.headerFooterService.getHeaderFooter()\r\n      .subscribe( headerFooter => {\r\n        this.HeaderFooter = headerFooter[0];\r\n\r\n        //Inyecting header\r\n        const headerScript = this.renderer2.createElement('script');\r\n        headerScript.type = 'text/javascript';\r\n        headerScript.text = this.HeaderFooter.header;\r\n        this.renderer2.appendChild(this._document.head, headerScript);\r\n\r\n        //Inyecting footer\r\n        const footerScript = this.renderer2.createElement('script');\r\n        footerScript.type = 'text/javascript';\r\n        footerScript.text = this.HeaderFooter.footer;\r\n        this.renderer2.appendChild(this._document.body, footerScript);\r\n      });\r\n  }\r\n\r\n  getImageCenter() {\r\n    this.centerImageService.getImageCenter()\r\n      .subscribe(centerImage => {\r\n        this.centerImage = centerImage[0];\r\n        this.centerImage.centerImage = this.API_IMAGE_URL + this.centerImage.centerImage.slice(14);\r\n      });\r\n  }\r\n\r\n  firedOnce: boolean = false;\r\n\r\n  rotate() {\r\n\r\n    if(this.firedOnce) {\r\n      return;\r\n    }\r\n    this.firedOnce = true;\r\n    this.getSpinner();\r\n    let degreeSpinn = 360*11;\r\n    this.clicks = ++this.clicks; ////\r\n    this.newDegree = degreeSpinn * this.clicks;  ////\r\n\r\n    this.CalculateDegreesRotated()\r\n\r\n    this.totalDegree = this.newDegree + this.extraDegree;\r\n    \r\n    this.spining();\r\n\r\n    this.ExposingResult()\r\n\r\n  }\r\n\r\n  spining() {\r\n    this.spiningRotate = { 'transform': 'rotate(-' + this.totalDegree + 'deg)'};\r\n  }\r\n\r\n\r\n  ExposingResult() {\r\n\r\n    //console.log(this.SpinnerFields)\r\n\r\n    if (this.SpinnerFields[this.resultingField].isItEmail === true) {\r\n      setTimeout( () => {\r\n        this.open(this.ResultEmail)\r\n      }, 6500);\r\n  \r\n    }\r\n    else if (this.SpinnerFields[this.resultingField].isItEmail === false) {\r\n      setTimeout( () => {\r\n        this.open(this.ResultText)\r\n      }, 6500);  \r\n    }\r\n  }\r\n\r\n  createForm() {\r\n    this.sendEmailForm = this.fb.group({\r\n      firstName: ['', [Validators.required]],\r\n      lastName: ['', [Validators.required]],\r\n      emailAddress: ['', [Validators.required, Validators.email]],\r\n      result: ['']\r\n    });\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    if(this.sendEmailForm.status === \"VALID\") {\r\n      this.formCopy = this.sendEmailForm.value;\r\n      this.formCopy.result = this.FinalResult.textPopUp;\r\n      \r\n      this.emailSevice.sendEmails(this.formCopy)\r\n        .subscribe(emailForm => {\r\n          this.form = emailForm;\r\n          this.modalService.dismissAll();\r\n          this.validForm = true;\r\n        }, err =>{\r\n          throw new Error('Error Sending the information about the spinner');\r\n        });\r\n      this.sendEmailForm.reset();\r\n    } else {\r\n      this.validForm = false;\r\n    }\r\n\r\n  }\r\n\r\n  CalculateDegreesRotated() {\r\n    let DegreesArray = [];\r\n    let index, sum = 0\r\n    let random = Math.random();\r\n    let random2 = Math.random();\r\n\r\n    for( index = 0; index < this.SpinnerFields.length; index++) {\r\n      sum += this.SpinnerFields[index].percentage/100;\r\n      DegreesArray[index] = sum;\r\n    }\r\n\r\n    for ( index = 0; random < DegreesArray.length && random >= DegreesArray[index]; index++);\r\n\r\n    this.extraDegree = (this.initialDegreesEnd[index] - this.angle)\r\n      + Math.floor(random2 * (this.initialDegreesEnd[index] - (this.initialDegreesEnd[index] - this.angle)-1));\r\n  \r\n      this.resultingField = index;\r\n\r\n      this.FinalResult = this.SpinnerFields[index]\r\n    }\r\n\r\n\r\n    // Modal results\r\n    open(content) {\r\n      this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n        this.closeResult = `Closed with: ${result}`;\r\n      }, (reason) => {\r\n        this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n      });\r\n      this.firedOnce = false;\r\n    }\r\n\r\n    private getDismissReason(reason: any): string {\r\n      if (reason === ModalDismissReasons.ESC) {\r\n        return 'by pressing ESC';\r\n      } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n        return 'by clicking on a backdrop';\r\n      } else {\r\n        return `with: ${reason}`;\r\n      }\r\n    }\r\n    ///////\r\n\r\n  }","<!--\r\n<header *ngIf=\"HeaderFooter\">\r\n    <div [innerHTML]=\"HeaderFooter.header\"></div>\r\n</header>-->\r\n\r\n<div class=\"my-5 row\" *ngIf=\"HeaderFooter\">\r\n  <div class=\"col-12 d-flex justify-content-center\" id=\"title\">\r\n      <h2>{{HeaderFooter.pageTitle}}</h2>\r\n  </div>\r\n\r\n  <div class=\"col-12 d-flex justify-content-center mt-3\" id=\"description\">\r\n      <p>{{HeaderFooter.pageDescription}}</p>\r\n  </div>\r\n\r\n</div>\r\n\r\n\r\n<div id=\"wrapper\" class=\"d-flex justify-content-center\">\r\n          \r\n  <div *ngIf=\"SpinnerFields\" id=\"wheel\">\r\n\r\n    <div id=\"inner-wheel\" [style]=\"spiningRotate\">\r\n          <div *ngFor=\"let field of SpinnerFields; let i = index\">\r\n              <div #wheelSec>\r\n                  <div [style]=\"holder[i]\" class=\"hold\" *ngIf=\"field.isItImage\">\r\n                      <div  class=\"sec\" id=\"wheelSec\" [style]=\"fieldStyleNth[i]\">\r\n                              <span class=\"imageSpan\" [style]=\"imageOrientation[i]\" > \r\n                                <div class=\"ImageContainer\">\r\n                                  <img class=\"image img-fluid\" [src]=\"field.image\">\r\n                                </div>\r\n                              </span>\r\n                      </div>\r\n                  </div>\r\n\r\n                  <div [style]=\"holder[i]\" class=\"hold\" *ngIf=\"!field.isItImage\">\r\n                      <div class=\"sec\" [style]=\"fieldStyleNth[i]\">\r\n                        <div class=\"SpanContainer\" [style]=\"textOrientation[i]\">\r\n                          <span class=\"TextSpan\">\r\n                            {{field.textFieldOne}}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n  \r\n          </div>       \r\n         \r\n\r\n    </div>\r\n    <div id=\"spin\" (click)=\"rotate()\" type=\"button\" #spin [style]=\"spinMovemente\">\r\n        <div id=\"inner-spin\">\r\n          <div *ngIf=\"centerImage\">\r\n            <img src=\"{{centerImage.centerImage}}\">\r\n          </div>\r\n        </div>\r\n    </div>\r\n      \r\n      <div id=\"shine\"></div>\r\n      \r\n  </div>\r\n  \r\n  <div id=\"txt\" #txt></div>\r\n</div>\r\n\r\n<ng-template #ResultEmail let-modal>\r\n    <div class=\"modal-header\">\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n\r\n    <div *ngIf=\"FinalResult\" class=\"modal-body\">\r\n      <div class=\"d-flex justify-content-center\" *ngIf=\"FinalResult.isItImage\">\r\n        <img class=\"PopUpImage image img-fluid\" src=\"{{FinalResult.image}}\">\r\n      </div>\r\n\r\n        <h2>{{FinalResult.textPopUp}}</h2>\r\n        <form class=\"row\" [formGroup]=\"sendEmailForm\" (ngSubmit)=\"onSubmit()\">\r\n          <div class=\"errorMessage\" *ngIf=\"!validForm\">\r\n            <p>Please check information provided, all the fields are required and it must be a valid email address</p>\r\n          </div>\r\n          <div class=\"col-12 d-flex justify-content-center my-3\">\r\n            <input formControlName=\"firstName\" type=\"text\" placeholder=\"First Name\">\r\n          </div>\r\n\r\n          <div class=\"col-12 d-flex justify-content-center mb-3\">\r\n            <input formControlName=\"lastName\" type=\"text\" placeholder=\"Last Name\">\r\n          </div>\r\n\r\n          <div class=\"col-12 d-flex justify-content-center mb-3\">\r\n            <input formControlName=\"emailAddress\" type=\"email\"  placeholder=\"email\">\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button class=\"btn btn-success\">Send</button>\r\n            <button class=\"btn btn-danger\"(click)=\"modal.close('Save click')\">Close</button>\r\n          </div>\r\n      </form>\r\n    </div>\r\n\r\n\r\n  </ng-template>\r\n\r\n  <ng-template #ResultText let-modal>\r\n    <div class=\"modal-header\">\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n    <div *ngIf=\"FinalResult\" class=\"modal-body\">\r\n\r\n      <div class=\"d-flex justify-content-center\" *ngIf=\"FinalResult.isItImage\">\r\n        <img class=\"PopUpImage image img-fluid\" src=\"{{FinalResult.image}}\">\r\n      </div>\r\n\r\n      <h2>{{FinalResult.textPopUp}}</h2>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-success\" (click)=\"modal.close('Save click')\">Close</button>\r\n    </div>\r\n  </ng-template>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}